(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "./";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/core/je/je.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/arrayWithHoles.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/arrayWithHoles.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/arrayWithoutHoles.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

module.exports = _arrayWithoutHoles;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/assertThisInitialized.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/assertThisInitialized.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/asyncToGenerator.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/asyncToGenerator.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/defineProperty.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/defineProperty.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/getPrototypeOf.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/getPrototypeOf.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/inherits.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/inherits.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/setPrototypeOf.js");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireWildcard.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireWildcard.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/typeof.js");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

module.exports = _interopRequireWildcard;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/iterableToArray.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/iterableToArray.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

module.exports = _iterableToArray;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/iterableToArrayLimit.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
    return;
  }

  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/nonIterableRest.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/nonIterableRest.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

module.exports = _nonIterableRest;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/nonIterableSpread.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/nonIterableSpread.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

module.exports = _nonIterableSpread;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/objectWithoutProperties.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/objectWithoutProperties.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var objectWithoutPropertiesLoose = __webpack_require__(/*! ./objectWithoutPropertiesLoose */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/objectWithoutPropertiesLoose.js");

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

module.exports = _objectWithoutProperties;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/objectWithoutPropertiesLoose.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/objectWithoutPropertiesLoose.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

module.exports = _objectWithoutPropertiesLoose;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/possibleConstructorReturn.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/typeof.js");

var assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/assertThisInitialized.js");

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/setPrototypeOf.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/setPrototypeOf.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/slicedToArray.js":
/*!************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/slicedToArray.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/arrayWithHoles.js");

var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/iterableToArrayLimit.js");

var nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/nonIterableRest.js");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/toConsumableArray.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/toConsumableArray.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/arrayWithoutHoles.js");

var iterableToArray = __webpack_require__(/*! ./iterableToArray */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/iterableToArray.js");

var nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/nonIterableSpread.js");

function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/typeof.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/typeof.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/regenerator/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/_@babel_runtime@7.7.7@@babel/runtime/regenerator/index.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ "./node_modules/_regenerator-runtime@0.13.3@regenerator-runtime/runtime.js");

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/index.js":
/*!***************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/axios */ "./node_modules/_axios@0.18.1@axios/lib/axios.js");

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/adapters/xhr.js":
/*!**************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/adapters/xhr.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/_axios@0.18.1@axios/lib/utils.js");

var settle = __webpack_require__(/*! ./../core/settle */ "./node_modules/_axios@0.18.1@axios/lib/core/settle.js");

var buildURL = __webpack_require__(/*! ./../helpers/buildURL */ "./node_modules/_axios@0.18.1@axios/lib/helpers/buildURL.js");

var parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ "./node_modules/_axios@0.18.1@axios/lib/helpers/parseHeaders.js");

var isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ "./node_modules/_axios@0.18.1@axios/lib/helpers/isURLSameOrigin.js");

var createError = __webpack_require__(/*! ../core/createError */ "./node_modules/_axios@0.18.1@axios/lib/core/createError.js");

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest(); // HTTP basic authentication

    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true); // Set the request timeout in MS

    request.timeout = config.timeout; // Listen for ready state

    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      } // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request


      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      } // Prepare the response


      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };
      settle(resolve, reject, response); // Clean up request

      request = null;
    }; // Handle low level network errors


    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request)); // Clean up request

      request = null;
    }; // Handle timeout


    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', request)); // Clean up request

      request = null;
    }; // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.


    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(/*! ./../helpers/cookies */ "./node_modules/_axios@0.18.1@axios/lib/helpers/cookies.js"); // Add xsrf header


      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    } // Add headers to the request


    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    } // Add withCredentials to request if needed


    if (config.withCredentials) {
      request.withCredentials = true;
    } // Add responseType to request if needed


    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    } // Handle progress if needed


    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    } // Not all browsers support upload events


    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel); // Clean up request

        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    } // Send the request


    request.send(requestData);
  });
};

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/axios.js":
/*!*******************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/axios.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/_axios@0.18.1@axios/lib/utils.js");

var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/_axios@0.18.1@axios/lib/helpers/bind.js");

var Axios = __webpack_require__(/*! ./core/Axios */ "./node_modules/_axios@0.18.1@axios/lib/core/Axios.js");

var defaults = __webpack_require__(/*! ./defaults */ "./node_modules/_axios@0.18.1@axios/lib/defaults.js");
/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */


function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context); // Copy axios.prototype to instance

  utils.extend(instance, Axios.prototype, context); // Copy context to instance

  utils.extend(instance, context);
  return instance;
} // Create the default instance to be exported


var axios = createInstance(defaults); // Expose Axios class to allow class inheritance

axios.Axios = Axios; // Factory for creating new instances

axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
}; // Expose Cancel & CancelToken


axios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ "./node_modules/_axios@0.18.1@axios/lib/cancel/Cancel.js");
axios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ "./node_modules/_axios@0.18.1@axios/lib/cancel/CancelToken.js");
axios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ "./node_modules/_axios@0.18.1@axios/lib/cancel/isCancel.js"); // Expose all/spread

axios.all = function all(promises) {
  return Promise.all(promises);
};

axios.spread = __webpack_require__(/*! ./helpers/spread */ "./node_modules/_axios@0.18.1@axios/lib/helpers/spread.js");
module.exports = axios; // Allow use of default import syntax in TypeScript

module.exports.default = axios;

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/cancel/Cancel.js":
/*!***************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/cancel/Cancel.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */

function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;
module.exports = Cancel;

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/cancel/CancelToken.js":
/*!********************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/cancel/CancelToken.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(/*! ./Cancel */ "./node_modules/_axios@0.18.1@axios/lib/cancel/Cancel.js");
/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */


function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });
  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}
/**
 * Throws a `Cancel` if cancellation has been requested.
 */


CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};
/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */


CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/cancel/isCancel.js":
/*!*****************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/cancel/isCancel.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/core/Axios.js":
/*!************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/core/Axios.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ./../defaults */ "./node_modules/_axios@0.18.1@axios/lib/defaults.js");

var utils = __webpack_require__(/*! ./../utils */ "./node_modules/_axios@0.18.1@axios/lib/utils.js");

var InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ "./node_modules/_axios@0.18.1@axios/lib/core/InterceptorManager.js");

var dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ "./node_modules/_axios@0.18.1@axios/lib/core/dispatchRequest.js");
/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */


function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}
/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */


Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, {
    method: 'get'
  }, this.defaults, config);
  config.method = config.method.toLowerCase(); // Hook up interceptors middleware

  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);
  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });
  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
}; // Provide aliases for supported request methods


utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function (url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});
utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function (url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});
module.exports = Axios;

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/core/InterceptorManager.js":
/*!*************************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/core/InterceptorManager.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/_axios@0.18.1@axios/lib/utils.js");

function InterceptorManager() {
  this.handlers = [];
}
/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */


InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};
/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */


InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};
/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */


InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/core/createError.js":
/*!******************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/core/createError.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(/*! ./enhanceError */ "./node_modules/_axios@0.18.1@axios/lib/core/enhanceError.js");
/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */


module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/core/dispatchRequest.js":
/*!**********************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/core/dispatchRequest.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/_axios@0.18.1@axios/lib/utils.js");

var transformData = __webpack_require__(/*! ./transformData */ "./node_modules/_axios@0.18.1@axios/lib/core/transformData.js");

var isCancel = __webpack_require__(/*! ../cancel/isCancel */ "./node_modules/_axios@0.18.1@axios/lib/cancel/isCancel.js");

var defaults = __webpack_require__(/*! ../defaults */ "./node_modules/_axios@0.18.1@axios/lib/defaults.js");

var isAbsoluteURL = __webpack_require__(/*! ./../helpers/isAbsoluteURL */ "./node_modules/_axios@0.18.1@axios/lib/helpers/isAbsoluteURL.js");

var combineURLs = __webpack_require__(/*! ./../helpers/combineURLs */ "./node_modules/_axios@0.18.1@axios/lib/helpers/combineURLs.js");
/**
 * Throws a `Cancel` if cancellation has been requested.
 */


function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}
/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */


module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config); // Support baseURL config

  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  } // Ensure headers exist


  config.headers = config.headers || {}; // Transform request data

  config.data = transformData(config.data, config.headers, config.transformRequest); // Flatten headers

  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers || {});
  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {
    delete config.headers[method];
  });
  var adapter = config.adapter || defaults.adapter;
  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config); // Transform response data

    response.data = transformData(response.data, response.headers, config.transformResponse);
    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config); // Transform response data

      if (reason && reason.response) {
        reason.response.data = transformData(reason.response.data, reason.response.headers, config.transformResponse);
      }
    }

    return Promise.reject(reason);
  });
};

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/core/enhanceError.js":
/*!*******************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/core/enhanceError.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */

module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;

  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  return error;
};

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/core/settle.js":
/*!*************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/core/settle.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(/*! ./createError */ "./node_modules/_axios@0.18.1@axios/lib/core/createError.js");
/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */


module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus; // Note: status is not exposed by XDomainRequest

  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError('Request failed with status code ' + response.status, response.config, null, response.request, response));
  }
};

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/core/transformData.js":
/*!********************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/core/transformData.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/_axios@0.18.1@axios/lib/utils.js");
/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */


module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });
  return data;
};

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/defaults.js":
/*!**********************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/defaults.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(/*! ./utils */ "./node_modules/_axios@0.18.1@axios/lib/utils.js");

var normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ "./node_modules/_axios@0.18.1@axios/lib/helpers/normalizeHeaderName.js");

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;

  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(/*! ./adapters/xhr */ "./node_modules/_axios@0.18.1@axios/lib/adapters/xhr.js");
  } else if (typeof process !== 'undefined') {
    // For node use HTTP adapter
    adapter = __webpack_require__(/*! ./adapters/http */ "./node_modules/_axios@0.18.1@axios/lib/adapters/xhr.js");
  }

  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),
  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');

    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
      return data;
    }

    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }

    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }

    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }

    return data;
  }],
  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) {
        /* Ignore */
      }
    }

    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',
  maxContentLength: -1,
  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};
defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};
utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});
utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});
module.exports = defaults;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../_process@0.11.10@process/browser.js */ "./node_modules/_process@0.11.10@process/browser.js")))

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/helpers/bind.js":
/*!**************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/helpers/bind.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);

    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    return fn.apply(thisArg, args);
  };
};

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/helpers/buildURL.js":
/*!******************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/helpers/buildURL.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/_axios@0.18.1@axios/lib/utils.js");

function encode(val) {
  return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');
}
/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */


module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;

  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];
    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }

        parts.push(encode(key) + '=' + encode(v));
      });
    });
    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/helpers/combineURLs.js":
/*!*********************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/helpers/combineURLs.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */

module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '') : baseURL;
};

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/helpers/cookies.js":
/*!*****************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/helpers/cookies.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/_axios@0.18.1@axios/lib/utils.js");

module.exports = utils.isStandardBrowserEnv() ? // Standard browser envs support document.cookie
function standardBrowserEnv() {
  return {
    write: function write(name, value, expires, path, domain, secure) {
      var cookie = [];
      cookie.push(name + '=' + encodeURIComponent(value));

      if (utils.isNumber(expires)) {
        cookie.push('expires=' + new Date(expires).toGMTString());
      }

      if (utils.isString(path)) {
        cookie.push('path=' + path);
      }

      if (utils.isString(domain)) {
        cookie.push('domain=' + domain);
      }

      if (secure === true) {
        cookie.push('secure');
      }

      document.cookie = cookie.join('; ');
    },
    read: function read(name) {
      var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
      return match ? decodeURIComponent(match[3]) : null;
    },
    remove: function remove(name) {
      this.write(name, '', Date.now() - 86400000);
    }
  };
}() : // Non standard browser env (web workers, react-native) lack needed support.
function nonStandardBrowserEnv() {
  return {
    write: function write() {},
    read: function read() {
      return null;
    },
    remove: function remove() {}
  };
}();

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/helpers/isAbsoluteURL.js":
/*!***********************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/helpers/isAbsoluteURL.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */

module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/helpers/isURLSameOrigin.js":
/*!*************************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/helpers/isURLSameOrigin.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/_axios@0.18.1@axios/lib/utils.js");

module.exports = utils.isStandardBrowserEnv() ? // Standard browser envs have full support of the APIs needed to test
// whether the request URL is of the same origin as current location.
function standardBrowserEnv() {
  var msie = /(msie|trident)/i.test(navigator.userAgent);
  var urlParsingNode = document.createElement('a');
  var originURL;
  /**
  * Parse a URL to discover it's components
  *
  * @param {String} url The URL to be parsed
  * @returns {Object}
  */

  function resolveURL(url) {
    var href = url;

    if (msie) {
      // IE needs attribute set twice to normalize properties
      urlParsingNode.setAttribute('href', href);
      href = urlParsingNode.href;
    }

    urlParsingNode.setAttribute('href', href); // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils

    return {
      href: urlParsingNode.href,
      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
      host: urlParsingNode.host,
      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
      hostname: urlParsingNode.hostname,
      port: urlParsingNode.port,
      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname
    };
  }

  originURL = resolveURL(window.location.href);
  /**
  * Determine if a URL shares the same origin as the current location
  *
  * @param {String} requestURL The URL to test
  * @returns {boolean} True if URL shares the same origin, otherwise false
  */

  return function isURLSameOrigin(requestURL) {
    var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
  };
}() : // Non standard browser envs (web workers, react-native) lack needed support.
function nonStandardBrowserEnv() {
  return function isURLSameOrigin() {
    return true;
  };
}();

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/helpers/normalizeHeaderName.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/helpers/normalizeHeaderName.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/_axios@0.18.1@axios/lib/utils.js");

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/helpers/parseHeaders.js":
/*!**********************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/helpers/parseHeaders.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/_axios@0.18.1@axios/lib/utils.js"); // Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers


var ignoreDuplicateOf = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];
/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */

module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) {
    return parsed;
  }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }

      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });
  return parsed;
};

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/helpers/spread.js":
/*!****************************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/helpers/spread.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */

module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};

/***/ }),

/***/ "./node_modules/_axios@0.18.1@axios/lib/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/_axios@0.18.1@axios/lib/utils.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/_axios@0.18.1@axios/lib/helpers/bind.js");

var isBuffer = __webpack_require__(/*! is-buffer */ "./node_modules/_is-buffer@2.0.4@is-buffer/index.js");
/*global toString:true*/
// utils is a library of generic helper functions non-specific to axios


var toString = Object.prototype.toString;
/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */

function isArray(val) {
  return toString.call(val) === '[object Array]';
}
/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */


function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}
/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */


function isFormData(val) {
  return typeof FormData !== 'undefined' && val instanceof FormData;
}
/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */


function isArrayBufferView(val) {
  var result;

  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    result = ArrayBuffer.isView(val);
  } else {
    result = val && val.buffer && val.buffer instanceof ArrayBuffer;
  }

  return result;
}
/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */


function isString(val) {
  return typeof val === 'string';
}
/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */


function isNumber(val) {
  return typeof val === 'number';
}
/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */


function isUndefined(val) {
  return typeof val === 'undefined';
}
/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */


function isObject(val) {
  return val !== null && typeof val === 'object';
}
/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */


function isDate(val) {
  return toString.call(val) === '[object Date]';
}
/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */


function isFile(val) {
  return toString.call(val) === '[object File]';
}
/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */


function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}
/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */


function isFunction(val) {
  return toString.call(val) === '[object Function]';
}
/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */


function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}
/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */


function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}
/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */


function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}
/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 */


function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return false;
  }

  return typeof window !== 'undefined' && typeof document !== 'undefined';
}
/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */


function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  } // Force an array if not already something iterable


  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}
/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */


function merge()
/* obj1, obj2, obj3, ... */
{
  var result = {};

  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }

  return result;
}
/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */


function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};

/***/ }),

/***/ "./node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/actionSheet/index.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/_babel-loader@8.0.6@babel-loader/lib!./node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./src/core/components/actionSheet/index.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default2 = {
  name: 'ActionSheet',
  props: {
    chooseList: {
      type: Array,
      "default": function _default() {
        return [];
      }
    }
  },
  data: function data() {
    return {
      isShow: false
    };
  },
  created: function created() {
    var _this = this;

    var oldBack = mui.back;

    mui.back = function () {
      if (_this.isShow) {
        _this.isShow = false;
      } else {
        oldBack();
      }
    };

    setTimeout(function () {
      _this.isShow = true;
    }, 300);
  },
  methods: {
    clickItem: function clickItem(index) {
      this.isShow = !this.isShow;
      this.cb({
        index: index
      });
    },
    cancel: function cancel() {
      this.isShow = !this.isShow;
      this.cb({
        index: 0
      });
    }
  }
};
exports["default"] = _default2;

/***/ }),

/***/ "./node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/imTreeUser/index.vue?vue&type=script&lang=js&":
/*!****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/_babel-loader@8.0.6@babel-loader/lib!./node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./src/core/components/imTreeUser/index.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/typeof.js"));

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default2 = {
  name: 'TreeModal',
  props: {
    cfgcopy: {
      type: Object,
      "default": function _default() {}
    },
    showChecked: {
      type: Boolean,
      required: true
    }
  },
  data: function data() {
    return {
      cfg: '',
      type: '',
      selection: [],
      selectwinTreeInfo: {
        keyword: ''
      },
      activeId: '',
      isMultiple: false,
      checkboxAll: false,
      listsLength: 0,
      showWaitItem: true,
      showSelected: false,
      data: [],
      expandIds: [],
      checkIds: [],
      pathText: '',
      secondNode: [],
      thirdNode: [],
      props: {
        label: 'text',
        children: 'children',
        isLeaf: 'leaf'
      }
    };
  },
  computed: {
    getTreeData: function getTreeData() {
      return this.data;
    }
  },
  created: function created() {
    var _this = this;

    var oldBack = mui.back;

    mui.back = function () {
      oldBack();
    };

    this.cfg = this.cfgcopy;
    var cfgs = JE.value(this.cfg.configInfo, '').split(',');
    var _code = cfgs[0]; // 配置编码

    if (JE.isEmpty(this.cfg.url) && JE.isEmpty(_code)) {
      JE.alert('编码不存在，请检查！');
      return;
    }

    this.isMultiple = ['M_', 'M'].indexOf(cfgs[3]) != -1; // 是否多选

    this.$nextTick(function () {
      mui.init({
        swipeBack: false // 🈲用右滑关闭功能

      });

      if (_this.isMultiple) {
        document.querySelector('#scroll-wrapper').style.top = "".concat(0, "px");
        var item2Show = false; // 子选项卡是否显示标志

        document.querySelector('#slider').addEventListener('slide', function (event) {
          if (event.detail.slideNumber === 1 && !item2Show) {
            // 切换到第二个选项卡
            // 根据具体业务，动态获得第二个选项卡内容；
            // 改变标志位，下次直接显示
            item2Show = true;
          }
        });
      } else {
        document.querySelector('#scroll-wrapper').style.top = 0;
      }
    });
    this.async = ['M_', 'S_'].indexOf(cfgs[3]) != -1; // 是否异步
    // 人员选择器，默认换成人员字典

    this.type = this.cfg.type;

    if (this.cfg.type == 'user') {
      this.cfg.type = 'tree';
      cfgs[0] = _code = 'JE_CORE_DEPTUSER';
      cfgs[2] = (cfgs[2] || '').replaceAll('USERNAME', 'text').replaceAll('USERID', 'id').replaceAll('USERCODE', 'code');
      this.cfg.configInfo = cfgs.join(',');
    } // 辅助配置项


    if (JE.isNotEmpty(this.cfg.otherConfig)) {
      var otherConfig = JE.isString(this.cfg.otherConfig) ? JE.decode(this.cfg.otherConfig) : this.cfg.otherConfig; // 主键

      if (JE.isNotEmpty(otherConfig.pkName)) {
        this.cfg.pkName = otherConfig.pkName;
      }
    }

    this.initConfig(); // 初始化

    var that = this;
    this.loadTree('ROOT', {
      callback: function callback() {
        that.initValue();
      }
    });
  },
  mounted: function mounted() {
    var _this2 = this;

    window.addEventListener('creatGroupBackTree', function (target) {
      // 执行默认选中
      _this2.$nextTick(function () {
        var idArray = [];
        target.detail.selection.filter(function (dataItem) {
          idArray.push(dataItem.id);
        });

        _this2.$set(_this2.cfgcopy, 'value', idArray.length > 1 ? idArray.join(',') : idArray[0]);

        _this2.initValue();
      });
    });
    this.$nextTick(function () {
      mui('.mui-input-row input').input(); // 监听input框 清除按钮的点击事件
    }); // 设置滚动条参数

    mui('#scroll-wrapper').scroll({
      bounce: false,
      // 回弹
      indicators: false,
      // 是否显示滚动条
      scrollY: true,
      // 是否竖向滚动
      scrollX: true,
      // 是否横向滚动
      deceleration: mui.os.ios ? 0.003 : 0.0009
    });
  },
  methods: {
    // 初始化tree  配置
    initConfig: function initConfig() {
      // 初始化数据集
      var cfgs = JE.value(this.cfg.configInfo, '').split(',');
      var _code = cfgs[0]; // 配置编码

      this.cfg.dataMap = {};
      this.cfg.pkName = JE.value(this.cfg.pkName || this.cfg.valueType, 'code'); // 主键

      this.cfg.selectType = JE.value(cfgs[4], 'T'); // N(上下都不级联) | T(选父节点级联选中子节点) | D(选子节点级联选择父节点) | A(上下全部级联)
      // 根节点过滤

      var rootId = ''; // JE.toXT(JE.value(otherConfig.rootId,''),me.formatData,me.parentData);
      // url取值

      if (JE.isEmpty(rootId) && (_code.split('/').length > 1 || _code.split('\\').length > 1)) {
        // url
        rootId = '__url';
      } // 查询选择的树形默认异步操作


      var ddList = [{
        ddCode: _code,
        ddName: '',
        async: false,
        // this.async,
        whereSql: this.cfg.whereSql,
        orderSql: '',
        parentSql: '',
        rootId: rootId,
        nodeInfo: _code,
        params: this.cfg.params || {},
        initParams: {},
        moreRoot: false,
        queryField: '',
        nodeField: '',
        formatValue: ''
      }]; // var url = '/dd/treeAction!loadTree.action',

      var url = JE.getUrlMaps('je.core.dd.tree.loadTree');
      var params = {
        node: 'ROOT',
        onlyItem: true,
        excludes: 'checked',
        strData: JE.encode(ddList)
      };

      if (this.cfg.type == 'user') {
        // url = 'rbac/userAction!loadAppUser.action';
        url = JE.getUrlMaps('je.core.rbac.user.loadAppUser');
        params = {
          whereSql: this.cfg.whereSql
        };
      }

      var dicCfg = {};
      JE.each(ddList, function (item) {
        dicCfg[item.ddCode] = item;
      }); // 树形配置信息

      this.cfg.treeConfig = {
        params: Ext.apply(params, this.cfg.params || {}),
        url: this.cfg.url || url,
        dicCfg: dicCfg,
        dicCfgList: ddList
      };
    },
    // 查询
    filterNode: function filterNode(value, data) {
      if (!value) return true;
      return data.text.indexOf(value) !== -1;
    },
    // 选中或取消选中
    handleCheckChange: function handleCheckChange(data, checkobj) {
      var _this3 = this;

      this.selection = [];
      var checkedNodes = checkobj.checkedNodes;
      var exp = this.cfg.enableExp; // 有效数据表达式

      checkedNodes.forEach(function (item) {
        if (JE.isNotEmpty(exp)) {
          if (JE.value(JE.eval(JE.toXT(exp, item), "\u53EF\u9009\u8868\u8FBE\u5F0F\u9519\u8BEF\uFF1A".concat(exp)), false)) {
            _this3.selection.push(item);
          }
        } else if (item.disable == '0') {
          _this3.selection.push(item);
        }
      });
      this.$emit('selection', {
        "boolean": this.showChecked,
        obj: this.selection
      });
    },
    // 异步节点展开  已经全选的处理
    handleNodeExpand: function handleNodeExpand(data, node) {
      var _this4 = this;

      var expandNodes = node.childNodes;

      if (expandNodes.length > 0) {
        expandNodes.forEach(function (item) {
          if (JE.isNotEmpty(_this4.cfg.enableExp)) {
            if (item.checked && JE.value(JE.eval(JE.toXT(_this4.cfg.enableExp, item.data), "\u53EF\u9009\u8868\u8FBE\u5F0F\u9519\u8BEF\uFF1A".concat(_this4.cfg.enableExp)), false)) {
              _this4.selection.push(item.data);
            }
          } else if (item.checked && item.data.disable == '0') {
            _this4.selection.push(item.data);
          }
        }); // 去重

        this.selection = this.dedupe(this.selection);
      } else if (expandNodes.length === 0) {
        setTimeout(function () {
          var checkNodes = _this4.$refs.tree.getCheckedNodes(true);

          checkNodes.forEach(function (item) {
            if (JE.isNotEmpty(_this4.cfg.enableExp)) {
              if (JE.value(JE.eval(JE.toXT(_this4.cfg.enableExp, item), "\u53EF\u9009\u8868\u8FBE\u5F0F\u9519\u8BEF\uFF1A".concat(_this4.cfg.enableExp)), false)) {
                _this4.selection.push(item);
              }
            } else if (item.disable == '0') {
              _this4.selection.push(item);
            }
          }); // 去重

          _this4.selection = _this4.dedupe(_this4.selection);
        }, 1500);
      }
    },
    // 数组去重
    dedupe: function dedupe(array) {
      return Array.from(new Set(array));
    },
    // 点击node 节点
    handleNodeClick: function handleNodeClick(data, obj) {// if (!this.isMultiple) {
      //   if (JE.isNotEmpty(this.cfg.enableExp)) {
      //     if (JE.value(JE.eval(JE.toXT(this.cfg.enableExp, data), `可选表达式错误：${this.cfg.enableExp}`), false)) {
      //       this.selection = [];
      //       this.selection.push(data);
      //     }
      //   } else if (data.disable == '0') {
      //     this.selection = [];
      //     this.selection.push(data);
      //   }
      //   this.$emit('selection', { boolean: this.showChecked, obj: this.selection });
      // }
    },
    // 异步加载 tree
    loadNode: function loadNode(node, resolve) {
      var _this5 = this;

      console.log(node, node.level);

      if (node.level == 0) {
        return resolve(this.data);
      } // 最后一级  return


      if (node.isLeaf) return resolve([]);
      setTimeout(function () {
        _this5.loadTree(node.data.id_ || node.id, {
          callback: function callback(data) {
            resolve(data);
          }
        });
      }, 50);
    },
    // 滑动
    slide: function slide() {// const index = e.detail.slideNumber;
    },
    // 删除所有已选数据
    clearSelect: function clearSelect() {
      this.selection = [];
      this.$refs.tree.setCheckedKeys([]);
    },
    // 删除某一个选中的数据
    deleteItem: function deleteItem(index) {
      this.selection.splice(index, 1);
      this.$refs.tree.setCheckedNodes(this.selection);
    },
    // 初始化值
    initValue: function initValue() {
      var that = this;
      var value = this.cfg.value;
      var pkName = this.cfg.pkName;
      var cfgs = (this.cfg.configInfo || '').split(',');
      var fs = JE.isNotEmpty(cfgs[1]) ? cfgs[1].split('~') : [];
      var rs = JE.isNotEmpty(cfgs[2]) ? cfgs[2].split('~') : [];

      if (fs.length != rs.length) {
        return;
      }

      var _pkName = ''; // 表单对应的主键值字段名

      JE.each(rs, function (name, index) {
        if (name == pkName) {
          _pkName = fs[index]; // 如果是表单，但是没有对应的主键字段，自动生成，用于下次初始化值用：一般用于查询界面
          // eslint-disable-next-line no-shadow

          var type = document.documentElement.getAttribute('data-type');

          if (['form', 'search'].indexOf(type) != -1 && window.APP && window.APP.form) {
            // 添加默认字段
            var field = window.APP.form.getFields(_pkName);

            if (!field) {
              var form = JE.select('.je-form');
              var dom = document.createElement('input');
              dom.setAttribute('type', 'hidden');
              dom.setAttribute('class', 'je-submit-field');
              dom.setAttribute('data-name', _pkName);
              form.appendChild(dom);

              window.APP.form._createField({
                name: _pkName,
                xtype: 'textfield',
                dom: dom,
                options: {}
              });
            }

            value = window.APP.form.getValues(_pkName);
          }

          return false;
        }
      }); // 如果值为空或者没有对应的主键字段，取消默认选中

      if (JE.isEmpty(value)) {
        return;
      } // 查询节点


      JE.ajax({
        // url:'/dd/treeAction!findAsyncNodes.action',
        url: JE.getUrlMaps('je.core.dd.tree.findAsyncNodes'),
        params: {
          type: pkName || 'id',
          value: value,
          strData: JE.encode(that.cfg.treeConfig.dicCfgList)
        },
        callback: function callback(success, obj) {
          if (success) {
            that.recursionObj(obj, false); // 已选择的数据

            that.selection = obj; // 默认展开的节点集合

            obj.forEach(function (item) {
              that.expandIds.push(item.parent.split('_')[0]);
              that.checkIds.push(item.id);
            });
            that.expandIds = that.dedupe(that.expandIds); // 单选、多选的默认高亮

            if (!that.isMultiple) {
              // 单选
              that.$refs.tree.setCurrentKey(obj[0].id);
            } else {
              // 多选
              that.$nextTick(function () {
                that.$refs.tree.setCheckedKeys(that.checkIds);
              });
            }
          }
        }
      });
    },
    // 递归处理多选时候数据的禁用
    recursionObj: function recursionObj(obj, ifcfg) {
      var _this6 = this;

      if (obj && (0, _typeof2["default"])(obj) == 'object' && obj.constructor == Array) {
        obj.forEach(function (item, index) {
          // 待选数据的总数计算
          if (ifcfg) {
            _this6.listsLength += 1;
          } // 记录下系统配置的disabled值  0 可选有效数据  1 不可选无效数据


          obj[index].disable = obj[index].disabled; // 默认全部能选

          obj[index].disabled = false; // id值转换

          obj[index].id_ = item.id;
          var keyId = item.id.split('_')[0];
          obj[index].id = keyId; // 在本地store根据id存储数据

          _this6.cfg.dataMap[item.id] = item; // 根据nodepath字段 处理已选数据 名字下面展示部门级联 **公司/**部门/张三

          var path = item.nodePath.substr(6).split('/');
          var pathText = '';
          path.forEach(function (id) {
            // 要判断本地store中是否有保存的数据  不然会报错  影响后续程序的执行
            pathText += _this6.cfg.dataMap[id] ? "/".concat(_this6.cfg.dataMap[id].text) : '';
          });
          obj[index].pathText = pathText.substr(1); // 人员选择 添加头像

          if (_this6.type === 'user' && item.leaf) {
            _this6.$set(obj[index], 'photo', JE.getUserPhoto(item.bean.ID, true));
          } // 把bean字段中的数据放出来


          Object.assign(obj[index], item.bean); // children字段有数据 就递归处理

          if (item.children.length > 0) {
            _this6.recursionObj(item.children, ifcfg);
          }
        });
      }
    },
    // 加载数据
    loadTree: function loadTree(id, cfg) {
      var that = this;
      var dataMap = this.cfg.dataMap;
      cfg = cfg || {}; // 初始化数据

      if (JE.isEmpty(dataMap) && id === 'ROOT') {
        var dicInfo = this.cfg.treeConfig.dicCfgList[0];
        id = JE.isEmpty(dicInfo.nodeInfo) ? 'ROOT' : "ROOT_".concat(dicInfo.nodeInfo);
        var root = {
          id: id,
          nodeInfo: dicInfo.nodeInfo,
          children: [],
          text: '全部'
        };
        this.cfg.dataMap = dataMap = {};
        this.cfg.dataMap[id] = root;
      }

      var node = dataMap[id];

      if (JE.isEmpty(node)) {
        return;
      } // 树形配置信息


      var treeCfg = this.cfg.treeConfig; // 加载数据

      var params = treeCfg.params,
          url = treeCfg.url;

      if (id.split('_')[0] != 'ROOT') {
        var nodeId = id.split('_')[0]; // 修改rootid

        var strData = JE.decode(params.strData);
        JE.each(strData, function (item) {
          if (JE.isEmpty(item.nodeInfo) || item.nodeInfo == node.nodeInfo) {
            item.rootId = nodeId;
            item.isRoot = '0';
            strData = [item];
            return false;
          }
        });
        params.strData = JE.encode(strData);
      }

      console.log();
      JE.ajax({
        url: url,
        params: params,
        callback: function callback(success, obj) {
          // 递归处理数据
          if (success) {
            that.recursionObj(obj, true); // 异步 获取一级节点的数据  同步 就是全部的集合

            if (id === 'ROOT' || id === "ROOT_".concat(treeCfg.dicCfgList[0].nodeInfo)) {
              if (that.cfg.configInfo.split(',')[0] !== 'JE_COMM_SSQX') {
                that.expandIds = [obj[0].id]; // 默认展开二级
              } // loadTree
              // that.loadTree(obj.id)


              console.log(obj); // that.loadTree(obj[]);

              that.data = obj;
            } // 异步 获取子节点的数据处理 存储到本地store中
            // if (that.async) {


            for (var i = 0; i < obj.length; i++) {
              that.cfg.dataMap[obj[i].id_] = obj[i];
            } // }


            if (cfg.callback) {
              cfg.callback(obj);
            }
          }
        }
      });
      console.log(this.data);
    },
    // 异步查询
    doAsyncSearch: function doAsyncSearch(keyword) {
      var that = this;
      var dicInfo = this.cfg.treeConfig.dicCfgList[0];

      if (JE.isEmpty(keyword)) {
        // 先重新初始化数据
        this.initConfig();
        this.loadTree('ROOT');
      } else {
        // 查询节点
        JE.ajax({
          // url:'/dd/treeAction!findAsyncNodes.action',
          url: this.cfg.url || JE.getUrlMaps('je.core.dd.tree.findAsyncNodes'),
          params: {
            type: 'liketext',
            value: keyword,
            // keyword,
            strData: JE.encode([dicInfo])
          },
          callback: function callback(success, obj) {
            that.listsLength = 0;
            that.recursionObj(obj, false);
            that.data = obj;
          }
        });
      }
    }
  }
};
exports["default"] = _default2;

/***/ }),

/***/ "./node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/treeUser/index.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/_babel-loader@8.0.6@babel-loader/lib!./node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./src/core/components/treeUser/index.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/typeof.js"));

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default2 = {
  name: 'TreeModal',
  props: {
    cfg: {
      type: Object,
      "default": function _default() {}
    }
  },
  data: function data() {
    return {
      type: '',
      selection: [],
      selectwinTreeInfo: {
        keyword: ''
      },
      activeId: '',
      isHide: true,
      inputValue: '',
      isMultiple: false,
      checkboxAll: false,
      listsLength: 0,
      showWaitItem: true,
      showSelected: false,
      data: [],
      expandIds: [],
      checkIds: [],
      pathText: '',
      secondNode: [],
      thirdNode: [],
      props: {
        label: 'text',
        children: 'children',
        isLeaf: 'leaf'
      },
      isAsyncSearch: false
    };
  },
  computed: {
    getTreeData: function getTreeData() {
      return this.data;
    }
  },
  watch: {
    inputValue: function inputValue(nv, ov) {
      var _this = this;

      this.$nextTick(function () {
        if (nv !== ov) {
          _this.isAsyncSearch = false;

          if (!_this.cfg.async && !_this.async) {
            _this.$refs.tree.filter(nv);
          } else {
            _this.doAsyncSearch(nv);
          }
        }
      });
    }
  },
  created: function created() {
    var _this2 = this;

    setTimeout(function () {
      _this2.isHide = false;
    }, 300);
    var oldBack = mui.back;

    mui.back = function () {
      if (!_this2.isHide) {
        _this2.isHide = true;
      } else {
        oldBack();
      }
    };

    var cfgs = JE.value(this.cfg.configInfo, '').split(',');
    var _code = cfgs[0]; // 配置编码

    if (JE.isEmpty(this.cfg.url) && JE.isEmpty(_code)) {
      JE.alert('编码不存在，请检查！');
      return;
    }

    this.isMultiple = ['M_', 'M'].indexOf(cfgs[3]) != -1; // 是否多选

    this.$nextTick(function () {
      mui.init({
        swipeBack: false // 🈲用右滑关闭功能

      });

      if (_this2.isMultiple) {
        document.querySelector('#scroll-wrapper').style.top = "".concat(43, "px");
        var item2Show = false; // 子选项卡是否显示标志

        document.querySelector('#slider').addEventListener('slide', function (event) {
          if (event.detail.slideNumber === 1 && !item2Show) {
            // 切换到第二个选项卡
            // 根据具体业务，动态获得第二个选项卡内容；
            // 改变标志位，下次直接显示
            item2Show = true;
          }
        });
      } else {
        document.querySelector('#scroll-wrapper').style.top = 0;
      }
    });
    this.async = ['M_', 'S_'].indexOf(cfgs[3]) != -1; // 是否异步
    // 人员选择器，默认换成人员字典

    this.type = this.cfg.type;

    if (this.cfg.type == 'user') {
      this.cfg.type = 'tree';
      cfgs[0] = _code = 'JE_CORE_DEPTUSER';
      cfgs[2] = (cfgs[2] || '').replaceAll('USERNAME', 'text').replaceAll('USERID', 'id').replaceAll('USERCODE', 'code');
      this.cfg.configInfo = cfgs.join(',');
    } // 辅助配置项


    if (JE.isNotEmpty(this.cfg.otherConfig)) {
      var otherConfig = JE.isString(this.cfg.otherConfig) ? JE.decode(this.cfg.otherConfig) : this.cfg.otherConfig; // 主键

      if (JE.isNotEmpty(otherConfig.pkName)) {
        this.cfg.pkName = otherConfig.pkName;
      }
    }

    this.initConfig(); // 初始化

    var that = this;
    this.loadTree('ROOT', {
      callback: function callback() {
        that.initValue();
      }
    });
  },
  mounted: function mounted() {
    var _this3 = this;

    this.$nextTick(function () {
      mui('.mui-input-row input').input(); // 监听软键盘的回车事件

      _this3.$refs.winInput.addEventListener('keypress', function (event) {
        if ((event.keyCode || event.which) == '13') {
          document.activeElement.blur(); // 收起虚拟键盘

          if (!_this3.cfg.async && !_this3.async) {
            _this3.$refs.tree.filter(_this3.inputValue);
          } else {
            _this3.doAsyncSearch(_this3.inputValue);
          }

          event.preventDefault(); // 阻止默认事件---阻止页面刷新
        }
      }); // 监听input框 清除按钮的点击事件

      /* if (mui('.mui-input-clear')[0]) {
        mui('.mui-input-clear')[0].addEventListener('focus', () => {
          mui('.mui-icon-clear')[0].addEventListener('tap', () => {
            this.inputValue = '';
          });
        });
      } */


      var that = _this3;

      if (mui('.mui-input-clear')) {
        mui('.mui-input-clear').each(function () {
          this.addEventListener('focus', function () {
            mui('.mui-icon-clear').each(function () {
              this.addEventListener('tap', function () {
                that.inputValue = '';
              });
            });
          });
        });
      }
    }); // 设置滚动条参数

    mui('#scroll-wrapper').scroll({
      bounce: false,
      // 回弹
      indicators: false,
      // 是否显示滚动条
      scrollY: true,
      // 是否竖向滚动
      scrollX: true,
      // 是否横向滚动
      deceleration: mui.os.ios ? 0.003 : 0.0009
    });
  },
  methods: {
    // 初始化tree  配置
    initConfig: function initConfig() {
      // 初始化数据集
      var cfgs = JE.value(this.cfg.configInfo, '').split(',');
      var _code = cfgs[0]; // 配置编码

      this.cfg.dataMap = {};
      this.cfg.pkName = JE.value(this.cfg.pkName || this.cfg.valueType, 'code'); // 主键

      this.cfg.selectType = JE.value(cfgs[4], 'T'); // N(上下都不级联) | T(选父节点级联选中子节点) | D(选子节点级联选择父节点) | A(上下全部级联)
      // 根节点过滤

      var rootId = ''; // JE.toXT(JE.value(otherConfig.rootId,''),me.formatData,me.parentData);
      // url取值

      if (JE.isEmpty(rootId) && (_code.split('/').length > 1 || _code.split('\\').length > 1)) {
        // url
        rootId = '__url';
      } // 查询选择的树形默认异步操作


      var ddList = [{
        // eslint-disable-next-line max-len
        ddCode: _code,
        ddName: '',
        async: this.async,
        whereSql: this.cfg.whereSql,
        orderSql: '',
        parentSql: '',
        rootId: rootId,
        nodeInfo: _code,
        params: this.cfg.params || {},
        initParams: {},
        moreRoot: false,
        queryField: '',
        nodeField: '',
        formatValue: ''
      }]; // var url = '/dd/treeAction!loadTree.action',

      var url = JE.getUrlMaps('je.core.dd.tree.loadTree');
      var params = {
        node: 'ROOT',
        onlyItem: true,
        excludes: 'checked',
        strData: JE.encode(ddList)
      };

      if (this.cfg.type == 'user') {
        // url = 'rbac/userAction!loadAppUser.action';
        url = JE.getUrlMaps('je.core.rbac.user.loadAppUser');
        params = {
          whereSql: this.cfg.whereSql
        };
      }

      var dicCfg = {};
      JE.each(ddList, function (item) {
        dicCfg[item.ddCode] = item;
      }); // 树形配置信息

      this.cfg.treeConfig = {
        params: JE.apply(params, this.cfg.params || {}),
        url: this.cfg.url || url,
        dicCfg: dicCfg,
        dicCfgList: ddList
      };
    },
    // 查询
    filterNode: function filterNode(value, data) {
      if (!value) return true;
      return data.text.indexOf(value) !== -1;
    },
    // 选中或取消选中
    handleCheckChange: function handleCheckChange(data, checkobj) {
      var _this4 = this;

      if (!this.isAsyncSearch) {
        this.selection = [];
      }

      var checkedNodes = checkobj.checkedNodes;
      var exp = this.cfg.enableExp; // 有效数据表达式

      checkedNodes.forEach(function (item) {
        if (JE.isNotEmpty(exp)) {
          if (JE.value(JE.eval(JE.toXT(exp, item), "\u53EF\u9009\u8868\u8FBE\u5F0F\u9519\u8BEF\uFF1A".concat(exp)), false)) {
            _this4.selection.push(item);
          }
        } else if (item.disable == '0') {
          _this4.selection.push(item);
        }
      });
      this.selection = this.dedupe(this.selection);

      if (this.selection.length > 0) {
        this.checkIds = [];
        this.selection.forEach(function (item) {
          _this4.expandIds.push(item.parent.split('_')[0]);

          _this4.checkIds.push(item.id);
        });
        this.expandIds = this.dedupe(this.expandIds); // 单选、多选的默认高亮

        if (!this.isMultiple) {
          // 单选
          this.$refs.tree.setCurrentKey(this.selection[0].id);
        } else {
          // 多选
          this.$nextTick(function () {
            _this4.$refs.tree.setCheckedKeys(_this4.checkIds);
          });
        }
      }
    },
    // 异步节点展开  已经全选的处理
    handleNodeExpand: function handleNodeExpand(data, node) {
      var _this5 = this;

      var expandNodes = node.childNodes;

      if (expandNodes.length > 0) {
        expandNodes.forEach(function (item) {
          if (JE.isNotEmpty(_this5.cfg.enableExp)) {
            if (item.checked && JE.value(JE.eval(JE.toXT(_this5.cfg.enableExp, item.data), "\u53EF\u9009\u8868\u8FBE\u5F0F\u9519\u8BEF\uFF1A".concat(_this5.cfg.enableExp)), false)) {
              _this5.selection.push(item.data);
            }
          } else if (item.checked && item.data.disable == '0') {
            _this5.selection.push(item.data);
          }
        }); // 去重

        this.selection = this.dedupe(this.selection);
      } else if (expandNodes.length === 0) {
        setTimeout(function () {
          var checkNodes = _this5.$refs.tree.getCheckedNodes(true);

          checkNodes.forEach(function (item) {
            if (JE.isNotEmpty(_this5.cfg.enableExp)) {
              if (JE.value(JE.eval(JE.toXT(_this5.cfg.enableExp, item), "\u53EF\u9009\u8868\u8FBE\u5F0F\u9519\u8BEF\uFF1A".concat(_this5.cfg.enableExp)), false)) {
                _this5.selection.push(item);
              }
            } else if (item.disable == '0') {
              _this5.selection.push(item);
            }
          }); // 去重

          _this5.selection = _this5.dedupe(_this5.selection);
        }, 1500);
      }
    },
    // 数组去重
    dedupe: function dedupe(array) {
      // return Array.from(new Set(array));
      var res = new Map();
      return array.filter(function (a) {
        return !res.has(a.id) && res.set(a.id, 1);
      });
    },
    // 点击node 节点
    handleNodeClick: function handleNodeClick(data) {
      if (!this.isMultiple) {
        if (JE.isNotEmpty(this.cfg.enableExp)) {
          if (JE.value(JE.eval(JE.toXT(this.cfg.enableExp, data), "\u53EF\u9009\u8868\u8FBE\u5F0F\u9519\u8BEF\uFF1A".concat(this.cfg.enableExp)), false)) {
            this.selection = [];
            this.selection.push(data);
          }
        } else if (data.disable == '0') {
          this.selection = [];
          this.selection.push(data);
        }
      }
    },
    // 异步加载 tree
    loadNode: function loadNode(node, resolve) {
      var _this6 = this;

      if (node.level === 0) {
        return resolve(this.data);
      } // 最后一级  return


      if (node.isLeaf) return resolve([]);
      setTimeout(function () {
        // 处理异步查询  不要展开下级
        if (!_this6.isAsyncSearch) {
          _this6.loadTree(node.data.id_, {
            callback: function callback(data) {
              resolve(data);
            }
          });
        } else {
          return resolve([]);
        }
      }, 50);
    },
    // 滑动
    slide: function slide() {// const index = e.detail.slideNumber;
    },
    // 删除所有已选数据
    clearSelect: function clearSelect() {
      this.selection = [];
      this.$refs.tree.setCheckedKeys([]);
    },
    // 删除某一个选中的数据
    deleteItem: function deleteItem(index) {
      this.selection.splice(index, 1);
      this.$refs.tree.setCheckedNodes(this.selection);
    },
    // 初始化值
    initValue: function initValue() {
      var that = this;
      var value = this.cfg.value;
      var pkName = this.cfg.pkName;
      var cfgs = (this.cfg.configInfo || '').split(',');
      var fs = JE.isNotEmpty(cfgs[1]) ? cfgs[1].split('~') : [];
      var rs = JE.isNotEmpty(cfgs[2]) ? cfgs[2].split('~') : [];

      if (fs.length != rs.length) {
        return;
      }

      var _pkName = ''; // 表单对应的主键值字段名

      JE.each(rs, function (name, index) {
        if (name == pkName) {
          _pkName = fs[index]; // 如果是表单，但是没有对应的主键字段，自动生成，用于下次初始化值用：一般用于查询界面
          // eslint-disable-next-line no-shadow

          var type = document.documentElement.getAttribute('data-type');

          if (['form', 'search'].indexOf(type) != -1 && window.APP && window.APP.form) {
            // 添加默认字段
            var field = window.APP.form.getFields(_pkName);

            if (!field) {
              var form = JE.select('.je-form');
              var dom = document.createElement('input');
              dom.setAttribute('type', 'hidden');
              dom.setAttribute('class', 'je-submit-field');
              dom.setAttribute('data-name', _pkName);
              form.appendChild(dom);

              window.APP.form._createField({
                name: _pkName,
                xtype: 'textfield',
                dom: dom,
                options: {}
              });
            }

            value = window.APP.form.getValues(_pkName);
          }

          return false;
        }
      }); // 如果值为空或者没有对应的主键字段，取消默认选中

      if (JE.isEmpty(value)) {
        return;
      } // 查询节点


      JE.ajax({
        // url:'/dd/treeAction!findAsyncNodes.action',
        url: JE.getUrlMaps('je.core.dd.tree.findAsyncNodes'),
        params: {
          type: pkName || 'id',
          value: value,
          strData: JE.encode(this.cfg.treeConfig.dicCfgList)
        },
        callback: function callback(success, obj) {
          if (success) {
            that.recursionObj(obj, false); // 已选择的数据

            that.selection = obj; // 默认展开的节点集合

            obj.forEach(function (item) {
              that.expandIds.push(item.parent.split('_')[0]);
              that.checkIds.push(item.id);
            });
            that.expandIds = that.dedupe(that.expandIds); // 单选、多选的默认高亮

            if (!that.isMultiple) {
              // 单选
              that.$refs.tree.setCurrentKey(obj[0].id);
            } else {
              // 多选
              that.$nextTick(function () {
                that.$refs.tree.setCheckedKeys(that.checkIds);
              });
            }
          }
        }
      });
    },
    // 递归处理多选时候数据的禁用
    recursionObj: function recursionObj(obj, ifcfg) {
      var _this7 = this;

      if (obj && (0, _typeof2["default"])(obj) == 'object' && obj.constructor == Array) {
        obj.forEach(function (item, index) {
          // 待选数据的总数计算
          if (ifcfg) {
            _this7.listsLength += 1;
          } // 记录下系统配置的disabled值  0 可选有效数据  1 不可选无效数据


          obj[index].disable = obj[index].disabled; // 默认全部能选

          obj[index].disabled = false; // id值转换

          obj[index].id_ = item.id;
          var keyId = item.id.split('_')[0];
          obj[index].id = keyId; // 在本地store根据id存储数据

          _this7.cfg.dataMap[item.id] = item; // 根据nodepath字段 处理已选数据 名字下面展示部门级联 **公司/**部门/张三

          var path = item.nodePath.substr(6).split('/');
          var pathText = '';
          path.forEach(function (id) {
            // 要判断本地store中是否有保存的数据  不然会报错  影响后续程序的执行
            pathText += _this7.cfg.dataMap[id] ? "/".concat(_this7.cfg.dataMap[id].text) : '';
          });
          obj[index].pathText = pathText.substr(1); // 人员选择 添加头像

          if (_this7.type === 'user' && item.leaf) {
            _this7.$set(obj[index], 'photo', JE.getUserPhoto(item.bean.ID, true));
          } // 把bean字段中的数据放出来


          Object.assign(obj[index], item.bean); // children字段有数据 就递归处理

          if (item.children.length > 0) {
            _this7.recursionObj(item.children, ifcfg);
          }
        });
      }
    },
    // 加载数据
    loadTree: function loadTree(id, cfg) {
      var that = this;
      var dataMap = this.cfg.dataMap;
      cfg = cfg || {}; // 初始化数据

      if (JE.isEmpty(dataMap) && id === 'ROOT') {
        var dicInfo = this.cfg.treeConfig.dicCfgList[0];
        id = JE.isEmpty(dicInfo.nodeInfo) ? 'ROOT' : "ROOT_".concat(dicInfo.nodeInfo);
        var root = {
          id: id,
          nodeInfo: dicInfo.nodeInfo,
          children: [],
          text: '全部'
        };
        this.cfg.dataMap = dataMap = {};
        this.cfg.dataMap[id] = root;
      }

      var node = dataMap[id];

      if (JE.isEmpty(node)) {
        return;
      } // 树形配置信息


      var treeCfg = this.cfg.treeConfig; // 加载数据

      var params = treeCfg.params,
          url = treeCfg.url;

      if (id.split('_')[0] != 'ROOT') {
        var nodeId = id.split('_')[0]; // 修改rootid

        var strData = JE.decode(params.strData);
        JE.each(strData, function (item) {
          if (JE.isEmpty(item.nodeInfo) || item.nodeInfo == node.nodeInfo) {
            item.rootId = nodeId;
            item.isRoot = '0';
            strData = [item];
            return false;
          }
        });
        params.strData = JE.encode(strData);
      }

      JE.ajax({
        url: url,
        params: params,
        callback: function callback(success, obj) {
          console.log('obj', obj); // 递归处理数据

          if (success) {
            that.recursionObj(obj, true); // 异步 获取一级节点的数据  同步 就是全部的集合

            if (id === 'ROOT' || id === "ROOT_".concat(treeCfg.dicCfgList[0].nodeInfo)) {
              if (obj && Array.isArray(obj) && obj.length === 1) {
                that.expandIds = [obj[0].id]; // 默认展开二级
              }

              that.data = obj;
            }

            if (that.selection.length > 0) {
              that.selection.forEach(function (item) {
                that.expandIds.push(item.parent.split('_')[0]);
                that.checkIds.push(item.id);
              });
              that.expandIds = that.dedupe(that.expandIds); // 单选、多选的默认高亮

              if (!that.isMultiple) {
                // 单选
                that.$refs.tree.setCurrentKey(that.selection[0].id);
              } else {
                // 多选
                that.$nextTick(function () {
                  that.$refs.tree.setCheckedKeys(that.checkIds);
                });
              }
            } // 异步 获取子节点的数据处理 存储到本地store中


            if (that.async) {
              for (var i = 0; i < obj.length; i++) {
                that.cfg.dataMap[obj[i].id_] = obj[i];
              }
            }

            if (cfg.callback) {
              cfg.callback(obj);
            }
          }
        }
      });
    },
    // 异步查询
    doAsyncSearch: function doAsyncSearch(keyword) {
      var that = this;
      var dicInfo = this.cfg.treeConfig.dicCfgList[0];

      if (JE.isEmpty(keyword)) {
        // 先重新初始化数据
        this.initConfig();
        this.loadTree('ROOT');
      } else {
        // 查询节点
        JE.ajax({
          // url:'/dd/treeAction!findAsyncNodes.action',
          url: this.cfg.url || JE.getUrlMaps('je.core.dd.tree.findAsyncNodes'),
          params: {
            type: 'liketext',
            value: keyword,
            strData: JE.encode([dicInfo])
          },
          callback: function callback(success, obj) {
            that.listsLength = obj.length;
            that.recursionObj(obj, false);
            that.data = obj;
            that.isAsyncSearch = true;
          }
        });
      }
    },
    // 点击待选,已选数据切换
    slideTab: function slideTab(index) {
      mui('#scroll-wrapper').scroll().scrollTo(0, 0, 100); // 100毫秒滚动到顶

      if (index === 1) {
        this.showWaitItem = true;
        this.showSelected = false;
      } else if (index === 2) {
        this.showWaitItem = false;
        this.showSelected = true;
      }
    },
    // 点击取消
    cancelChoose: function cancelChoose(e) {
      var _this8 = this;

      e.stopPropagation();
      setTimeout(function () {
        _this8.isHide = true;
      }, 10);
    },
    // 点击确定
    dosureChoose: function dosureChoose(e) {
      var _this9 = this;

      e.stopPropagation();
      setTimeout(function () {
        _this9.isHide = true;
        /* if (this.isMultiple) {
          mui.toast('已为您自动剔除无效数据');
        } */

        _this9.dosureCb(_this9.selection, _this9.cfg.pkName);
      }, 10);
    },
    // 点击搜索图标 进行搜索
    clickSearch: function clickSearch() {
      if (!this.cfg.async && !this.async) {
        this.$refs.tree.filter(this.inputValue);
      } else {
        this.doAsyncSearch(this.inputValue);
      }
    }
  }
};
exports["default"] = _default2;

/***/ }),

/***/ "./node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/winCRGroup/index.vue?vue&type=script&lang=js&":
/*!****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/_babel-loader@8.0.6@babel-loader/lib!./node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./src/core/components/winCRGroup/index.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default2 = {
  name: 'WinCRGroup',
  props: {
    options: {
      type: Object,
      "default": function _default() {}
    }
  },
  data: function data() {
    return {
      GroupType: 'radio',
      modelCheckValue: [],
      showType: false
    };
  },
  created: function created() {
    var _this = this;

    var oldBack = mui.back;

    mui.back = function () {
      if (_this.showType) {
        _this.showType = false;
      } else {
        oldBack();
      }
    };
  },
  mounted: function mounted() {
    var _this2 = this;

    this.GroupType = this.options.multiple ? 'checkbox' : 'radio';
    this.modelCheckValue = this.GroupType == 'checkbox' ? this.options.value.split(',') : this.options.value;
    setTimeout(function () {
      _this2.showType = true;
      document.getElementsByClassName('je-form')[0].style.overflow = 'hidden';
    }, 10);
  },
  methods: {
    clickALL: function clickALL(e) {
      e.stopPropagation();
      e.preventDefault();
      this.showType = false;
      document.getElementsByClassName('je-form')[0].style.overflow = 'auto';
    },
    // 单选触发
    clickLi: function clickLi(item) {
      var _this3 = this;

      if (this.GroupType == 'radio') {
        document.getElementsByClassName('je-form')[0].style.overflow = 'auto';
        var newItem = item;
        newItem.value = item.code;
        this.showType = false;
        setTimeout(function () {
          _this3.handleChoose(newItem);
        }, 500);
      } else if (this.GroupType == 'checkbox') {
        if (this.modelCheckValue.indexOf(item.code) == -1) {
          this.modelCheckValue.push(item.code);
        } else {
          var i = '';
          this.modelCheckValue.forEach(function (data, index) {
            if (data == item.code) {
              i = index;
            }
          });
          this.modelCheckValue.splice(i, 1);
        }
      }
    },
    // 多选
    clickBtn: function clickBtn(e) {
      var _this4 = this;

      e.stopPropagation();
      e.preventDefault();
      document.getElementsByClassName('je-form')[0].style.overflow = 'auto';
      var datas = {
        code: '',
        text: '',
        value: ''
      };
      var code = [];
      var text = [];
      var value = [];
      this.options.items.forEach(function (item) {
        _this4.modelCheckValue.forEach(function (values) {
          if (item.code == values) {
            code.push(item.code);
            value.push(item.code);
            text.push(item.text);
          }
        });
      });
      datas = {
        code: code.join(','),
        text: text.join(','),
        value: value.join(',')
      };
      this.showType = false;
      setTimeout(function () {
        _this4.handleChoose(datas);
      }, 500);
    }
  }
};
exports["default"] = _default2;

/***/ }),

/***/ "./node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/winModal/index.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/_babel-loader@8.0.6@babel-loader/lib!./node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./src/core/components/winModal/index.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/toConsumableArray.js"));

var _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/regenerator/index.js"));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/asyncToGenerator.js"));

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default2 = {
  name: 'WinModal',
  props: {
    cfg: {
      type: Object,
      "default": function _default() {}
    }
  },
  data: function data() {
    return {
      selection: [],
      activeId: '',
      isHide: true,
      inputValue: '',
      lists: [],
      isMultiple: false,
      checkboxAll: false,
      listsLength: 0,
      showWaitItem: true,
      showSelected: false,
      isLoad: true
    };
  },
  watch: {
    inputValue: function inputValue(nv, ov) {
      var _this = this;

      if (nv !== ov) {
        setTimeout(function () {
          _this.doSearch(nv);
        }, 10);
      }
    },
    showSelected: function showSelected(nv) {
      var _this2 = this;

      this.$nextTick(function () {
        if (nv) {
          _this2.pullRefresh.enablePulldown = false;

          _this2.pullRefresh.disablePullupToRefresh();

          document.getElementsByClassName('mui-pull-top-pocket')[0].style.display = 'none';
        } else {
          // 刷新上拉加载状态
          _this2.pullRefresh.enablePulldown = true;

          _this2.pullRefresh.enablePullupToRefresh();
        }
      });
    }
  },
  created: function created() {
    var _this3 = this;

    var oldBack = mui.back;

    mui.back = function () {
      if (!_this3.isHide) {
        _this3.isHide = true;
      } else {
        oldBack();
      }
    };

    setTimeout(function () {
      _this3.isHide = false;
    }, 300);
    this.$nextTick(function () {
      mui.init({
        swipeBack: false // 🈲用右滑关闭功能

      });

      if (_this3.isMultiple) {
        document.querySelector('#scroll-wrapper').style.top = "".concat(40, "px");
        var item2Show = false; // 子选项卡是否显示标志

        document.querySelector('.mui-slider').addEventListener('slide', function (event) {
          if (event.detail.slideNumber === 1 && !item2Show) {
            // 切换到第二个选项卡
            // 根据具体业务，动态获得第二个选项卡内容；
            // console.log('2', 2);
            // 改变标志位，下次直接显示
            item2Show = true;
          }
        });
      } else {
        document.querySelector('#scroll-wrapper').style.top = 0;
      }
    });
    this.initCfg();
  },
  mounted: function mounted() {
    var _this4 = this;

    this.$nextTick(function () {
      mui('.mui-input-row input').input(); // 监听软键盘的回车事件

      _this4.$refs.winInput.addEventListener('keypress', function (event) {
        if ((event.keyCode || event.which) == '13') {
          document.activeElement.blur(); // 收起虚拟键盘

          setTimeout(function () {
            _this4.doSearch(_this4.inputValue);
          }, 10);
          event.preventDefault(); // 阻止默认事件---阻止页面刷新
        }
      }); // 监听input框 清除按钮的点击事件


      var that = _this4;

      if (mui('.mui-input-clear')) {
        mui('.mui-input-clear').each(function () {
          this.addEventListener('focus', function () {
            mui('.mui-icon-clear').each(function () {
              this.addEventListener('tap', function () {
                that.inputValue = '';
              });
            });
          });
        });
      }
    });
  },
  methods: {
    slide: function slide(e) {
      console.log('e', e); // const index = e.detail.slideNumber;
    },
    // 初始化  配置
    initCfg: function initCfg() {
      var cfgs = JE.value(this.cfg.configInfo, '').split(',');
      var _code = cfgs[0]; // 配置编码

      if (JE.isEmpty(this.cfg.url) && JE.isEmpty(_code)) {
        JE.alert('编码不存在，请检查！');
        return;
      }

      this.isMultiple = ['M_', 'M'].indexOf(cfgs[3]) != -1; // 是否多选

      this.async = ['M_', 'S_'].indexOf(cfgs[3]) != -1; // 是否异步

      this.cfg.type = JE.value(this.cfg.type, 'list'); // 如果是查询选择，没有app配置项，去后台查询

      if (this.cfg.type == 'list' && (JE.isEmpty(this.cfg.app) || this.cfg.app.info.appCode != _code)) {
        this.initListCfg(_code);
      } // 辅助配置项


      if (JE.isNotEmpty(this.cfg.otherConfig)) {
        var otherConfig = JE.isString(this.cfg.otherConfig) ? JE.decode(this.cfg.otherConfig) : this.cfg.otherConfig; // 主键

        if (JE.isNotEmpty(otherConfig.pkName)) {
          this.cfg.pkName = otherConfig.pkName;
        }
      }
    },
    // 初始化数据集
    initData: function initData() {
      var app = this.cfg.app ? this.cfg.app.info : {};
      app.whereSql = JE.value(app.whereSql, '');
      app.orderSql = JE.value(app.orderSql, '');
      app.itemTpl = JE.value(app.itemTpl, '');
      this.cfg.pkName = JE.value(this.cfg.pkName, app.pkName);
      this.cfg.searchSql = this.cfg.searchSql || '';
      this.cfg.whereSql = this.cfg.whereSql || '';
      this.selectwinStore = JE.createStore({
        idName: this.cfg.pkName,
        // url:JE.value(app.action,'/je/dynaAction')+'!load.action',
        url: JE.value(JE.replaceOldUrl(app.action), JE.getUrlMaps('je.core')) + JE.getUrlMaps('method.load'),
        // url:JE.value(app.action,JE.getUrlMaps('je.core.load')),
        params: {
          tableCode: app.tableName,
          orderSql: app.orderSql,
          whereSql: app.whereSql + this.cfg.searchSql + this.cfg.whereSql
        }
      }); // 定义一临时存储数据仓库，用于render列表

      this.selectwinStore.dataJson = {}; // 格式化函数

      this.rendererFn = JE.isString(app.renderer) ? JE.eval(app.renderer) : app.renderer;
    },
    // 如果是查询选择，没有app配置项，去后台查询
    initListCfg: function () {
      var _initListCfg = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee(code) {
        var app, funcDep;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return JE.getFuncData(code);

              case 2:
                app = _context.sent;
                _context.next = 5;
                return JE.getFuncDep(app.info);

              case 5:
                funcDep = _context.sent;
                this.cfg.dics = app.info.dics.join(',');

                if (!app.info) {
                  _context.next = 16;
                  break;
                }

                JE.buildSqlPerm(app.info, funcDep.funcPerm);
                this.cfg.app = app;

                if (!JE.isNotEmpty(this.cfg.app)) {
                  _context.next = 16;
                  break;
                }

                _context.next = 13;
                return this.initData();

              case 13:
                this.initRefresh();
                this.loadPage(1);
                this.initValue();

              case 16:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function initListCfg(_x) {
        return _initListCfg.apply(this, arguments);
      }

      return initListCfg;
    }(),
    // 删除所有已选数据
    clearSelect: function clearSelect() {
      this.selection = [];
      var checkAll = document.getElementsByClassName('multiple-circle')[0];
      checkAll.checked = false;
    },
    // 删除某一个选中的数据
    deleteItem: function deleteItem(index) {
      this.selection.splice(index, 1);
      var checkAll = document.getElementsByClassName('multiple-circle')[0];
      checkAll.checked = false;
    },
    // 初始化值,只能根据主键值初始选中
    initValue: function initValue() {
      var value = this.cfg.value;
      var pkName = this.cfg.pkName;
      var cfgs = (this.cfg.configInfo || '').split(',');
      var fs = JE.isNotEmpty(cfgs[1]) ? cfgs[1].split('~') : [];
      var rs = JE.isNotEmpty(cfgs[2]) ? cfgs[2].split('~') : [];

      if (fs.length != rs.length) {
        return;
      }

      var _pkName = ''; // 表单对应的主键值字段名

      JE.each(rs, function (name, index) {
        if (name == pkName) {
          _pkName = fs[index]; // 如果是表单，但是没有对应的主键字段，自动生成，用于下次初始化值用：一般用于查询界面
          // eslint-disable-next-line no-shadow

          var type = document.documentElement.getAttribute('data-type');

          if (['form', 'search'].indexOf(type) != -1 && window.APP && window.APP.form) {
            // 添加默认字段
            var field = window.APP.form.getFields(_pkName);

            if (!field) {
              var form = JE.select('.je-form');
              var dom = document.createElement('input');
              dom.setAttribute('type', 'hidden');
              dom.setAttribute('class', 'je-submit-field');
              dom.setAttribute('data-name', _pkName);
              form.appendChild(dom);

              window.APP.form._createField({
                name: _pkName,
                xtype: 'textfield',
                dom: dom,
                options: {}
              });
            }

            value = window.APP.form.getValues(_pkName);
          }

          return false;
        }
      }); // 如果值为空或者没有对应的主键字段，取消默认选中

      if (JE.isEmpty(value) || JE.isEmpty(_pkName)) {
        return;
      }

      var app = this.cfg.app;
      var that = this;
      var whereSql = " and ".concat(pkName, " in ('").concat(value.replaceAll(',', "','"), "')");
      JE.ajax({
        // url:JE.value(app.action,'/je/dynaAction')+'!load.action',
        // url:JE.value(app.action,JE.getUrlMaps('je.core')),
        url: JE.value(JE.replaceOldUrl(app.info.action), JE.getUrlMaps('je.core')) + JE.getUrlMaps('method.load'),
        params: {
          tableCode: app.info.tableName,
          limit: -1,
          whereSql: whereSql,
          orderSql: app.info.orderSql
        },
        callback: function callback(success, obj) {
          if (that.isMultiple) {
            if (JE.isNotEmpty(obj.rows)) {
              var rows = obj.rows;
              rows.forEach(function (item) {
                that.selection.push(item[pkName]);
              });
              that.initSelectValue();
            }
          } else {
            that.activeId = obj.rows[0][pkName];
          }
        }
      });
    },
    // 获取json 长度
    getJsonLength: function getJsonLength(jsonData) {
      var length = 0;

      for (var ever in jsonData) {
        length++;
      }

      return length;
    },
    // 加载数据
    loadPage: function loadPage(page, _callback) {
      var me = this;
      var cfg = this.cfg;
      var app = cfg.app ? cfg.app.info : {};
      var whereSql = app.whereSql + cfg.searchSql + cfg.whereSql;
      whereSql = JE.toXT(whereSql); // JE.showWaiting('加载中...');

      this.selectwinStore.loadPage(page, {
        params: {
          whereSql: whereSql
        },
        callback: function callback(obj, store) {
          // 关闭等待提示
          // JE.closeWaiting();
          me.lists = store.data;
          me.listsLength = store.totalCount;

          if (me.getJsonLength(me.selectwinStore.dataJson) < me.getJsonLength(store.dataMap)) {
            me.selectwinStore.dataJson = store.dataMap;
          }

          if (_callback) {
            _callback();
          }

          setTimeout(function () {
            if (me.isMultiple) {
              me.initSelectValue();
            }
          }, 50); // 刷新上拉加载状态

          me.refreshUpRefresh();
        }
      });
    },
    // 初始化选中数据
    initSelectValue: function initSelectValue() {
      var _this5 = this;

      this.$nextTick(function () {
        var valDoms = document.querySelectorAll('.checkboxs');
        var that = _this5;

        if (valDoms) {
          JE.each(valDoms, function (dom) {
            dom.checked = false;
            var id = dom.getAttribute('data-id');
            that.selection.forEach(function (item) {
              if (item === id) {
                dom.checked = true;
              }
            });
          });
        }
      });
    },
    // 搜索
    doSearch: function doSearch(keyword) {
      var searchSql = '';
      var searchs = this.cfg.app.info.searchs;

      if (JE.isEmpty(searchs)) {
        JE.msg('没有配置查询项');
      }

      if (JE.isNotEmpty(keyword)) {
        var keySqls = [];
        searchs = JE.isString(searchs) ? searchs.split(',') : searchs;
        JE.each(searchs, function (s) {
          if (JE.isString(s)) {
            s = {
              code: s,
              search: 'like'
            };
          }

          var type = JE.value(s.search, 'no');

          if (type != 'no') {
            keySqls.push(JE.buildWhereSql({
              code: s.code,
              value: keyword,
              type: type
            }));
          }
        });

        if (keySqls.length > 0) {
          searchSql = " and (".concat(keySqls.join(' OR '), ")");
        }
      }

      this.cfg.searchSql = searchSql;
      this.loadPage(1);
      mui('#scroll-wrapper').scroll().scrollTo(0, 0, 100); // 100毫秒滚动到顶
    },
    toXT: function toXT(str, data) {
      JE.each(str.match(/\{.*?\}/g), function (name) {
        var temp = name.replace('{', '').replace('}', '');

        if (data.hasOwnProperty(temp)) {
          str = str.replaceAll(name, data[temp]);
        }
      });
      return str;
    },
    getById: function getById(id) {
      return this.selectwinStore.dataJson[id];
    },
    renderer: function renderer(id) {
      var item = this.getById(id);

      if (this.rendererFn) {
        return JE.toXT(this.rendererFn(item), item);
      } // return '';

    },
    // 上下拉刷新
    initRefresh: function initRefresh() {
      var me = this;
      me.pullRefresh = mui('#scroll-wrapper').pullRefresh4HTML({
        // 下拉刷新
        down: {
          callback: function callback() {
            var pull = this;
            me.loadPage(1, function () {
              /* if (me.isMultiple) {
                  const checkAll = document.getElementsByClassName('multiple-circle')[0];
                  if (checkAll.checked) {
                    me.selection = [...me.lists];
                  } else {
                    const checkboxs = document.getElementsByClassName('checkboxs');
                    for (let i = 0; i < checkboxs.length; i++) {
                      checkboxs[i].checked = false;
                    }
                    me.selection = [];
                  }
                } */
              // 结束加载，停止下拉
              pull.endPulldownToRefresh();
              JE.msg('刷新成功!');
            });
          }
        },
        // 上拉加载
        up: {
          callback: function callback() {
            var up = this;
            me.loadPage(me.selectwinStore.page + 1, function () {
              me.$nextTick(function () {
                // 结束加载，停止上拉
                if (me.isMultiple) {
                  var checkAll = document.getElementsByClassName('multiple-circle')[0];
                  checkAll.checked = false;
                }

                up.endPullupToRefresh();
                JE.msg('加载成功!');
              });
            });
          }
        }
      }); // 设置滚动条参数

      mui('#scroll-wrapper').scroll({
        bounce: false,
        // 回弹
        indicators: false,
        // 是否显示滚动条
        scrollY: true,
        // 是否竖向滚动
        scrollX: true,
        // 是否横向滚动
        deceleration: mui.os.ios ? 0.003 : 0.0009
      });
    },

    /**
     * 没有更多的数据，禁用加载
     */
    refreshUpRefresh: function refreshUpRefresh() {
      var me = this;

      if (me.selectwinStore.totalCount < me.selectwinStore.pageSize || me.selectwinStore.totalPage == me.selectwinStore.page) {
        // 禁用上拉
        me.pullRefresh.disablePullupToRefresh();
      } else {
        // 启用上拉
        me.pullRefresh.enablePullupToRefresh();
      }
    },
    // 点击某一单选项
    handleChoose: function handleChoose(id) {
      if (!this.isMultiple) {
        this.activeId = id;
        this.selection = [id];
      }
    },
    // 点击全选
    selectAll: function selectAll(event) {
      this.checkboxAll = event.target.checked;
      var checkboxs = document.getElementsByClassName('checkboxs');

      if (this.checkboxAll) {
        for (var i = 0; i < checkboxs.length; i++) {
          checkboxs[i].checked = true;
        }

        this.selection = (0, _toConsumableArray2["default"])(this.lists);
      } else {
        for (var _i = 0; _i < checkboxs.length; _i++) {
          checkboxs[_i].checked = false;
        }

        this.selection = [];
      }
    },
    // 点击某一复选项
    selectOne: function selectOne(evt, id) {
      var checked = evt.target.checked;
      var checkAll = document.getElementsByClassName('multiple-circle')[0];

      if (!checked) {
        checkAll.checked = false;
        var index = this.selection.indexOf(id);

        if (index != -1) {
          this.selection.splice(index, 1);
        }
      } else {
        this.selection.push(id);

        if (this.selection.length === this.lists.length) {
          checkAll.checked = true;
        }
      }
    },
    // 点击待选,已选数据切换
    slideTab: function slideTab(index) {
      mui('#scroll-wrapper').scroll().scrollTo(0, 0, 100); // 100毫秒滚动到顶

      if (index === 1) {
        this.showWaitItem = true;
        this.showSelected = false;
        this.initSelectValue();
      } else if (index === 2) {
        this.showWaitItem = false;
        this.showSelected = true;
      }
    },
    // 点击取消
    cancelChoose: function cancelChoose() {
      var _this6 = this;

      setTimeout(function () {
        _this6.isHide = true;
      }, 10);
    },
    // 点击确定
    dosureChoose: function dosureChoose() {
      var _this7 = this;

      this.isHide = true;
      var objs = [];

      if (!this.isMultiple) {
        var item = this.getById(this.selection[0]);
        objs.push(item);
      } else {
        this.selection.forEach(function (item) {
          var obj = _this7.getById(item);

          objs.push(obj);
        });
      }

      setTimeout(function () {
        _this7.dosureCb(objs, _this7.cfg.pkName);
      }, 10);
    },
    // 点击搜索图标 进行搜索
    clickSearch: function clickSearch() {
      var _this8 = this;

      setTimeout(function () {
        _this8.doSearch(_this8.inputValue);
      }, 10);
    }
  }
};
exports["default"] = _default2;

/***/ }),

/***/ "./node_modules/_dayjs@1.8.18@dayjs/dayjs.min.js":
/*!*******************************************************!*\
  !*** ./node_modules/_dayjs@1.8.18@dayjs/dayjs.min.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function (t, n) {
   true ? module.exports = n() : undefined;
}(this, function () {
  "use strict";

  var t = "millisecond",
      n = "second",
      e = "minute",
      r = "hour",
      i = "day",
      s = "week",
      u = "month",
      o = "quarter",
      a = "year",
      h = /^(\d{4})-?(\d{1,2})-?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?.?(\d{1,3})?$/,
      f = /\[([^\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,
      c = function (t, n, e) {
    var r = String(t);
    return !r || r.length >= n ? t : "" + Array(n + 1 - r.length).join(e) + t;
  },
      d = {
    s: c,
    z: function (t) {
      var n = -t.utcOffset(),
          e = Math.abs(n),
          r = Math.floor(e / 60),
          i = e % 60;
      return (n <= 0 ? "+" : "-") + c(r, 2, "0") + ":" + c(i, 2, "0");
    },
    m: function (t, n) {
      var e = 12 * (n.year() - t.year()) + (n.month() - t.month()),
          r = t.clone().add(e, u),
          i = n - r < 0,
          s = t.clone().add(e + (i ? -1 : 1), u);
      return Number(-(e + (n - r) / (i ? r - s : s - r)) || 0);
    },
    a: function (t) {
      return t < 0 ? Math.ceil(t) || 0 : Math.floor(t);
    },
    p: function (h) {
      return {
        M: u,
        y: a,
        w: s,
        d: i,
        h: r,
        m: e,
        s: n,
        ms: t,
        Q: o
      }[h] || String(h || "").toLowerCase().replace(/s$/, "");
    },
    u: function (t) {
      return void 0 === t;
    }
  },
      $ = {
    name: "en",
    weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
    months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_")
  },
      l = "en",
      m = {};

  m[l] = $;

  var y = function (t) {
    return t instanceof v;
  },
      M = function (t, n, e) {
    var r;
    if (!t) return l;
    if ("string" == typeof t) m[t] && (r = t), n && (m[t] = n, r = t);else {
      var i = t.name;
      m[i] = t, r = i;
    }
    return e || (l = r), r;
  },
      g = function (t, n, e) {
    if (y(t)) return t.clone();
    var r = n ? "string" == typeof n ? {
      format: n,
      pl: e
    } : n : {};
    return r.date = t, new v(r);
  },
      D = d;

  D.l = M, D.i = y, D.w = function (t, n) {
    return g(t, {
      locale: n.$L,
      utc: n.$u,
      $offset: n.$offset
    });
  };

  var v = function () {
    function c(t) {
      this.$L = this.$L || M(t.locale, null, !0), this.parse(t);
    }

    var d = c.prototype;
    return d.parse = function (t) {
      this.$d = function (t) {
        var n = t.date,
            e = t.utc;
        if (null === n) return new Date(NaN);
        if (D.u(n)) return new Date();
        if (n instanceof Date) return new Date(n);

        if ("string" == typeof n && !/Z$/i.test(n)) {
          var r = n.match(h);
          if (r) return e ? new Date(Date.UTC(r[1], r[2] - 1, r[3] || 1, r[4] || 0, r[5] || 0, r[6] || 0, r[7] || 0)) : new Date(r[1], r[2] - 1, r[3] || 1, r[4] || 0, r[5] || 0, r[6] || 0, r[7] || 0);
        }

        return new Date(n);
      }(t), this.init();
    }, d.init = function () {
      var t = this.$d;
      this.$y = t.getFullYear(), this.$M = t.getMonth(), this.$D = t.getDate(), this.$W = t.getDay(), this.$H = t.getHours(), this.$m = t.getMinutes(), this.$s = t.getSeconds(), this.$ms = t.getMilliseconds();
    }, d.$utils = function () {
      return D;
    }, d.isValid = function () {
      return !("Invalid Date" === this.$d.toString());
    }, d.isSame = function (t, n) {
      var e = g(t);
      return this.startOf(n) <= e && e <= this.endOf(n);
    }, d.isAfter = function (t, n) {
      return g(t) < this.startOf(n);
    }, d.isBefore = function (t, n) {
      return this.endOf(n) < g(t);
    }, d.$g = function (t, n, e) {
      return D.u(t) ? this[n] : this.set(e, t);
    }, d.year = function (t) {
      return this.$g(t, "$y", a);
    }, d.month = function (t) {
      return this.$g(t, "$M", u);
    }, d.day = function (t) {
      return this.$g(t, "$W", i);
    }, d.date = function (t) {
      return this.$g(t, "$D", "date");
    }, d.hour = function (t) {
      return this.$g(t, "$H", r);
    }, d.minute = function (t) {
      return this.$g(t, "$m", e);
    }, d.second = function (t) {
      return this.$g(t, "$s", n);
    }, d.millisecond = function (n) {
      return this.$g(n, "$ms", t);
    }, d.unix = function () {
      return Math.floor(this.valueOf() / 1e3);
    }, d.valueOf = function () {
      return this.$d.getTime();
    }, d.startOf = function (t, o) {
      var h = this,
          f = !!D.u(o) || o,
          c = D.p(t),
          d = function (t, n) {
        var e = D.w(h.$u ? Date.UTC(h.$y, n, t) : new Date(h.$y, n, t), h);
        return f ? e : e.endOf(i);
      },
          $ = function (t, n) {
        return D.w(h.toDate()[t].apply(h.toDate(), (f ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(n)), h);
      },
          l = this.$W,
          m = this.$M,
          y = this.$D,
          M = "set" + (this.$u ? "UTC" : "");

      switch (c) {
        case a:
          return f ? d(1, 0) : d(31, 11);

        case u:
          return f ? d(1, m) : d(0, m + 1);

        case s:
          var g = this.$locale().weekStart || 0,
              v = (l < g ? l + 7 : l) - g;
          return d(f ? y - v : y + (6 - v), m);

        case i:
        case "date":
          return $(M + "Hours", 0);

        case r:
          return $(M + "Minutes", 1);

        case e:
          return $(M + "Seconds", 2);

        case n:
          return $(M + "Milliseconds", 3);

        default:
          return this.clone();
      }
    }, d.endOf = function (t) {
      return this.startOf(t, !1);
    }, d.$set = function (s, o) {
      var h,
          f = D.p(s),
          c = "set" + (this.$u ? "UTC" : ""),
          d = (h = {}, h[i] = c + "Date", h.date = c + "Date", h[u] = c + "Month", h[a] = c + "FullYear", h[r] = c + "Hours", h[e] = c + "Minutes", h[n] = c + "Seconds", h[t] = c + "Milliseconds", h)[f],
          $ = f === i ? this.$D + (o - this.$W) : o;

      if (f === u || f === a) {
        var l = this.clone().set("date", 1);
        l.$d[d]($), l.init(), this.$d = l.set("date", Math.min(this.$D, l.daysInMonth())).toDate();
      } else d && this.$d[d]($);

      return this.init(), this;
    }, d.set = function (t, n) {
      return this.clone().$set(t, n);
    }, d.get = function (t) {
      return this[D.p(t)]();
    }, d.add = function (t, o) {
      var h,
          f = this;
      t = Number(t);

      var c = D.p(o),
          d = function (n) {
        var e = g(f);
        return D.w(e.date(e.date() + Math.round(n * t)), f);
      };

      if (c === u) return this.set(u, this.$M + t);
      if (c === a) return this.set(a, this.$y + t);
      if (c === i) return d(1);
      if (c === s) return d(7);
      var $ = (h = {}, h[e] = 6e4, h[r] = 36e5, h[n] = 1e3, h)[c] || 1,
          l = this.$d.getTime() + t * $;
      return D.w(l, this);
    }, d.subtract = function (t, n) {
      return this.add(-1 * t, n);
    }, d.format = function (t) {
      var n = this;
      if (!this.isValid()) return "Invalid Date";

      var e = t || "YYYY-MM-DDTHH:mm:ssZ",
          r = D.z(this),
          i = this.$locale(),
          s = this.$H,
          u = this.$m,
          o = this.$M,
          a = i.weekdays,
          h = i.months,
          c = function (t, r, i, s) {
        return t && (t[r] || t(n, e)) || i[r].substr(0, s);
      },
          d = function (t) {
        return D.s(s % 12 || 12, t, "0");
      },
          $ = i.meridiem || function (t, n, e) {
        var r = t < 12 ? "AM" : "PM";
        return e ? r.toLowerCase() : r;
      },
          l = {
        YY: String(this.$y).slice(-2),
        YYYY: this.$y,
        M: o + 1,
        MM: D.s(o + 1, 2, "0"),
        MMM: c(i.monthsShort, o, h, 3),
        MMMM: h[o] || h(this, e),
        D: this.$D,
        DD: D.s(this.$D, 2, "0"),
        d: String(this.$W),
        dd: c(i.weekdaysMin, this.$W, a, 2),
        ddd: c(i.weekdaysShort, this.$W, a, 3),
        dddd: a[this.$W],
        H: String(s),
        HH: D.s(s, 2, "0"),
        h: d(1),
        hh: d(2),
        a: $(s, u, !0),
        A: $(s, u, !1),
        m: String(u),
        mm: D.s(u, 2, "0"),
        s: String(this.$s),
        ss: D.s(this.$s, 2, "0"),
        SSS: D.s(this.$ms, 3, "0"),
        Z: r
      };

      return e.replace(f, function (t, n) {
        return n || l[t] || r.replace(":", "");
      });
    }, d.utcOffset = function () {
      return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
    }, d.diff = function (t, h, f) {
      var c,
          d = D.p(h),
          $ = g(t),
          l = 6e4 * ($.utcOffset() - this.utcOffset()),
          m = this - $,
          y = D.m(this, $);
      return y = (c = {}, c[a] = y / 12, c[u] = y, c[o] = y / 3, c[s] = (m - l) / 6048e5, c[i] = (m - l) / 864e5, c[r] = m / 36e5, c[e] = m / 6e4, c[n] = m / 1e3, c)[d] || m, f ? y : D.a(y);
    }, d.daysInMonth = function () {
      return this.endOf(u).$D;
    }, d.$locale = function () {
      return m[this.$L];
    }, d.locale = function (t, n) {
      if (!t) return this.$L;
      var e = this.clone(),
          r = M(t, n, !0);
      return r && (e.$L = r), e;
    }, d.clone = function () {
      return D.w(this.$d, this);
    }, d.toDate = function () {
      return new Date(this.valueOf());
    }, d.toJSON = function () {
      return this.isValid() ? this.toISOString() : null;
    }, d.toISOString = function () {
      return this.$d.toISOString();
    }, d.toString = function () {
      return this.$d.toUTCString();
    }, c;
  }();

  return g.prototype = v.prototype, g.extend = function (t, n) {
    return t(n, v, g), g;
  }, g.locale = M, g.isDayjs = y, g.unix = function (t) {
    return g(1e3 * t);
  }, g.en = m[l], g.Ls = m, g;
});

/***/ }),

/***/ "./node_modules/_dayjs@1.8.18@dayjs/locale/zh-cn.js":
/*!**********************************************************!*\
  !*** ./node_modules/_dayjs@1.8.18@dayjs/locale/zh-cn.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function (_, e) {
   true ? module.exports = e(__webpack_require__(/*! dayjs */ "./node_modules/_dayjs@1.8.18@dayjs/dayjs.min.js")) : undefined;
}(this, function (_) {
  "use strict";

  _ = _ && _.hasOwnProperty("default") ? _.default : _;
  var e = {
    name: "zh-cn",
    weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
    weekdaysShort: "周日_周一_周二_周三_周四_周五_周六".split("_"),
    weekdaysMin: "日_一_二_三_四_五_六".split("_"),
    months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
    monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
    ordinal: function (_, e) {
      switch (e) {
        case "W":
          return _ + "周";

        default:
          return _ + "日";
      }
    },
    weekStart: 1,
    formats: {
      LT: "HH:mm",
      LTS: "HH:mm:ss",
      L: "YYYY/MM/DD",
      LL: "YYYY年M月D日",
      LLL: "YYYY年M月D日Ah点mm分",
      LLLL: "YYYY年M月D日ddddAh点mm分",
      l: "YYYY/M/D",
      ll: "YYYY年M月D日",
      lll: "YYYY年M月D日 HH:mm",
      llll: "YYYY年M月D日dddd HH:mm"
    },
    relativeTime: {
      future: "%s内",
      past: "%s前",
      s: "几秒",
      m: "1 分钟",
      mm: "%d 分钟",
      h: "1 小时",
      hh: "%d 小时",
      d: "1 天",
      dd: "%d 天",
      M: "1 个月",
      MM: "%d 个月",
      y: "1 年",
      yy: "%d 年"
    },
    meridiem: function (_, e) {
      var t = 100 * _ + e;
      return t < 600 ? "凌晨" : t < 900 ? "早上" : t < 1130 ? "上午" : t < 1230 ? "中午" : t < 1800 ? "下午" : "晚上";
    }
  };
  return _.locale(e, null, !0), e;
});

/***/ }),

/***/ "./node_modules/_dayjs@1.8.18@dayjs/plugin/relativeTime.js":
/*!*****************************************************************!*\
  !*** ./node_modules/_dayjs@1.8.18@dayjs/plugin/relativeTime.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function (r, t) {
   true ? module.exports = t() : undefined;
}(this, function () {
  "use strict";

  return function (r, t, e) {
    var n = t.prototype;
    e.en.relativeTime = {
      future: "in %s",
      past: "%s ago",
      s: "a few seconds",
      m: "a minute",
      mm: "%d minutes",
      h: "an hour",
      hh: "%d hours",
      d: "a day",
      dd: "%d days",
      M: "a month",
      MM: "%d months",
      y: "a year",
      yy: "%d years"
    };

    var o = function (r, t, n, o) {
      for (var d, i, u = n.$locale().relativeTime, a = [{
        l: "s",
        r: 44,
        d: "second"
      }, {
        l: "m",
        r: 89
      }, {
        l: "mm",
        r: 44,
        d: "minute"
      }, {
        l: "h",
        r: 89
      }, {
        l: "hh",
        r: 21,
        d: "hour"
      }, {
        l: "d",
        r: 35
      }, {
        l: "dd",
        r: 25,
        d: "day"
      }, {
        l: "M",
        r: 45
      }, {
        l: "MM",
        r: 10,
        d: "month"
      }, {
        l: "y",
        r: 17
      }, {
        l: "yy",
        d: "year"
      }], f = a.length, s = 0; s < f; s += 1) {
        var l = a[s];
        l.d && (d = o ? e(r).diff(n, l.d, !0) : n.diff(r, l.d, !0));
        var h = Math.round(Math.abs(d));

        if (h <= l.r || !l.r) {
          1 === h && s > 0 && (l = a[s - 1]), i = u[l.l].replace("%d", h);
          break;
        }
      }

      return t ? i : (d > 0 ? u.future : u.past).replace("%s", i);
    };

    n.to = function (r, t) {
      return o(r, t, this, !0);
    }, n.from = function (r, t) {
      return o(r, t, this);
    };

    var d = function (r) {
      return r.$u ? e.utc() : e();
    };

    n.toNow = function (r) {
      return this.to(d(this), r);
    }, n.fromNow = function (r) {
      return this.from(d(this), r);
    };
  };
});

/***/ }),

/***/ "./node_modules/_exif-js@2.3.0@exif-js/exif.js":
/*!*****************************************************!*\
  !*** ./node_modules/_exif-js@2.3.0@exif-js/exif.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function () {
  var debug = false;
  var root = this;

  var EXIF = function (obj) {
    if (obj instanceof EXIF) return obj;
    if (!(this instanceof EXIF)) return new EXIF(obj);
    this.EXIFwrapped = obj;
  };

  if (true) {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = EXIF;
    }

    exports.EXIF = EXIF;
  } else {}

  var ExifTags = EXIF.Tags = {
    // version tags
    0x9000: "ExifVersion",
    // EXIF version
    0xA000: "FlashpixVersion",
    // Flashpix format version
    // colorspace tags
    0xA001: "ColorSpace",
    // Color space information tag
    // image configuration
    0xA002: "PixelXDimension",
    // Valid width of meaningful image
    0xA003: "PixelYDimension",
    // Valid height of meaningful image
    0x9101: "ComponentsConfiguration",
    // Information about channels
    0x9102: "CompressedBitsPerPixel",
    // Compressed bits per pixel
    // user information
    0x927C: "MakerNote",
    // Any desired information written by the manufacturer
    0x9286: "UserComment",
    // Comments by user
    // related file
    0xA004: "RelatedSoundFile",
    // Name of related sound file
    // date and time
    0x9003: "DateTimeOriginal",
    // Date and time when the original image was generated
    0x9004: "DateTimeDigitized",
    // Date and time when the image was stored digitally
    0x9290: "SubsecTime",
    // Fractions of seconds for DateTime
    0x9291: "SubsecTimeOriginal",
    // Fractions of seconds for DateTimeOriginal
    0x9292: "SubsecTimeDigitized",
    // Fractions of seconds for DateTimeDigitized
    // picture-taking conditions
    0x829A: "ExposureTime",
    // Exposure time (in seconds)
    0x829D: "FNumber",
    // F number
    0x8822: "ExposureProgram",
    // Exposure program
    0x8824: "SpectralSensitivity",
    // Spectral sensitivity
    0x8827: "ISOSpeedRatings",
    // ISO speed rating
    0x8828: "OECF",
    // Optoelectric conversion factor
    0x9201: "ShutterSpeedValue",
    // Shutter speed
    0x9202: "ApertureValue",
    // Lens aperture
    0x9203: "BrightnessValue",
    // Value of brightness
    0x9204: "ExposureBias",
    // Exposure bias
    0x9205: "MaxApertureValue",
    // Smallest F number of lens
    0x9206: "SubjectDistance",
    // Distance to subject in meters
    0x9207: "MeteringMode",
    // Metering mode
    0x9208: "LightSource",
    // Kind of light source
    0x9209: "Flash",
    // Flash status
    0x9214: "SubjectArea",
    // Location and area of main subject
    0x920A: "FocalLength",
    // Focal length of the lens in mm
    0xA20B: "FlashEnergy",
    // Strobe energy in BCPS
    0xA20C: "SpatialFrequencyResponse",
    //
    0xA20E: "FocalPlaneXResolution",
    // Number of pixels in width direction per FocalPlaneResolutionUnit
    0xA20F: "FocalPlaneYResolution",
    // Number of pixels in height direction per FocalPlaneResolutionUnit
    0xA210: "FocalPlaneResolutionUnit",
    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution
    0xA214: "SubjectLocation",
    // Location of subject in image
    0xA215: "ExposureIndex",
    // Exposure index selected on camera
    0xA217: "SensingMethod",
    // Image sensor type
    0xA300: "FileSource",
    // Image source (3 == DSC)
    0xA301: "SceneType",
    // Scene type (1 == directly photographed)
    0xA302: "CFAPattern",
    // Color filter array geometric pattern
    0xA401: "CustomRendered",
    // Special processing
    0xA402: "ExposureMode",
    // Exposure mode
    0xA403: "WhiteBalance",
    // 1 = auto white balance, 2 = manual
    0xA404: "DigitalZoomRation",
    // Digital zoom ratio
    0xA405: "FocalLengthIn35mmFilm",
    // Equivalent foacl length assuming 35mm film camera (in mm)
    0xA406: "SceneCaptureType",
    // Type of scene
    0xA407: "GainControl",
    // Degree of overall image gain adjustment
    0xA408: "Contrast",
    // Direction of contrast processing applied by camera
    0xA409: "Saturation",
    // Direction of saturation processing applied by camera
    0xA40A: "Sharpness",
    // Direction of sharpness processing applied by camera
    0xA40B: "DeviceSettingDescription",
    //
    0xA40C: "SubjectDistanceRange",
    // Distance to subject
    // other tags
    0xA005: "InteroperabilityIFDPointer",
    0xA420: "ImageUniqueID" // Identifier assigned uniquely to each image

  };
  var TiffTags = EXIF.TiffTags = {
    0x0100: "ImageWidth",
    0x0101: "ImageHeight",
    0x8769: "ExifIFDPointer",
    0x8825: "GPSInfoIFDPointer",
    0xA005: "InteroperabilityIFDPointer",
    0x0102: "BitsPerSample",
    0x0103: "Compression",
    0x0106: "PhotometricInterpretation",
    0x0112: "Orientation",
    0x0115: "SamplesPerPixel",
    0x011C: "PlanarConfiguration",
    0x0212: "YCbCrSubSampling",
    0x0213: "YCbCrPositioning",
    0x011A: "XResolution",
    0x011B: "YResolution",
    0x0128: "ResolutionUnit",
    0x0111: "StripOffsets",
    0x0116: "RowsPerStrip",
    0x0117: "StripByteCounts",
    0x0201: "JPEGInterchangeFormat",
    0x0202: "JPEGInterchangeFormatLength",
    0x012D: "TransferFunction",
    0x013E: "WhitePoint",
    0x013F: "PrimaryChromaticities",
    0x0211: "YCbCrCoefficients",
    0x0214: "ReferenceBlackWhite",
    0x0132: "DateTime",
    0x010E: "ImageDescription",
    0x010F: "Make",
    0x0110: "Model",
    0x0131: "Software",
    0x013B: "Artist",
    0x8298: "Copyright"
  };
  var GPSTags = EXIF.GPSTags = {
    0x0000: "GPSVersionID",
    0x0001: "GPSLatitudeRef",
    0x0002: "GPSLatitude",
    0x0003: "GPSLongitudeRef",
    0x0004: "GPSLongitude",
    0x0005: "GPSAltitudeRef",
    0x0006: "GPSAltitude",
    0x0007: "GPSTimeStamp",
    0x0008: "GPSSatellites",
    0x0009: "GPSStatus",
    0x000A: "GPSMeasureMode",
    0x000B: "GPSDOP",
    0x000C: "GPSSpeedRef",
    0x000D: "GPSSpeed",
    0x000E: "GPSTrackRef",
    0x000F: "GPSTrack",
    0x0010: "GPSImgDirectionRef",
    0x0011: "GPSImgDirection",
    0x0012: "GPSMapDatum",
    0x0013: "GPSDestLatitudeRef",
    0x0014: "GPSDestLatitude",
    0x0015: "GPSDestLongitudeRef",
    0x0016: "GPSDestLongitude",
    0x0017: "GPSDestBearingRef",
    0x0018: "GPSDestBearing",
    0x0019: "GPSDestDistanceRef",
    0x001A: "GPSDestDistance",
    0x001B: "GPSProcessingMethod",
    0x001C: "GPSAreaInformation",
    0x001D: "GPSDateStamp",
    0x001E: "GPSDifferential"
  }; // EXIF 2.3 Spec

  var IFD1Tags = EXIF.IFD1Tags = {
    0x0100: "ImageWidth",
    0x0101: "ImageHeight",
    0x0102: "BitsPerSample",
    0x0103: "Compression",
    0x0106: "PhotometricInterpretation",
    0x0111: "StripOffsets",
    0x0112: "Orientation",
    0x0115: "SamplesPerPixel",
    0x0116: "RowsPerStrip",
    0x0117: "StripByteCounts",
    0x011A: "XResolution",
    0x011B: "YResolution",
    0x011C: "PlanarConfiguration",
    0x0128: "ResolutionUnit",
    0x0201: "JpegIFOffset",
    // When image format is JPEG, this value show offset to JPEG data stored.(aka "ThumbnailOffset" or "JPEGInterchangeFormat")
    0x0202: "JpegIFByteCount",
    // When image format is JPEG, this value shows data size of JPEG image (aka "ThumbnailLength" or "JPEGInterchangeFormatLength")
    0x0211: "YCbCrCoefficients",
    0x0212: "YCbCrSubSampling",
    0x0213: "YCbCrPositioning",
    0x0214: "ReferenceBlackWhite"
  };
  var StringValues = EXIF.StringValues = {
    ExposureProgram: {
      0: "Not defined",
      1: "Manual",
      2: "Normal program",
      3: "Aperture priority",
      4: "Shutter priority",
      5: "Creative program",
      6: "Action program",
      7: "Portrait mode",
      8: "Landscape mode"
    },
    MeteringMode: {
      0: "Unknown",
      1: "Average",
      2: "CenterWeightedAverage",
      3: "Spot",
      4: "MultiSpot",
      5: "Pattern",
      6: "Partial",
      255: "Other"
    },
    LightSource: {
      0: "Unknown",
      1: "Daylight",
      2: "Fluorescent",
      3: "Tungsten (incandescent light)",
      4: "Flash",
      9: "Fine weather",
      10: "Cloudy weather",
      11: "Shade",
      12: "Daylight fluorescent (D 5700 - 7100K)",
      13: "Day white fluorescent (N 4600 - 5400K)",
      14: "Cool white fluorescent (W 3900 - 4500K)",
      15: "White fluorescent (WW 3200 - 3700K)",
      17: "Standard light A",
      18: "Standard light B",
      19: "Standard light C",
      20: "D55",
      21: "D65",
      22: "D75",
      23: "D50",
      24: "ISO studio tungsten",
      255: "Other"
    },
    Flash: {
      0x0000: "Flash did not fire",
      0x0001: "Flash fired",
      0x0005: "Strobe return light not detected",
      0x0007: "Strobe return light detected",
      0x0009: "Flash fired, compulsory flash mode",
      0x000D: "Flash fired, compulsory flash mode, return light not detected",
      0x000F: "Flash fired, compulsory flash mode, return light detected",
      0x0010: "Flash did not fire, compulsory flash mode",
      0x0018: "Flash did not fire, auto mode",
      0x0019: "Flash fired, auto mode",
      0x001D: "Flash fired, auto mode, return light not detected",
      0x001F: "Flash fired, auto mode, return light detected",
      0x0020: "No flash function",
      0x0041: "Flash fired, red-eye reduction mode",
      0x0045: "Flash fired, red-eye reduction mode, return light not detected",
      0x0047: "Flash fired, red-eye reduction mode, return light detected",
      0x0049: "Flash fired, compulsory flash mode, red-eye reduction mode",
      0x004D: "Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected",
      0x004F: "Flash fired, compulsory flash mode, red-eye reduction mode, return light detected",
      0x0059: "Flash fired, auto mode, red-eye reduction mode",
      0x005D: "Flash fired, auto mode, return light not detected, red-eye reduction mode",
      0x005F: "Flash fired, auto mode, return light detected, red-eye reduction mode"
    },
    SensingMethod: {
      1: "Not defined",
      2: "One-chip color area sensor",
      3: "Two-chip color area sensor",
      4: "Three-chip color area sensor",
      5: "Color sequential area sensor",
      7: "Trilinear sensor",
      8: "Color sequential linear sensor"
    },
    SceneCaptureType: {
      0: "Standard",
      1: "Landscape",
      2: "Portrait",
      3: "Night scene"
    },
    SceneType: {
      1: "Directly photographed"
    },
    CustomRendered: {
      0: "Normal process",
      1: "Custom process"
    },
    WhiteBalance: {
      0: "Auto white balance",
      1: "Manual white balance"
    },
    GainControl: {
      0: "None",
      1: "Low gain up",
      2: "High gain up",
      3: "Low gain down",
      4: "High gain down"
    },
    Contrast: {
      0: "Normal",
      1: "Soft",
      2: "Hard"
    },
    Saturation: {
      0: "Normal",
      1: "Low saturation",
      2: "High saturation"
    },
    Sharpness: {
      0: "Normal",
      1: "Soft",
      2: "Hard"
    },
    SubjectDistanceRange: {
      0: "Unknown",
      1: "Macro",
      2: "Close view",
      3: "Distant view"
    },
    FileSource: {
      3: "DSC"
    },
    Components: {
      0: "",
      1: "Y",
      2: "Cb",
      3: "Cr",
      4: "R",
      5: "G",
      6: "B"
    }
  };

  function addEvent(element, event, handler) {
    if (element.addEventListener) {
      element.addEventListener(event, handler, false);
    } else if (element.attachEvent) {
      element.attachEvent("on" + event, handler);
    }
  }

  function imageHasData(img) {
    return !!img.exifdata;
  }

  function base64ToArrayBuffer(base64, contentType) {
    contentType = contentType || base64.match(/^data\:([^\;]+)\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'

    base64 = base64.replace(/^data\:([^\;]+)\;base64,/gmi, '');
    var binary = atob(base64);
    var len = binary.length;
    var buffer = new ArrayBuffer(len);
    var view = new Uint8Array(buffer);

    for (var i = 0; i < len; i++) {
      view[i] = binary.charCodeAt(i);
    }

    return buffer;
  }

  function objectURLToBlob(url, callback) {
    var http = new XMLHttpRequest();
    http.open("GET", url, true);
    http.responseType = "blob";

    http.onload = function (e) {
      if (this.status == 200 || this.status === 0) {
        callback(this.response);
      }
    };

    http.send();
  }

  function getImageData(img, callback) {
    function handleBinaryFile(binFile) {
      var data = findEXIFinJPEG(binFile);
      img.exifdata = data || {};
      var iptcdata = findIPTCinJPEG(binFile);
      img.iptcdata = iptcdata || {};

      if (EXIF.isXmpEnabled) {
        var xmpdata = findXMPinJPEG(binFile);
        img.xmpdata = xmpdata || {};
      }

      if (callback) {
        callback.call(img);
      }
    }

    if (img.src) {
      if (/^data\:/i.test(img.src)) {
        // Data URI
        var arrayBuffer = base64ToArrayBuffer(img.src);
        handleBinaryFile(arrayBuffer);
      } else if (/^blob\:/i.test(img.src)) {
        // Object URL
        var fileReader = new FileReader();

        fileReader.onload = function (e) {
          handleBinaryFile(e.target.result);
        };

        objectURLToBlob(img.src, function (blob) {
          fileReader.readAsArrayBuffer(blob);
        });
      } else {
        var http = new XMLHttpRequest();

        http.onload = function () {
          if (this.status == 200 || this.status === 0) {
            handleBinaryFile(http.response);
          } else {
            throw "Could not load image";
          }

          http = null;
        };

        http.open("GET", img.src, true);
        http.responseType = "arraybuffer";
        http.send(null);
      }
    } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {
      var fileReader = new FileReader();

      fileReader.onload = function (e) {
        if (debug) console.log("Got file of length " + e.target.result.byteLength);
        handleBinaryFile(e.target.result);
      };

      fileReader.readAsArrayBuffer(img);
    }
  }

  function findEXIFinJPEG(file) {
    var dataView = new DataView(file);
    if (debug) console.log("Got file of length " + file.byteLength);

    if (dataView.getUint8(0) != 0xFF || dataView.getUint8(1) != 0xD8) {
      if (debug) console.log("Not a valid JPEG");
      return false; // not a valid jpeg
    }

    var offset = 2,
        length = file.byteLength,
        marker;

    while (offset < length) {
      if (dataView.getUint8(offset) != 0xFF) {
        if (debug) console.log("Not a valid marker at offset " + offset + ", found: " + dataView.getUint8(offset));
        return false; // not a valid marker, something is wrong
      }

      marker = dataView.getUint8(offset + 1);
      if (debug) console.log(marker); // we could implement handling for other markers here,
      // but we're only looking for 0xFFE1 for EXIF data

      if (marker == 225) {
        if (debug) console.log("Found 0xFFE1 marker");
        return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2); // offset += 2 + file.getShortAt(offset+2, true);
      } else {
        offset += 2 + dataView.getUint16(offset + 2);
      }
    }
  }

  function findIPTCinJPEG(file) {
    var dataView = new DataView(file);
    if (debug) console.log("Got file of length " + file.byteLength);

    if (dataView.getUint8(0) != 0xFF || dataView.getUint8(1) != 0xD8) {
      if (debug) console.log("Not a valid JPEG");
      return false; // not a valid jpeg
    }

    var offset = 2,
        length = file.byteLength;

    var isFieldSegmentStart = function (dataView, offset) {
      return dataView.getUint8(offset) === 0x38 && dataView.getUint8(offset + 1) === 0x42 && dataView.getUint8(offset + 2) === 0x49 && dataView.getUint8(offset + 3) === 0x4D && dataView.getUint8(offset + 4) === 0x04 && dataView.getUint8(offset + 5) === 0x04;
    };

    while (offset < length) {
      if (isFieldSegmentStart(dataView, offset)) {
        // Get the length of the name header (which is padded to an even number of bytes)
        var nameHeaderLength = dataView.getUint8(offset + 7);
        if (nameHeaderLength % 2 !== 0) nameHeaderLength += 1; // Check for pre photoshop 6 format

        if (nameHeaderLength === 0) {
          // Always 4
          nameHeaderLength = 4;
        }

        var startOffset = offset + 8 + nameHeaderLength;
        var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);
        return readIPTCData(file, startOffset, sectionLength);
        break;
      } // Not the marker, continue searching


      offset++;
    }
  }

  var IptcFieldMap = {
    0x78: 'caption',
    0x6E: 'credit',
    0x19: 'keywords',
    0x37: 'dateCreated',
    0x50: 'byline',
    0x55: 'bylineTitle',
    0x7A: 'captionWriter',
    0x69: 'headline',
    0x74: 'copyright',
    0x0F: 'category'
  };

  function readIPTCData(file, startOffset, sectionLength) {
    var dataView = new DataView(file);
    var data = {};
    var fieldValue, fieldName, dataSize, segmentType, segmentSize;
    var segmentStartPos = startOffset;

    while (segmentStartPos < startOffset + sectionLength) {
      if (dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos + 1) === 0x02) {
        segmentType = dataView.getUint8(segmentStartPos + 2);

        if (segmentType in IptcFieldMap) {
          dataSize = dataView.getInt16(segmentStartPos + 3);
          segmentSize = dataSize + 5;
          fieldName = IptcFieldMap[segmentType];
          fieldValue = getStringFromDB(dataView, segmentStartPos + 5, dataSize); // Check if we already stored a value with this name

          if (data.hasOwnProperty(fieldName)) {
            // Value already stored with this name, create multivalue field
            if (data[fieldName] instanceof Array) {
              data[fieldName].push(fieldValue);
            } else {
              data[fieldName] = [data[fieldName], fieldValue];
            }
          } else {
            data[fieldName] = fieldValue;
          }
        }
      }

      segmentStartPos++;
    }

    return data;
  }

  function readTags(file, tiffStart, dirStart, strings, bigEnd) {
    var entries = file.getUint16(dirStart, !bigEnd),
        tags = {},
        entryOffset,
        tag,
        i;

    for (i = 0; i < entries; i++) {
      entryOffset = dirStart + i * 12 + 2;
      tag = strings[file.getUint16(entryOffset, !bigEnd)];
      if (!tag && debug) console.log("Unknown tag: " + file.getUint16(entryOffset, !bigEnd));
      tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);
    }

    return tags;
  }

  function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {
    var type = file.getUint16(entryOffset + 2, !bigEnd),
        numValues = file.getUint32(entryOffset + 4, !bigEnd),
        valueOffset = file.getUint32(entryOffset + 8, !bigEnd) + tiffStart,
        offset,
        vals,
        val,
        n,
        numerator,
        denominator;

    switch (type) {
      case 1: // byte, 8-bit unsigned int

      case 7:
        // undefined, 8-bit byte, value depending on field
        if (numValues == 1) {
          return file.getUint8(entryOffset + 8, !bigEnd);
        } else {
          offset = numValues > 4 ? valueOffset : entryOffset + 8;
          vals = [];

          for (n = 0; n < numValues; n++) {
            vals[n] = file.getUint8(offset + n);
          }

          return vals;
        }

      case 2:
        // ascii, 8-bit byte
        offset = numValues > 4 ? valueOffset : entryOffset + 8;
        return getStringFromDB(file, offset, numValues - 1);

      case 3:
        // short, 16 bit int
        if (numValues == 1) {
          return file.getUint16(entryOffset + 8, !bigEnd);
        } else {
          offset = numValues > 2 ? valueOffset : entryOffset + 8;
          vals = [];

          for (n = 0; n < numValues; n++) {
            vals[n] = file.getUint16(offset + 2 * n, !bigEnd);
          }

          return vals;
        }

      case 4:
        // long, 32 bit int
        if (numValues == 1) {
          return file.getUint32(entryOffset + 8, !bigEnd);
        } else {
          vals = [];

          for (n = 0; n < numValues; n++) {
            vals[n] = file.getUint32(valueOffset + 4 * n, !bigEnd);
          }

          return vals;
        }

      case 5:
        // rational = two long values, first is numerator, second is denominator
        if (numValues == 1) {
          numerator = file.getUint32(valueOffset, !bigEnd);
          denominator = file.getUint32(valueOffset + 4, !bigEnd);
          val = new Number(numerator / denominator);
          val.numerator = numerator;
          val.denominator = denominator;
          return val;
        } else {
          vals = [];

          for (n = 0; n < numValues; n++) {
            numerator = file.getUint32(valueOffset + 8 * n, !bigEnd);
            denominator = file.getUint32(valueOffset + 4 + 8 * n, !bigEnd);
            vals[n] = new Number(numerator / denominator);
            vals[n].numerator = numerator;
            vals[n].denominator = denominator;
          }

          return vals;
        }

      case 9:
        // slong, 32 bit signed int
        if (numValues == 1) {
          return file.getInt32(entryOffset + 8, !bigEnd);
        } else {
          vals = [];

          for (n = 0; n < numValues; n++) {
            vals[n] = file.getInt32(valueOffset + 4 * n, !bigEnd);
          }

          return vals;
        }

      case 10:
        // signed rational, two slongs, first is numerator, second is denominator
        if (numValues == 1) {
          return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset + 4, !bigEnd);
        } else {
          vals = [];

          for (n = 0; n < numValues; n++) {
            vals[n] = file.getInt32(valueOffset + 8 * n, !bigEnd) / file.getInt32(valueOffset + 4 + 8 * n, !bigEnd);
          }

          return vals;
        }

    }
  }
  /**
  * Given an IFD (Image File Directory) start offset
  * returns an offset to next IFD or 0 if it's the last IFD.
  */


  function getNextIFDOffset(dataView, dirStart, bigEnd) {
    //the first 2bytes means the number of directory entries contains in this IFD
    var entries = dataView.getUint16(dirStart, !bigEnd); // After last directory entry, there is a 4bytes of data,
    // it means an offset to next IFD.
    // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.

    return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long
  }

  function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd) {
    // get the IFD1 offset
    var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart + firstIFDOffset, bigEnd);

    if (!IFD1OffsetPointer) {
      // console.log('******** IFD1Offset is empty, image thumb not found ********');
      return {};
    } else if (IFD1OffsetPointer > dataView.byteLength) {
      // this should not happen
      // console.log('******** IFD1Offset is outside the bounds of the DataView ********');
      return {};
    } // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);


    var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd); // EXIF 2.3 specification for JPEG format thumbnail
    // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.
    // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail
    // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.
    // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that
    // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.

    if (thumbTags['Compression']) {
      // console.log('Thumbnail image found!');
      switch (thumbTags['Compression']) {
        case 6:
          // console.log('Thumbnail image format is JPEG');
          if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {
            // extract the thumbnail
            var tOffset = tiffStart + thumbTags.JpegIFOffset;
            var tLength = thumbTags.JpegIFByteCount;
            thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {
              type: 'image/jpeg'
            });
          }

          break;

        case 1:
          console.log("Thumbnail image format is TIFF, which is not implemented.");
          break;

        default:
          console.log("Unknown thumbnail image format '%s'", thumbTags['Compression']);
      }
    } else if (thumbTags['PhotometricInterpretation'] == 2) {
      console.log("Thumbnail image format is RGB, which is not implemented.");
    }

    return thumbTags;
  }

  function getStringFromDB(buffer, start, length) {
    var outstr = "";

    for (n = start; n < start + length; n++) {
      outstr += String.fromCharCode(buffer.getUint8(n));
    }

    return outstr;
  }

  function readEXIFData(file, start) {
    if (getStringFromDB(file, start, 4) != "Exif") {
      if (debug) console.log("Not valid EXIF data! " + getStringFromDB(file, start, 4));
      return false;
    }

    var bigEnd,
        tags,
        tag,
        exifData,
        gpsData,
        tiffOffset = start + 6; // test for TIFF validity and endianness

    if (file.getUint16(tiffOffset) == 0x4949) {
      bigEnd = false;
    } else if (file.getUint16(tiffOffset) == 0x4D4D) {
      bigEnd = true;
    } else {
      if (debug) console.log("Not valid TIFF data! (no 0x4949 or 0x4D4D)");
      return false;
    }

    if (file.getUint16(tiffOffset + 2, !bigEnd) != 0x002A) {
      if (debug) console.log("Not valid TIFF data! (no 0x002A)");
      return false;
    }

    var firstIFDOffset = file.getUint32(tiffOffset + 4, !bigEnd);

    if (firstIFDOffset < 0x00000008) {
      if (debug) console.log("Not valid TIFF data! (First offset less than 8)", file.getUint32(tiffOffset + 4, !bigEnd));
      return false;
    }

    tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);

    if (tags.ExifIFDPointer) {
      exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);

      for (tag in exifData) {
        switch (tag) {
          case "LightSource":
          case "Flash":
          case "MeteringMode":
          case "ExposureProgram":
          case "SensingMethod":
          case "SceneCaptureType":
          case "SceneType":
          case "CustomRendered":
          case "WhiteBalance":
          case "GainControl":
          case "Contrast":
          case "Saturation":
          case "Sharpness":
          case "SubjectDistanceRange":
          case "FileSource":
            exifData[tag] = StringValues[tag][exifData[tag]];
            break;

          case "ExifVersion":
          case "FlashpixVersion":
            exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);
            break;

          case "ComponentsConfiguration":
            exifData[tag] = StringValues.Components[exifData[tag][0]] + StringValues.Components[exifData[tag][1]] + StringValues.Components[exifData[tag][2]] + StringValues.Components[exifData[tag][3]];
            break;
        }

        tags[tag] = exifData[tag];
      }
    }

    if (tags.GPSInfoIFDPointer) {
      gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);

      for (tag in gpsData) {
        switch (tag) {
          case "GPSVersionID":
            gpsData[tag] = gpsData[tag][0] + "." + gpsData[tag][1] + "." + gpsData[tag][2] + "." + gpsData[tag][3];
            break;
        }

        tags[tag] = gpsData[tag];
      }
    } // extract thumbnail


    tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);
    return tags;
  }

  function findXMPinJPEG(file) {
    if (!('DOMParser' in self)) {
      // console.warn('XML parsing not supported without DOMParser');
      return;
    }

    var dataView = new DataView(file);
    if (debug) console.log("Got file of length " + file.byteLength);

    if (dataView.getUint8(0) != 0xFF || dataView.getUint8(1) != 0xD8) {
      if (debug) console.log("Not a valid JPEG");
      return false; // not a valid jpeg
    }

    var offset = 2,
        length = file.byteLength,
        dom = new DOMParser();

    while (offset < length - 4) {
      if (getStringFromDB(dataView, offset, 4) == "http") {
        var startOffset = offset - 1;
        var sectionLength = dataView.getUint16(offset - 2) - 1;
        var xmpString = getStringFromDB(dataView, startOffset, sectionLength);
        var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;
        xmpString = xmpString.substring(xmpString.indexOf('<x:xmpmeta'), xmpEndIndex);
        var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10; //Many custom written programs embed xmp/xml without any namespace. Following are some of them.
        //Without these namespaces, XML is thought to be invalid by parsers

        xmpString = xmpString.slice(0, indexOfXmp) + 'xmlns:Iptc4xmpCore="http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/" ' + 'xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" ' + 'xmlns:tiff="http://ns.adobe.com/tiff/1.0/" ' + 'xmlns:plus="http://schemas.android.com/apk/lib/com.google.android.gms.plus" ' + 'xmlns:ext="http://www.gettyimages.com/xsltExtension/1.0" ' + 'xmlns:exif="http://ns.adobe.com/exif/1.0/" ' + 'xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#" ' + 'xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#" ' + 'xmlns:crs="http://ns.adobe.com/camera-raw-settings/1.0/" ' + 'xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/" ' + 'xmlns:Iptc4xmpExt="http://iptc.org/std/Iptc4xmpExt/2008-02-29/" ' + xmpString.slice(indexOfXmp);
        var domDocument = dom.parseFromString(xmpString, 'text/xml');
        return xml2Object(domDocument);
      } else {
        offset++;
      }
    }
  }

  function xml2json(xml) {
    var json = {};

    if (xml.nodeType == 1) {
      // element node
      if (xml.attributes.length > 0) {
        json['@attributes'] = {};

        for (var j = 0; j < xml.attributes.length; j++) {
          var attribute = xml.attributes.item(j);
          json['@attributes'][attribute.nodeName] = attribute.nodeValue;
        }
      }
    } else if (xml.nodeType == 3) {
      // text node
      return xml.nodeValue;
    } // deal with children


    if (xml.hasChildNodes()) {
      for (var i = 0; i < xml.childNodes.length; i++) {
        var child = xml.childNodes.item(i);
        var nodeName = child.nodeName;

        if (json[nodeName] == null) {
          json[nodeName] = xml2json(child);
        } else {
          if (json[nodeName].push == null) {
            var old = json[nodeName];
            json[nodeName] = [];
            json[nodeName].push(old);
          }

          json[nodeName].push(xml2json(child));
        }
      }
    }

    return json;
  }

  function xml2Object(xml) {
    try {
      var obj = {};

      if (xml.children.length > 0) {
        for (var i = 0; i < xml.children.length; i++) {
          var item = xml.children.item(i);
          var attributes = item.attributes;

          for (var idx in attributes) {
            var itemAtt = attributes[idx];
            var dataKey = itemAtt.nodeName;
            var dataValue = itemAtt.nodeValue;

            if (dataKey !== undefined) {
              obj[dataKey] = dataValue;
            }
          }

          var nodeName = item.nodeName;

          if (typeof obj[nodeName] == "undefined") {
            obj[nodeName] = xml2json(item);
          } else {
            if (typeof obj[nodeName].push == "undefined") {
              var old = obj[nodeName];
              obj[nodeName] = [];
              obj[nodeName].push(old);
            }

            obj[nodeName].push(xml2json(item));
          }
        }
      } else {
        obj = xml.textContent;
      }

      return obj;
    } catch (e) {
      console.log(e.message);
    }
  }

  EXIF.enableXmp = function () {
    EXIF.isXmpEnabled = true;
  };

  EXIF.disableXmp = function () {
    EXIF.isXmpEnabled = false;
  };

  EXIF.getData = function (img, callback) {
    if ((self.Image && img instanceof self.Image || self.HTMLImageElement && img instanceof self.HTMLImageElement) && !img.complete) return false;

    if (!imageHasData(img)) {
      getImageData(img, callback);
    } else {
      if (callback) {
        callback.call(img);
      }
    }

    return true;
  };

  EXIF.getTag = function (img, tag) {
    if (!imageHasData(img)) return;
    return img.exifdata[tag];
  };

  EXIF.getIptcTag = function (img, tag) {
    if (!imageHasData(img)) return;
    return img.iptcdata[tag];
  };

  EXIF.getAllTags = function (img) {
    if (!imageHasData(img)) return {};
    var a,
        data = img.exifdata,
        tags = {};

    for (a in data) {
      if (data.hasOwnProperty(a)) {
        tags[a] = data[a];
      }
    }

    return tags;
  };

  EXIF.getAllIptcTags = function (img) {
    if (!imageHasData(img)) return {};
    var a,
        data = img.iptcdata,
        tags = {};

    for (a in data) {
      if (data.hasOwnProperty(a)) {
        tags[a] = data[a];
      }
    }

    return tags;
  };

  EXIF.pretty = function (img) {
    if (!imageHasData(img)) return "";
    var a,
        data = img.exifdata,
        strPretty = "";

    for (a in data) {
      if (data.hasOwnProperty(a)) {
        if (typeof data[a] == "object") {
          if (data[a] instanceof Number) {
            strPretty += a + " : " + data[a] + " [" + data[a].numerator + "/" + data[a].denominator + "]\r\n";
          } else {
            strPretty += a + " : [" + data[a].length + " values]\r\n";
          }
        } else {
          strPretty += a + " : " + data[a] + "\r\n";
        }
      }
    }

    return strPretty;
  };

  EXIF.readFromBinaryFile = function (file) {
    return findEXIFinJPEG(file);
  };

  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return EXIF;
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
}).call(this);

/***/ }),

/***/ "./node_modules/_is-buffer@2.0.4@is-buffer/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/_is-buffer@2.0.4@is-buffer/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
module.exports = function isBuffer(obj) {
  return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);
};

/***/ }),

/***/ "./node_modules/_process@0.11.10@process/browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/_process@0.11.10@process/browser.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};

/***/ }),

/***/ "./node_modules/_punycode@1.4.1@punycode/punycode.js":
/*!***********************************************************!*\
  !*** ./node_modules/_punycode@1.4.1@punycode/punycode.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */
;

(function (root) {
  /** Detect free variables */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
  var freeModule = typeof module == 'object' && module && !module.nodeType && module;
  var freeGlobal = typeof global == 'object' && global;

  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {
    root = freeGlobal;
  }
  /**
   * The `punycode` object.
   * @name punycode
   * @type Object
   */


  var punycode,

  /** Highest positive signed 32-bit float value */
  maxInt = 2147483647,
      // aka. 0x7FFFFFFF or 2^31-1

  /** Bootstring parameters */
  base = 36,
      tMin = 1,
      tMax = 26,
      skew = 38,
      damp = 700,
      initialBias = 72,
      initialN = 128,
      // 0x80
  delimiter = '-',
      // '\x2D'

  /** Regular expressions */
  regexPunycode = /^xn--/,
      regexNonASCII = /[^\x20-\x7E]/,
      // unprintable ASCII chars + non-ASCII chars
  regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g,
      // RFC 3490 separators

  /** Error messages */
  errors = {
    'overflow': 'Overflow: input needs wider integers to process',
    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
    'invalid-input': 'Invalid input'
  },

  /** Convenience shortcuts */
  baseMinusTMin = base - tMin,
      floor = Math.floor,
      stringFromCharCode = String.fromCharCode,

  /** Temporary variable */
  key;
  /*--------------------------------------------------------------------------*/

  /**
   * A generic error utility function.
   * @private
   * @param {String} type The error type.
   * @returns {Error} Throws a `RangeError` with the applicable error message.
   */

  function error(type) {
    throw new RangeError(errors[type]);
  }
  /**
   * A generic `Array#map` utility function.
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} callback The function that gets called for every array
   * item.
   * @returns {Array} A new array of values returned by the callback function.
   */


  function map(array, fn) {
    var length = array.length;
    var result = [];

    while (length--) {
      result[length] = fn(array[length]);
    }

    return result;
  }
  /**
   * A simple `Array#map`-like wrapper to work with domain name strings or email
   * addresses.
   * @private
   * @param {String} domain The domain name or email address.
   * @param {Function} callback The function that gets called for every
   * character.
   * @returns {Array} A new string of characters returned by the callback
   * function.
   */


  function mapDomain(string, fn) {
    var parts = string.split('@');
    var result = '';

    if (parts.length > 1) {
      // In email addresses, only the domain name should be punycoded. Leave
      // the local part (i.e. everything up to `@`) intact.
      result = parts[0] + '@';
      string = parts[1];
    } // Avoid `split(regex)` for IE8 compatibility. See #17.


    string = string.replace(regexSeparators, '\x2E');
    var labels = string.split('.');
    var encoded = map(labels, fn).join('.');
    return result + encoded;
  }
  /**
   * Creates an array containing the numeric code points of each Unicode
   * character in the string. While JavaScript uses UCS-2 internally,
   * this function will convert a pair of surrogate halves (each of which
   * UCS-2 exposes as separate characters) into a single code point,
   * matching UTF-16.
   * @see `punycode.ucs2.encode`
   * @see <https://mathiasbynens.be/notes/javascript-encoding>
   * @memberOf punycode.ucs2
   * @name decode
   * @param {String} string The Unicode input string (UCS-2).
   * @returns {Array} The new array of code points.
   */


  function ucs2decode(string) {
    var output = [],
        counter = 0,
        length = string.length,
        value,
        extra;

    while (counter < length) {
      value = string.charCodeAt(counter++);

      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
        // high surrogate, and there is a next character
        extra = string.charCodeAt(counter++);

        if ((extra & 0xFC00) == 0xDC00) {
          // low surrogate
          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
        } else {
          // unmatched surrogate; only append this code unit, in case the next
          // code unit is the high surrogate of a surrogate pair
          output.push(value);
          counter--;
        }
      } else {
        output.push(value);
      }
    }

    return output;
  }
  /**
   * Creates a string based on an array of numeric code points.
   * @see `punycode.ucs2.decode`
   * @memberOf punycode.ucs2
   * @name encode
   * @param {Array} codePoints The array of numeric code points.
   * @returns {String} The new Unicode string (UCS-2).
   */


  function ucs2encode(array) {
    return map(array, function (value) {
      var output = '';

      if (value > 0xFFFF) {
        value -= 0x10000;
        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
        value = 0xDC00 | value & 0x3FF;
      }

      output += stringFromCharCode(value);
      return output;
    }).join('');
  }
  /**
   * Converts a basic code point into a digit/integer.
   * @see `digitToBasic()`
   * @private
   * @param {Number} codePoint The basic numeric code point value.
   * @returns {Number} The numeric value of a basic code point (for use in
   * representing integers) in the range `0` to `base - 1`, or `base` if
   * the code point does not represent a value.
   */


  function basicToDigit(codePoint) {
    if (codePoint - 48 < 10) {
      return codePoint - 22;
    }

    if (codePoint - 65 < 26) {
      return codePoint - 65;
    }

    if (codePoint - 97 < 26) {
      return codePoint - 97;
    }

    return base;
  }
  /**
   * Converts a digit/integer into a basic code point.
   * @see `basicToDigit()`
   * @private
   * @param {Number} digit The numeric value of a basic code point.
   * @returns {Number} The basic code point whose value (when used for
   * representing integers) is `digit`, which needs to be in the range
   * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
   * used; else, the lowercase form is used. The behavior is undefined
   * if `flag` is non-zero and `digit` has no uppercase form.
   */


  function digitToBasic(digit, flag) {
    //  0..25 map to ASCII a..z or A..Z
    // 26..35 map to ASCII 0..9
    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
  }
  /**
   * Bias adaptation function as per section 3.4 of RFC 3492.
   * https://tools.ietf.org/html/rfc3492#section-3.4
   * @private
   */


  function adapt(delta, numPoints, firstTime) {
    var k = 0;
    delta = firstTime ? floor(delta / damp) : delta >> 1;
    delta += floor(delta / numPoints);

    for (;
    /* no initialization */
    delta > baseMinusTMin * tMax >> 1; k += base) {
      delta = floor(delta / baseMinusTMin);
    }

    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
  }
  /**
   * Converts a Punycode string of ASCII-only symbols to a string of Unicode
   * symbols.
   * @memberOf punycode
   * @param {String} input The Punycode string of ASCII-only symbols.
   * @returns {String} The resulting string of Unicode symbols.
   */


  function decode(input) {
    // Don't use UCS-2
    var output = [],
        inputLength = input.length,
        out,
        i = 0,
        n = initialN,
        bias = initialBias,
        basic,
        j,
        index,
        oldi,
        w,
        k,
        digit,
        t,

    /** Cached calculation results */
    baseMinusT; // Handle the basic code points: let `basic` be the number of input code
    // points before the last delimiter, or `0` if there is none, then copy
    // the first basic code points to the output.

    basic = input.lastIndexOf(delimiter);

    if (basic < 0) {
      basic = 0;
    }

    for (j = 0; j < basic; ++j) {
      // if it's not a basic code point
      if (input.charCodeAt(j) >= 0x80) {
        error('not-basic');
      }

      output.push(input.charCodeAt(j));
    } // Main decoding loop: start just after the last delimiter if any basic code
    // points were copied; start at the beginning otherwise.


    for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)
    /* no final expression */
    {
      // `index` is the index of the next character to be consumed.
      // Decode a generalized variable-length integer into `delta`,
      // which gets added to `i`. The overflow checking is easier
      // if we increase `i` as we go, then subtract off its starting
      // value at the end to obtain `delta`.
      for (oldi = i, w = 1, k = base;;
      /* no condition */
      k += base) {
        if (index >= inputLength) {
          error('invalid-input');
        }

        digit = basicToDigit(input.charCodeAt(index++));

        if (digit >= base || digit > floor((maxInt - i) / w)) {
          error('overflow');
        }

        i += digit * w;
        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

        if (digit < t) {
          break;
        }

        baseMinusT = base - t;

        if (w > floor(maxInt / baseMinusT)) {
          error('overflow');
        }

        w *= baseMinusT;
      }

      out = output.length + 1;
      bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,
      // incrementing `n` each time, so we'll fix that now:

      if (floor(i / out) > maxInt - n) {
        error('overflow');
      }

      n += floor(i / out);
      i %= out; // Insert `n` at position `i` of the output

      output.splice(i++, 0, n);
    }

    return ucs2encode(output);
  }
  /**
   * Converts a string of Unicode symbols (e.g. a domain name label) to a
   * Punycode string of ASCII-only symbols.
   * @memberOf punycode
   * @param {String} input The string of Unicode symbols.
   * @returns {String} The resulting Punycode string of ASCII-only symbols.
   */


  function encode(input) {
    var n,
        delta,
        handledCPCount,
        basicLength,
        bias,
        j,
        m,
        q,
        k,
        t,
        currentValue,
        output = [],

    /** `inputLength` will hold the number of code points in `input`. */
    inputLength,

    /** Cached calculation results */
    handledCPCountPlusOne,
        baseMinusT,
        qMinusT; // Convert the input in UCS-2 to Unicode

    input = ucs2decode(input); // Cache the length

    inputLength = input.length; // Initialize the state

    n = initialN;
    delta = 0;
    bias = initialBias; // Handle the basic code points

    for (j = 0; j < inputLength; ++j) {
      currentValue = input[j];

      if (currentValue < 0x80) {
        output.push(stringFromCharCode(currentValue));
      }
    }

    handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;
    // `basicLength` is the number of basic code points.
    // Finish the basic string - if it is not empty - with a delimiter

    if (basicLength) {
      output.push(delimiter);
    } // Main encoding loop:


    while (handledCPCount < inputLength) {
      // All non-basic code points < n have been handled already. Find the next
      // larger one:
      for (m = maxInt, j = 0; j < inputLength; ++j) {
        currentValue = input[j];

        if (currentValue >= n && currentValue < m) {
          m = currentValue;
        }
      } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
      // but guard against overflow


      handledCPCountPlusOne = handledCPCount + 1;

      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
        error('overflow');
      }

      delta += (m - n) * handledCPCountPlusOne;
      n = m;

      for (j = 0; j < inputLength; ++j) {
        currentValue = input[j];

        if (currentValue < n && ++delta > maxInt) {
          error('overflow');
        }

        if (currentValue == n) {
          // Represent delta as a generalized variable-length integer
          for (q = delta, k = base;;
          /* no condition */
          k += base) {
            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

            if (q < t) {
              break;
            }

            qMinusT = q - t;
            baseMinusT = base - t;
            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));
            q = floor(qMinusT / baseMinusT);
          }

          output.push(stringFromCharCode(digitToBasic(q, 0)));
          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
          delta = 0;
          ++handledCPCount;
        }
      }

      ++delta;
      ++n;
    }

    return output.join('');
  }
  /**
   * Converts a Punycode string representing a domain name or an email address
   * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
   * it doesn't matter if you call it on a string that has already been
   * converted to Unicode.
   * @memberOf punycode
   * @param {String} input The Punycoded domain name or email address to
   * convert to Unicode.
   * @returns {String} The Unicode representation of the given Punycode
   * string.
   */


  function toUnicode(input) {
    return mapDomain(input, function (string) {
      return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
    });
  }
  /**
   * Converts a Unicode string representing a domain name or an email address to
   * Punycode. Only the non-ASCII parts of the domain name will be converted,
   * i.e. it doesn't matter if you call it with a domain that's already in
   * ASCII.
   * @memberOf punycode
   * @param {String} input The domain name or email address to convert, as a
   * Unicode string.
   * @returns {String} The Punycode representation of the given domain name or
   * email address.
   */


  function toASCII(input) {
    return mapDomain(input, function (string) {
      return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;
    });
  }
  /*--------------------------------------------------------------------------*/

  /** Define the public API */


  punycode = {
    /**
     * A string representing the current Punycode.js version number.
     * @memberOf punycode
     * @type String
     */
    'version': '1.4.1',

    /**
     * An object of methods to convert from JavaScript's internal character
     * representation (UCS-2) to Unicode code points, and back.
     * @see <https://mathiasbynens.be/notes/javascript-encoding>
     * @memberOf punycode
     * @type Object
     */
    'ucs2': {
      'decode': ucs2decode,
      'encode': ucs2encode
    },
    'decode': decode,
    'encode': encode,
    'toASCII': toASCII,
    'toUnicode': toUnicode
  };
  /** Expose `punycode` */
  // Some AMD build optimizers, like r.js, check for specific condition patterns
  // like the following:

  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return punycode;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../_webpack@4.16.5@webpack/buildin/module.js */ "./node_modules/_webpack@4.16.5@webpack/buildin/module.js")(module), __webpack_require__(/*! ./../_webpack@4.16.5@webpack/buildin/global.js */ "./node_modules/_webpack@4.16.5@webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/_qs@6.7.0@qs/lib/formats.js":
/*!**************************************************!*\
  !*** ./node_modules/_qs@6.7.0@qs/lib/formats.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var replace = String.prototype.replace;
var percentTwenties = /%20/g;
module.exports = {
  'default': 'RFC3986',
  formatters: {
    RFC1738: function (value) {
      return replace.call(value, percentTwenties, '+');
    },
    RFC3986: function (value) {
      return value;
    }
  },
  RFC1738: 'RFC1738',
  RFC3986: 'RFC3986'
};

/***/ }),

/***/ "./node_modules/_qs@6.7.0@qs/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/_qs@6.7.0@qs/lib/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var stringify = __webpack_require__(/*! ./stringify */ "./node_modules/_qs@6.7.0@qs/lib/stringify.js");

var parse = __webpack_require__(/*! ./parse */ "./node_modules/_qs@6.7.0@qs/lib/parse.js");

var formats = __webpack_require__(/*! ./formats */ "./node_modules/_qs@6.7.0@qs/lib/formats.js");

module.exports = {
  formats: formats,
  parse: parse,
  stringify: stringify
};

/***/ }),

/***/ "./node_modules/_qs@6.7.0@qs/lib/parse.js":
/*!************************************************!*\
  !*** ./node_modules/_qs@6.7.0@qs/lib/parse.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/_qs@6.7.0@qs/lib/utils.js");

var has = Object.prototype.hasOwnProperty;
var defaults = {
  allowDots: false,
  allowPrototypes: false,
  arrayLimit: 20,
  charset: 'utf-8',
  charsetSentinel: false,
  comma: false,
  decoder: utils.decode,
  delimiter: '&',
  depth: 5,
  ignoreQueryPrefix: false,
  interpretNumericEntities: false,
  parameterLimit: 1000,
  parseArrays: true,
  plainObjects: false,
  strictNullHandling: false
};

var interpretNumericEntities = function (str) {
  return str.replace(/&#(\d+);/g, function ($0, numberStr) {
    return String.fromCharCode(parseInt(numberStr, 10));
  });
}; // This is what browsers will submit when the ✓ character occurs in an
// application/x-www-form-urlencoded body and the encoding of the page containing
// the form is iso-8859-1, or when the submitted form has an accept-charset
// attribute of iso-8859-1. Presumably also with other charsets that do not contain
// the ✓ character, such as us-ascii.


var isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')
// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.

var charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')

var parseValues = function parseQueryStringValues(str, options) {
  var obj = {};
  var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
  var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
  var parts = cleanStr.split(options.delimiter, limit);
  var skipIndex = -1; // Keep track of where the utf8 sentinel was found

  var i;
  var charset = options.charset;

  if (options.charsetSentinel) {
    for (i = 0; i < parts.length; ++i) {
      if (parts[i].indexOf('utf8=') === 0) {
        if (parts[i] === charsetSentinel) {
          charset = 'utf-8';
        } else if (parts[i] === isoSentinel) {
          charset = 'iso-8859-1';
        }

        skipIndex = i;
        i = parts.length; // The eslint settings do not allow break;
      }
    }
  }

  for (i = 0; i < parts.length; ++i) {
    if (i === skipIndex) {
      continue;
    }

    var part = parts[i];
    var bracketEqualsPos = part.indexOf(']=');
    var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;
    var key, val;

    if (pos === -1) {
      key = options.decoder(part, defaults.decoder, charset);
      val = options.strictNullHandling ? null : '';
    } else {
      key = options.decoder(part.slice(0, pos), defaults.decoder, charset);
      val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);
    }

    if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {
      val = interpretNumericEntities(val);
    }

    if (val && options.comma && val.indexOf(',') > -1) {
      val = val.split(',');
    }

    if (has.call(obj, key)) {
      obj[key] = utils.combine(obj[key], val);
    } else {
      obj[key] = val;
    }
  }

  return obj;
};

var parseObject = function (chain, val, options) {
  var leaf = val;

  for (var i = chain.length - 1; i >= 0; --i) {
    var obj;
    var root = chain[i];

    if (root === '[]' && options.parseArrays) {
      obj = [].concat(leaf);
    } else {
      obj = options.plainObjects ? Object.create(null) : {};
      var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
      var index = parseInt(cleanRoot, 10);

      if (!options.parseArrays && cleanRoot === '') {
        obj = {
          0: leaf
        };
      } else if (!isNaN(index) && root !== cleanRoot && String(index) === cleanRoot && index >= 0 && options.parseArrays && index <= options.arrayLimit) {
        obj = [];
        obj[index] = leaf;
      } else {
        obj[cleanRoot] = leaf;
      }
    }

    leaf = obj;
  }

  return leaf;
};

var parseKeys = function parseQueryStringKeys(givenKey, val, options) {
  if (!givenKey) {
    return;
  } // Transform dot notation to bracket notation


  var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, '[$1]') : givenKey; // The regex chunks

  var brackets = /(\[[^[\]]*])/;
  var child = /(\[[^[\]]*])/g; // Get the parent

  var segment = brackets.exec(key);
  var parent = segment ? key.slice(0, segment.index) : key; // Stash the parent if it exists

  var keys = [];

  if (parent) {
    // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties
    if (!options.plainObjects && has.call(Object.prototype, parent)) {
      if (!options.allowPrototypes) {
        return;
      }
    }

    keys.push(parent);
  } // Loop through children appending to the array until we hit depth


  var i = 0;

  while ((segment = child.exec(key)) !== null && i < options.depth) {
    i += 1;

    if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
      if (!options.allowPrototypes) {
        return;
      }
    }

    keys.push(segment[1]);
  } // If there's a remainder, just add whatever is left


  if (segment) {
    keys.push('[' + key.slice(segment.index) + ']');
  }

  return parseObject(keys, val, options);
};

var normalizeParseOptions = function normalizeParseOptions(opts) {
  if (!opts) {
    return defaults;
  }

  if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {
    throw new TypeError('Decoder has to be a function.');
  }

  if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
    throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');
  }

  var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;
  return {
    allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
    allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,
    arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,
    charset: charset,
    charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
    comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,
    decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,
    delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
    depth: typeof opts.depth === 'number' ? opts.depth : defaults.depth,
    ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
    interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
    parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,
    parseArrays: opts.parseArrays !== false,
    plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,
    strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
  };
};

module.exports = function (str, opts) {
  var options = normalizeParseOptions(opts);

  if (str === '' || str === null || typeof str === 'undefined') {
    return options.plainObjects ? Object.create(null) : {};
  }

  var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
  var obj = options.plainObjects ? Object.create(null) : {}; // Iterate over the keys and setup the new object

  var keys = Object.keys(tempObj);

  for (var i = 0; i < keys.length; ++i) {
    var key = keys[i];
    var newObj = parseKeys(key, tempObj[key], options);
    obj = utils.merge(obj, newObj, options);
  }

  return utils.compact(obj);
};

/***/ }),

/***/ "./node_modules/_qs@6.7.0@qs/lib/stringify.js":
/*!****************************************************!*\
  !*** ./node_modules/_qs@6.7.0@qs/lib/stringify.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/_qs@6.7.0@qs/lib/utils.js");

var formats = __webpack_require__(/*! ./formats */ "./node_modules/_qs@6.7.0@qs/lib/formats.js");

var has = Object.prototype.hasOwnProperty;
var arrayPrefixGenerators = {
  brackets: function brackets(prefix) {
    // eslint-disable-line func-name-matching
    return prefix + '[]';
  },
  comma: 'comma',
  indices: function indices(prefix, key) {
    // eslint-disable-line func-name-matching
    return prefix + '[' + key + ']';
  },
  repeat: function repeat(prefix) {
    // eslint-disable-line func-name-matching
    return prefix;
  }
};
var isArray = Array.isArray;
var push = Array.prototype.push;

var pushToArray = function (arr, valueOrArray) {
  push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);
};

var toISO = Date.prototype.toISOString;
var defaults = {
  addQueryPrefix: false,
  allowDots: false,
  charset: 'utf-8',
  charsetSentinel: false,
  delimiter: '&',
  encode: true,
  encoder: utils.encode,
  encodeValuesOnly: false,
  formatter: formats.formatters[formats['default']],
  // deprecated
  indices: false,
  serializeDate: function serializeDate(date) {
    // eslint-disable-line func-name-matching
    return toISO.call(date);
  },
  skipNulls: false,
  strictNullHandling: false
};

var stringify = function stringify( // eslint-disable-line func-name-matching
object, prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, formatter, encodeValuesOnly, charset) {
  var obj = object;

  if (typeof filter === 'function') {
    obj = filter(prefix, obj);
  } else if (obj instanceof Date) {
    obj = serializeDate(obj);
  } else if (generateArrayPrefix === 'comma' && isArray(obj)) {
    obj = obj.join(',');
  }

  if (obj === null) {
    if (strictNullHandling) {
      return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;
    }

    obj = '';
  }

  if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {
    if (encoder) {
      var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);
      return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];
    }

    return [formatter(prefix) + '=' + formatter(String(obj))];
  }

  var values = [];

  if (typeof obj === 'undefined') {
    return values;
  }

  var objKeys;

  if (isArray(filter)) {
    objKeys = filter;
  } else {
    var keys = Object.keys(obj);
    objKeys = sort ? keys.sort(sort) : keys;
  }

  for (var i = 0; i < objKeys.length; ++i) {
    var key = objKeys[i];

    if (skipNulls && obj[key] === null) {
      continue;
    }

    if (isArray(obj)) {
      pushToArray(values, stringify(obj[key], typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, formatter, encodeValuesOnly, charset));
    } else {
      pushToArray(values, stringify(obj[key], prefix + (allowDots ? '.' + key : '[' + key + ']'), generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, formatter, encodeValuesOnly, charset));
    }
  }

  return values;
};

var normalizeStringifyOptions = function normalizeStringifyOptions(opts) {
  if (!opts) {
    return defaults;
  }

  if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {
    throw new TypeError('Encoder has to be a function.');
  }

  var charset = opts.charset || defaults.charset;

  if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
    throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
  }

  var format = formats['default'];

  if (typeof opts.format !== 'undefined') {
    if (!has.call(formats.formatters, opts.format)) {
      throw new TypeError('Unknown format option provided.');
    }

    format = opts.format;
  }

  var formatter = formats.formatters[format];
  var filter = defaults.filter;

  if (typeof opts.filter === 'function' || isArray(opts.filter)) {
    filter = opts.filter;
  }

  return {
    addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,
    allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
    charset: charset,
    charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
    delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,
    encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,
    encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,
    encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
    filter: filter,
    formatter: formatter,
    serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,
    skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,
    sort: typeof opts.sort === 'function' ? opts.sort : null,
    strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
  };
};

module.exports = function (object, opts) {
  var obj = object;
  var options = normalizeStringifyOptions(opts);
  var objKeys;
  var filter;

  if (typeof options.filter === 'function') {
    filter = options.filter;
    obj = filter('', obj);
  } else if (isArray(options.filter)) {
    filter = options.filter;
    objKeys = filter;
  }

  var keys = [];

  if (typeof obj !== 'object' || obj === null) {
    return '';
  }

  var arrayFormat;

  if (opts && opts.arrayFormat in arrayPrefixGenerators) {
    arrayFormat = opts.arrayFormat;
  } else if (opts && 'indices' in opts) {
    arrayFormat = opts.indices ? 'indices' : 'repeat';
  } else {
    arrayFormat = 'indices';
  }

  var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];

  if (!objKeys) {
    objKeys = Object.keys(obj);
  }

  if (options.sort) {
    objKeys.sort(options.sort);
  }

  for (var i = 0; i < objKeys.length; ++i) {
    var key = objKeys[i];

    if (options.skipNulls && obj[key] === null) {
      continue;
    }

    pushToArray(keys, stringify(obj[key], key, generateArrayPrefix, options.strictNullHandling, options.skipNulls, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.formatter, options.encodeValuesOnly, options.charset));
  }

  var joined = keys.join(options.delimiter);
  var prefix = options.addQueryPrefix === true ? '?' : '';

  if (options.charsetSentinel) {
    if (options.charset === 'iso-8859-1') {
      // encodeURIComponent('&#10003;'), the "numeric entity" representation of a checkmark
      prefix += 'utf8=%26%2310003%3B&';
    } else {
      // encodeURIComponent('✓')
      prefix += 'utf8=%E2%9C%93&';
    }
  }

  return joined.length > 0 ? prefix + joined : '';
};

/***/ }),

/***/ "./node_modules/_qs@6.7.0@qs/lib/utils.js":
/*!************************************************!*\
  !*** ./node_modules/_qs@6.7.0@qs/lib/utils.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var has = Object.prototype.hasOwnProperty;
var isArray = Array.isArray;

var hexTable = function () {
  var array = [];

  for (var i = 0; i < 256; ++i) {
    array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
  }

  return array;
}();

var compactQueue = function compactQueue(queue) {
  while (queue.length > 1) {
    var item = queue.pop();
    var obj = item.obj[item.prop];

    if (isArray(obj)) {
      var compacted = [];

      for (var j = 0; j < obj.length; ++j) {
        if (typeof obj[j] !== 'undefined') {
          compacted.push(obj[j]);
        }
      }

      item.obj[item.prop] = compacted;
    }
  }
};

var arrayToObject = function arrayToObject(source, options) {
  var obj = options && options.plainObjects ? Object.create(null) : {};

  for (var i = 0; i < source.length; ++i) {
    if (typeof source[i] !== 'undefined') {
      obj[i] = source[i];
    }
  }

  return obj;
};

var merge = function merge(target, source, options) {
  if (!source) {
    return target;
  }

  if (typeof source !== 'object') {
    if (isArray(target)) {
      target.push(source);
    } else if (target && typeof target === 'object') {
      if (options && (options.plainObjects || options.allowPrototypes) || !has.call(Object.prototype, source)) {
        target[source] = true;
      }
    } else {
      return [target, source];
    }

    return target;
  }

  if (!target || typeof target !== 'object') {
    return [target].concat(source);
  }

  var mergeTarget = target;

  if (isArray(target) && !isArray(source)) {
    mergeTarget = arrayToObject(target, options);
  }

  if (isArray(target) && isArray(source)) {
    source.forEach(function (item, i) {
      if (has.call(target, i)) {
        var targetItem = target[i];

        if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {
          target[i] = merge(targetItem, item, options);
        } else {
          target.push(item);
        }
      } else {
        target[i] = item;
      }
    });
    return target;
  }

  return Object.keys(source).reduce(function (acc, key) {
    var value = source[key];

    if (has.call(acc, key)) {
      acc[key] = merge(acc[key], value, options);
    } else {
      acc[key] = value;
    }

    return acc;
  }, mergeTarget);
};

var assign = function assignSingleSource(target, source) {
  return Object.keys(source).reduce(function (acc, key) {
    acc[key] = source[key];
    return acc;
  }, target);
};

var decode = function (str, decoder, charset) {
  var strWithoutPlus = str.replace(/\+/g, ' ');

  if (charset === 'iso-8859-1') {
    // unescape never throws, no try...catch needed:
    return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
  } // utf-8


  try {
    return decodeURIComponent(strWithoutPlus);
  } catch (e) {
    return strWithoutPlus;
  }
};

var encode = function encode(str, defaultEncoder, charset) {
  // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
  // It has been adapted here for stricter adherence to RFC 3986
  if (str.length === 0) {
    return str;
  }

  var string = typeof str === 'string' ? str : String(str);

  if (charset === 'iso-8859-1') {
    return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {
      return '%26%23' + parseInt($0.slice(2), 16) + '%3B';
    });
  }

  var out = '';

  for (var i = 0; i < string.length; ++i) {
    var c = string.charCodeAt(i);

    if (c === 0x2D // -
    || c === 0x2E // .
    || c === 0x5F // _
    || c === 0x7E // ~
    || c >= 0x30 && c <= 0x39 // 0-9
    || c >= 0x41 && c <= 0x5A // a-z
    || c >= 0x61 && c <= 0x7A // A-Z
    ) {
        out += string.charAt(i);
        continue;
      }

    if (c < 0x80) {
      out = out + hexTable[c];
      continue;
    }

    if (c < 0x800) {
      out = out + (hexTable[0xC0 | c >> 6] + hexTable[0x80 | c & 0x3F]);
      continue;
    }

    if (c < 0xD800 || c >= 0xE000) {
      out = out + (hexTable[0xE0 | c >> 12] + hexTable[0x80 | c >> 6 & 0x3F] + hexTable[0x80 | c & 0x3F]);
      continue;
    }

    i += 1;
    c = 0x10000 + ((c & 0x3FF) << 10 | string.charCodeAt(i) & 0x3FF);
    out += hexTable[0xF0 | c >> 18] + hexTable[0x80 | c >> 12 & 0x3F] + hexTable[0x80 | c >> 6 & 0x3F] + hexTable[0x80 | c & 0x3F];
  }

  return out;
};

var compact = function compact(value) {
  var queue = [{
    obj: {
      o: value
    },
    prop: 'o'
  }];
  var refs = [];

  for (var i = 0; i < queue.length; ++i) {
    var item = queue[i];
    var obj = item.obj[item.prop];
    var keys = Object.keys(obj);

    for (var j = 0; j < keys.length; ++j) {
      var key = keys[j];
      var val = obj[key];

      if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {
        queue.push({
          obj: obj,
          prop: key
        });
        refs.push(val);
      }
    }
  }

  compactQueue(queue);
  return value;
};

var isRegExp = function isRegExp(obj) {
  return Object.prototype.toString.call(obj) === '[object RegExp]';
};

var isBuffer = function isBuffer(obj) {
  if (!obj || typeof obj !== 'object') {
    return false;
  }

  return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
};

var combine = function combine(a, b) {
  return [].concat(a, b);
};

module.exports = {
  arrayToObject: arrayToObject,
  assign: assign,
  combine: combine,
  compact: compact,
  decode: decode,
  encode: encode,
  isBuffer: isBuffer,
  isRegExp: isRegExp,
  merge: merge
};

/***/ }),

/***/ "./node_modules/_querystring-es3@0.2.1@querystring-es3/decode.js":
/*!***********************************************************************!*\
  !*** ./node_modules/_querystring-es3@0.2.1@querystring-es3/decode.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
 // If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function (qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);
  var maxKeys = 1000;

  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length; // maxKeys <= 0 means that we should not limit keys count

  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr,
        vstr,
        k,
        v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

/***/ }),

/***/ "./node_modules/_querystring-es3@0.2.1@querystring-es3/encode.js":
/*!***********************************************************************!*\
  !*** ./node_modules/_querystring-es3@0.2.1@querystring-es3/encode.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var stringifyPrimitive = function (v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function (obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';

  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function (k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;

      if (isArray(obj[k])) {
        return map(obj[k], function (v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);
  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map(xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];

  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }

  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }

  return res;
};

/***/ }),

/***/ "./node_modules/_querystring-es3@0.2.1@querystring-es3/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/_querystring-es3@0.2.1@querystring-es3/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__(/*! ./decode */ "./node_modules/_querystring-es3@0.2.1@querystring-es3/decode.js");
exports.encode = exports.stringify = __webpack_require__(/*! ./encode */ "./node_modules/_querystring-es3@0.2.1@querystring-es3/encode.js");

/***/ }),

/***/ "./node_modules/_regenerator-runtime@0.13.3@regenerator-runtime/runtime.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/_regenerator-runtime@0.13.3@regenerator-runtime/runtime.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var runtime = function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.

  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.

    generator._invoke = makeInvokeMethod(innerFn, self, context);
    return generator;
  }

  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.

  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.

  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.

  function Generator() {}

  function GeneratorFunction() {}

  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.


  var IteratorPrototype = {};

  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction"; // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      prototype[method] = function (arg) {
        return this._invoke(method, arg);
      };
    });
  }

  exports.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
    // do is to check its .name property.
    (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  exports.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;

      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }

    genFun.prototype = Object.create(Gp);
    return genFun;
  }; // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.


  exports.awrap = function (arg) {
    return {
      __await: arg
    };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);

      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;

        if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function (unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function (error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = // If enqueue has been called before, then we want to wait until
      // all previous Promises have been resolved before calling invoke,
      // so that results are always delivered in the correct order. If
      // enqueue has not been called before, then it is important to
      // call invoke immediately, without waiting on a callback to fire,
      // so that the async generator function has the opportunity to do
      // any necessary setup in a predictable way. This predictability
      // is why the Promise constructor synchronously invokes its
      // executor callback, and why async functions synchronously
      // execute code before the first await. Since we implement simple
      // async functions in terms of async generators, it is especially
      // important to get this right, even though it requires care.
      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
      // invocations of the iterator.
      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    } // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).


    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);

  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };

  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.

  exports.async = function (innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));
    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
    : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;
    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        } // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume


        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;

        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);

          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;
        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);
        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;
        var record = tryCatch(innerFn, self, context);

        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };
        } else if (record.type === "throw") {
          state = GenStateCompleted; // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.

          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  } // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.


  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];

    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError("The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (!info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).

      context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.

      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }
    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    } // The delegate iterator is finished, so forget it and continue with
    // the outer generator.


    context.delegate = null;
    return ContinueSentinel;
  } // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.


  defineIteratorMethods(Gp);
  Gp[toStringTagSymbol] = "Generator"; // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.

  Gp[iteratorSymbol] = function () {
    return this;
  };

  Gp.toString = function () {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{
      tryLoc: "root"
    }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function (object) {
    var keys = [];

    for (var key in object) {
      keys.push(key);
    }

    keys.reverse(); // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.

    return function next() {
      while (keys.length) {
        var key = keys.pop();

        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      } // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.


      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];

      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;
          return next;
        };

        return next.next = next;
      }
    } // Return an iterator with no values.


    return {
      next: doneResult
    };
  }

  exports.values = values;

  function doneResult() {
    return {
      value: undefined,
      done: true
    };
  }

  Context.prototype = {
    constructor: Context,
    reset: function (skipTempReset) {
      this.prev = 0;
      this.next = 0; // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;
      this.method = "next";
      this.arg = undefined;
      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },
    stop: function () {
      this.done = true;
      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;

      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },
    dispatchException: function (exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;

      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },
    abrupt: function (type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },
    complete: function (record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },
    finish: function (finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },
    "catch": function (tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;

          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }

          return thrown;
        }
      } // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.


      throw new Error("illegal catch attempt");
    },
    delegateYield: function (iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  }; // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.

  return exports;
}( // If this script is executing as a CommonJS module, use module.exports
// as the regeneratorRuntime namespace. Otherwise create a new empty
// object. Either way, the resulting object will be used to initialize
// the regeneratorRuntime variable at the top of this file.
 true ? module.exports : undefined);

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}

/***/ }),

/***/ "./node_modules/_url@0.11.0@url/url.js":
/*!*********************************************!*\
  !*** ./node_modules/_url@0.11.0@url/url.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var punycode = __webpack_require__(/*! punycode */ "./node_modules/_punycode@1.4.1@punycode/punycode.js");

var util = __webpack_require__(/*! ./util */ "./node_modules/_url@0.11.0@url/util.js");

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;
exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
} // Reference: RFC 3986, RFC 1808, RFC 2396
// define these here so at least they only have to be
// compiled once on the first module load.


var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,
    // Special case for a simple path URL
simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,
    // RFC 2396: characters reserved for delimiting URLs.
// We actually just auto-escape these.
delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],
    // RFC 2396: characters not allowed for various reasons.
unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),
    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
// Note that any invalid chars are also handled, but these
// are the ones that are *expected* to be seen, so we fast-path
// them.
nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
unsafeProtocol = {
  'javascript': true,
  'javascript:': true
},
    // protocols that never have a hostname.
hostlessProtocol = {
  'javascript': true,
  'javascript:': true
},
    // protocols that always contain a // bit.
slashedProtocol = {
  'http': true,
  'https': true,
  'ftp': true,
  'gopher': true,
  'file': true,
  'http:': true,
  'https:': true,
  'ftp:': true,
  'gopher:': true,
  'file:': true
},
    querystring = __webpack_require__(/*! querystring */ "./node_modules/_querystring-es3@0.2.1@querystring-es3/index.js");

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;
  var u = new Url();
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  } // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916


  var queryIndex = url.indexOf('?'),
      splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);
  var rest = url; // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"

  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);

    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];

      if (simplePath[2]) {
        this.search = simplePath[2];

        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }

      return this;
    }
  }

  var proto = protocolPattern.exec(rest);

  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  } // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.


  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';

    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {
    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c
    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.
    // find the first instance of any hostEndingChars
    var hostEnd = -1;

    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;
    } // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.


    var auth, atSign;

    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    } // Now we have a portion which is definitely the auth.
    // Pull that off.


    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    } // the host is the remaining to the left of the first non-host char


    hostEnd = -1;

    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;
    } // if we still have not hit it, then the entire thing is a host.


    if (hostEnd === -1) hostEnd = rest.length;
    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd); // pull out port.

    this.parseHost(); // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.

    this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.

    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.

    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);

      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;

        if (!part.match(hostnamePartPattern)) {
          var newpart = '';

          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          } // we test again with ASCII char only


          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);

            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }

            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }

            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host; // strip [ and ] from the hostname
    // the host field still retains them, though

    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);

      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  } // now rest is set to the post-host stuff.
  // chop off any delim chars.


  if (!unsafeProtocol[lowerProto]) {
    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1) continue;
      var esc = encodeURIComponent(ae);

      if (esc === ae) {
        esc = escape(ae);
      }

      rest = rest.split(ae).join(esc);
    }
  } // chop off from the tail first.


  var hash = rest.indexOf('#');

  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }

  var qm = rest.indexOf('?');

  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);

    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }

    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }

  if (rest) this.pathname = rest;

  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {
    this.pathname = '/';
  } //to support http.request


  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  } // finally, reconstruct the href based on what has been validated.


  this.href = this.format();
  return this;
}; // format a parsed object into a url string


function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function () {
  var auth = this.auth || '';

  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');

    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query && util.isObject(this.query) && Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || query && '?' + query || '';
  if (protocol && protocol.substr(-1) !== ':') protocol += ':'; // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.

  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;
  pathname = pathname.replace(/[?#]/g, function (match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');
  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function (relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function (relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);

  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  } // hash is always overridden, no matter what.
  // even href="" will remove it.


  result.hash = relative.hash; // if the relative url is empty, then there's nothing left to do here.

  if (relative.href === '') {
    result.href = result.format();
    return result;
  } // hrefs like //foo/bar always cut to the protocol.


  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);

    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol') result[rkey] = relative[rkey];
    } //urlParse appends trailing / to urls like http://www.example.com


    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);

      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }

      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;

    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');

      while (relPath.length && !(relative.host = relPath.shift()));

      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }

    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port; // to support http.request

    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }

    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',
      isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',
      mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname,
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol]; // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.

  if (psychotic) {
    result.hostname = '';
    result.port = null;

    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;else srcPath.unshift(result.host);
    }

    result.host = '';

    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;

      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;else relPath.unshift(relative.host);
      }

      relative.host = null;
    }

    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = relative.host || relative.host === '' ? relative.host : result.host;
    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath; // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift(); //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')

      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;

      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }

    result.search = relative.search;
    result.query = relative.query; //to support http.request

    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');
    }

    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null; //to support http.request

    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }

    result.href = result.format();
    return result;
  } // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.


  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === ''; // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0

  var up = 0;

  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];

    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  } // if the path is allowed to go above the root, restore leading ..s


  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && srcPath.join('/').substr(-1) !== '/') {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' || srcPath[0] && srcPath[0].charAt(0) === '/'; // put the host back

  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : ''; //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')

    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;

    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || result.host && srcPath.length;

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  } //to support request.http


  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');
  }

  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function () {
  var host = this.host;
  var port = portPattern.exec(host);

  if (port) {
    port = port[0];

    if (port !== ':') {
      this.port = port.substr(1);
    }

    host = host.substr(0, host.length - port.length);
  }

  if (host) this.hostname = host;
};

/***/ }),

/***/ "./node_modules/_url@0.11.0@url/util.js":
/*!**********************************************!*\
  !*** ./node_modules/_url@0.11.0@url/util.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  isString: function (arg) {
    return typeof arg === 'string';
  },
  isObject: function (arg) {
    return typeof arg === 'object' && arg !== null;
  },
  isNull: function (arg) {
    return arg === null;
  },
  isNullOrUndefined: function (arg) {
    return arg == null;
  }
};

/***/ }),

/***/ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js?!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/actionSheet/index.vue?vue&type=template&id=4f2ea88c&":
/*!******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./src/core/components/actionSheet/index.vue?vue&type=template&id=4f2ea88c& ***!
  \******************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "je-actionSheetModal" },
    [
      _c(
        "transition",
        {
          attrs: {
            name: "actionSheetModal",
            "enter-active-class": "animated fadeIn faster",
            "leave-active-class": "animated fadeOut faster"
          }
        },
        [
          _c("div", {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: _vm.isShow,
                expression: "isShow"
              }
            ],
            staticClass: "page_actionsheet actionSheetModal",
            on: {
              tap: function($event) {
                $event.stopPropagation()
                return _vm.cancel($event)
              }
            }
          })
        ]
      ),
      _vm._v(" "),
      _c(
        "transition",
        {
          attrs: {
            name: "actionSheet",
            "enter-active-class": "animated slideInUp faster",
            "leave-active-class": "animated slideOutDown faster"
          }
        },
        [
          _c(
            "div",
            {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: _vm.isShow,
                  expression: "isShow"
                }
              ],
              staticClass: "list_wrp"
            },
            [
              _c("div", { staticClass: "list_content" }, [
                _c(
                  "div",
                  _vm._l(_vm.chooseList, function(item, index) {
                    return _vm.chooseList.length > 1 && index > 0
                      ? _c(
                          "div",
                          {
                            key: index,
                            staticClass: "items",
                            on: {
                              tap: function($event) {
                                $event.stopPropagation()
                                return _vm.clickItem(index)
                              }
                            }
                          },
                          [
                            _c(
                              "a",
                              { attrs: { href: "javascript:void(0);" } },
                              [_vm._v(_vm._s(item.title))]
                            )
                          ]
                        )
                      : _vm._e()
                  }),
                  0
                )
              ]),
              _vm._v(" "),
              _c(
                "ul",
                { staticClass: "list_content" },
                _vm._l(_vm.chooseList, function(item, index) {
                  return index === 0
                    ? _c(
                        "li",
                        {
                          key: index,
                          staticClass: "items",
                          on: {
                            tap: function($event) {
                              $event.stopPropagation()
                              return _vm.cancel($event)
                            }
                          }
                        },
                        [
                          _c("a", { attrs: { href: "javascript:void(0);" } }, [
                            _vm._v(_vm._s(item.title))
                          ])
                        ]
                      )
                    : _vm._e()
                }),
                0
              )
            ]
          )
        ]
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js?!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/imTreeUser/index.vue?vue&type=template&id=5f9ae6d2&":
/*!*****************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./src/core/components/imTreeUser/index.vue?vue&type=template&id=5f9ae6d2& ***!
  \*****************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: {
        name: "imTreeUser",
        "enter-active-class": "animated slideInRight faster",
        "leave-active-class": "animated slideOutRight faster"
      }
    },
    [
      _c("div", { staticClass: "win-modal allModal" }, [
        _c("div", { staticClass: "main-content", staticStyle: { top: "0" } }, [
          _c(
            "div",
            {
              staticClass: "mui-scroll-wrapper",
              staticStyle: { "touch-action": "none" },
              attrs: { id: "scroll-wrapper" }
            },
            [
              _c("i", {
                directives: [
                  {
                    name: "show",
                    rawName: "v-show",
                    value: _vm.showSelected,
                    expression: "showSelected"
                  }
                ],
                staticClass:
                  "je-fixed-button je-audio-btn mui-icon mui-icon-trash clear",
                on: { tap: _vm.clearSelect }
              }),
              _vm._v(" "),
              _c("div", { staticClass: "mui-scroll" }, [
                _c(
                  "div",
                  {
                    staticClass: "mui-slider",
                    attrs: { id: "slider", "data-total": "2" },
                    on: { slide: _vm.slide }
                  },
                  [
                    _c("div", { staticClass: "mui-slider-group" }, [
                      _c(
                        "div",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.showWaitItem,
                              expression: "showWaitItem"
                            }
                          ],
                          staticClass: "mui-slider-item"
                        },
                        [
                          !_vm.getTreeData || _vm.getTreeData.length === 0
                            ? _c("p", { staticClass: "noDatas" }, [
                                _vm._v(
                                  "\n                  暂无待选数据\n                "
                                )
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _c("el-tree", {
                            ref: "tree",
                            attrs: {
                              data: _vm.getTreeData,
                              props: _vm.props,
                              "filter-node-method": _vm.filterNode,
                              "render-content": _vm.renderContent,
                              "show-checkbox": _vm.isMultiple,
                              "default-expanded-keys": _vm.expandIds,
                              "check-strictly": _vm.cfg.selectType == "N",
                              "highlight-current": true,
                              "node-key": "id"
                            },
                            on: {
                              check: _vm.handleCheckChange,
                              "node-click": _vm.handleNodeClick,
                              "node-expand": _vm.handleNodeExpand
                            },
                            scopedSlots: _vm._u([
                              {
                                key: "default",
                                fn: function(ref) {
                                  var node = ref.node
                                  return _c(
                                    "span",
                                    { staticClass: "custom-tree-node" },
                                    [
                                      node.data.photo
                                        ? _c("span", {
                                            staticClass: "headerImg",
                                            domProps: {
                                              innerHTML: _vm._s(node.data.photo)
                                            }
                                          })
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c("span", { staticClass: "userName" }, [
                                        _vm._v(_vm._s(node.label))
                                      ])
                                    ]
                                  )
                                }
                              }
                            ])
                          })
                        ],
                        1
                      )
                    ])
                  ]
                )
              ])
            ]
          )
        ])
      ])
    ]
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js?!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/treeUser/index.vue?vue&type=template&id=64e7210e&":
/*!***************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./src/core/components/treeUser/index.vue?vue&type=template&id=64e7210e& ***!
  \***************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: {
        name: "treeUser",
        "enter-active-class": "animated slideInRight faster",
        "leave-active-class": "animated slideOutRight faster"
      }
    },
    [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: !_vm.isHide,
              expression: "!isHide"
            }
          ],
          staticClass: "win-modal allModal"
        },
        [
          _c("header", { staticClass: "win-header" }, [
            _c("div", { staticClass: "mui-input-row mui-search" }, [
              _c("input", {
                directives: [
                  {
                    name: "model",
                    rawName: "v-model",
                    value: _vm.inputValue,
                    expression: "inputValue"
                  }
                ],
                ref: "winInput",
                staticClass: "mui-input-clear",
                attrs: { type: "search", placeholder: "搜索" },
                domProps: { value: _vm.inputValue },
                on: {
                  input: function($event) {
                    if ($event.target.composing) {
                      return
                    }
                    _vm.inputValue = $event.target.value
                  }
                }
              })
            ]),
            _vm._v(" "),
            _c(
              "div",
              { staticClass: "searchIcon", on: { tap: _vm.clickSearch } },
              [_c("i", { staticClass: "jeicon jeicon-search" })]
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "main-content" }, [
            _vm.isMultiple
              ? _c(
                  "div",
                  {
                    staticClass:
                      "mui-slider-indicator mui-segmented-control mui-segmented-control-inverted"
                  },
                  [
                    _c(
                      "a",
                      {
                        staticClass: "mui-control-item mui-active",
                        on: {
                          tap: function($event) {
                            return _vm.slideTab(1)
                          }
                        }
                      },
                      [
                        _vm._v(
                          "\n          待选数据（" +
                            _vm._s(_vm.listsLength) +
                            "）\n        "
                        )
                      ]
                    ),
                    _vm._v(" "),
                    _c(
                      "a",
                      {
                        staticClass: "mui-control-item",
                        on: {
                          tap: function($event) {
                            return _vm.slideTab(2)
                          }
                        }
                      },
                      [
                        _vm._v(
                          "\n          已选数据（" +
                            _vm._s(_vm.selection.length) +
                            "）\n        "
                        )
                      ]
                    )
                  ]
                )
              : _vm._e(),
            _vm._v(" "),
            _c(
              "div",
              {
                staticClass: "mui-scroll-wrapper",
                staticStyle: { "touch-action": "none" },
                attrs: { id: "scroll-wrapper" }
              },
              [
                _c("i", {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: _vm.showSelected,
                      expression: "showSelected"
                    }
                  ],
                  staticClass:
                    "je-fixed-button je-audio-btn mui-icon mui-icon-trash clear",
                  on: { tap: _vm.clearSelect }
                }),
                _vm._v(" "),
                _c("div", { staticClass: "mui-scroll" }, [
                  _c(
                    "div",
                    {
                      staticClass: "mui-slider",
                      attrs: { id: "slider", "data-total": "2" },
                      on: { slide: _vm.slide }
                    },
                    [
                      _c("div", { staticClass: "mui-slider-group" }, [
                        _c(
                          "div",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.showWaitItem,
                                expression: "showWaitItem"
                              }
                            ],
                            staticClass: "mui-slider-item"
                          },
                          [
                            !_vm.getTreeData || _vm.getTreeData.length === 0
                              ? _c("p", { staticClass: "noDatas" }, [
                                  _vm._v(
                                    "\n                  暂无待选数据\n                "
                                  )
                                ])
                              : _vm._e(),
                            _vm._v(" "),
                            _c("el-tree", {
                              ref: "tree",
                              attrs: {
                                data: _vm.getTreeData,
                                props: _vm.props,
                                "filter-node-method": _vm.filterNode,
                                load: _vm.loadNode,
                                "render-content": _vm.renderContent,
                                lazy: _vm.async,
                                "show-checkbox": _vm.isMultiple,
                                "default-expanded-keys": _vm.expandIds,
                                "check-strictly": _vm.cfg.selectType == "N",
                                "highlight-current": true,
                                "node-key": "id"
                              },
                              on: {
                                check: _vm.handleCheckChange,
                                "node-click": _vm.handleNodeClick,
                                "node-expand": _vm.handleNodeExpand
                              },
                              scopedSlots: _vm._u([
                                {
                                  key: "default",
                                  fn: function(ref) {
                                    var node = ref.node
                                    return _c(
                                      "span",
                                      { staticClass: "custom-tree-node" },
                                      [
                                        node.data.photo
                                          ? _c("span", {
                                              staticClass: "headerImg",
                                              domProps: {
                                                innerHTML: _vm._s(
                                                  node.data.photo
                                                )
                                              }
                                            })
                                          : _vm._e(),
                                        _vm._v(" "),
                                        _c(
                                          "span",
                                          { staticClass: "userName" },
                                          [_vm._v(_vm._s(node.label))]
                                        )
                                      ]
                                    )
                                  }
                                }
                              ])
                            })
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.showSelected,
                                expression: "showSelected"
                              }
                            ],
                            staticClass: "mui-slider-item"
                          },
                          [
                            _c(
                              "ul",
                              { staticClass: "mui-table-view" },
                              [
                                !_vm.selection || _vm.selection.length === 0
                                  ? _c("p", { staticClass: "noDatas" }, [
                                      _vm._v(
                                        "\n                    暂无已选数据\n                  "
                                      )
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                _vm._l(_vm.selection, function(item, index) {
                                  return _c(
                                    "li",
                                    {
                                      key: index,
                                      staticClass: "mui-table-view-cell",
                                      staticStyle: { "padding-right": "50px" }
                                    },
                                    [
                                      _c("div", [_vm._v(_vm._s(item.text))]),
                                      _vm._v(" "),
                                      _c(
                                        "P",
                                        {
                                          staticStyle: { "font-size": "12px" }
                                        },
                                        [
                                          _vm._v(
                                            "\n                      " +
                                              _vm._s(item.pathText) +
                                              "\n                    "
                                          )
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _c("i", {
                                        staticClass:
                                          "jeicon jeicon-error-circle-o deleteIcon",
                                        on: {
                                          tap: function($event) {
                                            return _vm.deleteItem(index)
                                          }
                                        }
                                      })
                                    ],
                                    1
                                  )
                                })
                              ],
                              2
                            )
                          ]
                        )
                      ])
                    ]
                  )
                ])
              ]
            )
          ]),
          _vm._v(" "),
          _c("footer", { staticClass: "win-footer" }, [
            _c(
              "button",
              {
                staticClass: "mui-btn leftBtn",
                attrs: { type: "button" },
                on: {
                  tap: function($event) {
                    return _vm.cancelChoose($event)
                  }
                }
              },
              [_vm._v("\n        取消\n      ")]
            ),
            _vm._v(" "),
            _c(
              "button",
              {
                staticClass: "mui-btn mui-btn-primary rightBtn",
                attrs: { type: "button" },
                on: {
                  tap: function($event) {
                    return _vm.dosureChoose($event)
                  }
                }
              },
              [_vm._v("\n        确定\n      ")]
            )
          ])
        ]
      )
    ]
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js?!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/winCRGroup/index.vue?vue&type=template&id=3971df8e&":
/*!*****************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./src/core/components/winCRGroup/index.vue?vue&type=template&id=3971df8e& ***!
  \*****************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "winCRGroup" },
    [
      _c(
        "transition",
        {
          attrs: {
            name: "winCRGroup-mark",
            "enter-active-class": "animated fadeIn faster",
            "leave-active-class": "animated fadeOut faster"
          }
        },
        [
          _vm.showType
            ? _c("div", {
                staticClass: "Win-winCRGroup-mark",
                on: {
                  tap: function($event) {
                    return _vm.clickALL($event)
                  }
                }
              })
            : _vm._e()
        ]
      ),
      _vm._v(" "),
      _c(
        "transition",
        {
          attrs: {
            name: "group",
            "enter-active-class": "animated slideInUp faster",
            "leave-active-class": "animated slideOutDown faster"
          }
        },
        [
          _vm.showType
            ? _c("div", { staticClass: "Win-winCRGroup" }, [
                _c(
                  "ul",
                  { staticClass: "mui-table-view" },
                  _vm._l(_vm.options.items, function(item, index) {
                    return _c(
                      "li",
                      {
                        key: index,
                        staticClass: "mui-table-view-cell",
                        on: {
                          tap: function($event) {
                            $event.stopPropagation()
                            $event.preventDefault()
                            return _vm.clickLi(item)
                          }
                        }
                      },
                      [
                        _c(
                          "div",
                          {
                            staticClass: "mui-input-row mui-left",
                            class: [
                              _vm.GroupType == "checkbox"
                                ? "mui-checkbox"
                                : "mui-radio"
                            ]
                          },
                          [
                            _c("label", [_vm._v(_vm._s(item.text))]),
                            _vm._v(" "),
                            _vm.GroupType === "checkbox"
                              ? _c("input", {
                                  directives: [
                                    {
                                      name: "model",
                                      rawName: "v-model",
                                      value: _vm.modelCheckValue,
                                      expression: "modelCheckValue"
                                    }
                                  ],
                                  attrs: {
                                    name: _vm.GroupType,
                                    type: "checkbox"
                                  },
                                  domProps: {
                                    value: item.code,
                                    checked: Array.isArray(_vm.modelCheckValue)
                                      ? _vm._i(_vm.modelCheckValue, item.code) >
                                        -1
                                      : _vm.modelCheckValue
                                  },
                                  on: {
                                    change: function($event) {
                                      var $$a = _vm.modelCheckValue,
                                        $$el = $event.target,
                                        $$c = $$el.checked ? true : false
                                      if (Array.isArray($$a)) {
                                        var $$v = item.code,
                                          $$i = _vm._i($$a, $$v)
                                        if ($$el.checked) {
                                          $$i < 0 &&
                                            (_vm.modelCheckValue = $$a.concat([
                                              $$v
                                            ]))
                                        } else {
                                          $$i > -1 &&
                                            (_vm.modelCheckValue = $$a
                                              .slice(0, $$i)
                                              .concat($$a.slice($$i + 1)))
                                        }
                                      } else {
                                        _vm.modelCheckValue = $$c
                                      }
                                    }
                                  }
                                })
                              : _vm.GroupType === "radio"
                              ? _c("input", {
                                  directives: [
                                    {
                                      name: "model",
                                      rawName: "v-model",
                                      value: _vm.modelCheckValue,
                                      expression: "modelCheckValue"
                                    }
                                  ],
                                  attrs: { name: _vm.GroupType, type: "radio" },
                                  domProps: {
                                    value: item.code,
                                    checked: _vm._q(
                                      _vm.modelCheckValue,
                                      item.code
                                    )
                                  },
                                  on: {
                                    change: function($event) {
                                      _vm.modelCheckValue = item.code
                                    }
                                  }
                                })
                              : _c("input", {
                                  directives: [
                                    {
                                      name: "model",
                                      rawName: "v-model",
                                      value: _vm.modelCheckValue,
                                      expression: "modelCheckValue"
                                    }
                                  ],
                                  attrs: {
                                    name: _vm.GroupType,
                                    type: _vm.GroupType
                                  },
                                  domProps: {
                                    value: item.code,
                                    value: _vm.modelCheckValue
                                  },
                                  on: {
                                    input: function($event) {
                                      if ($event.target.composing) {
                                        return
                                      }
                                      _vm.modelCheckValue = $event.target.value
                                    }
                                  }
                                })
                          ]
                        )
                      ]
                    )
                  }),
                  0
                ),
                _vm._v(" "),
                _vm.GroupType === "checkbox"
                  ? _c("ul", { staticClass: "mui-table-view" }, [
                      _c(
                        "li",
                        {
                          staticClass: "mui-table-view-cell",
                          staticStyle: { padding: "11px 15px" },
                          on: {
                            tap: function($event) {
                              return _vm.clickBtn($event)
                            }
                          }
                        },
                        [
                          _c(
                            "a",
                            {
                              attrs: {
                                href: "javascript:void(0);",
                                "data-index": "1"
                              }
                            },
                            [_c("b", [_vm._v("确定")])]
                          )
                        ]
                      )
                    ])
                  : _vm._e()
              ])
            : _vm._e()
        ]
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js?!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/winModal/index.vue?vue&type=template&id=8e2dba94&":
/*!***************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./src/core/components/winModal/index.vue?vue&type=template&id=8e2dba94& ***!
  \***************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: {
        name: "wintransition",
        "enter-active-class": "animated slideInRight faster",
        "leave-active-class": "animated slideOutRight faster"
      }
    },
    [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: !_vm.isHide,
              expression: "!isHide"
            }
          ],
          staticClass: "win-modal allModal"
        },
        [
          _c("header", { staticClass: "win-header" }, [
            _vm.isMultiple
              ? _c("div", { staticClass: "mui-checkbox multiple-checkbox" }, [
                  _c("input", {
                    staticClass: "multiple-circle",
                    attrs: { type: "checkbox" },
                    on: {
                      change: function($event) {
                        return _vm.selectAll($event)
                      }
                    }
                  })
                ])
              : _vm._e(),
            _vm._v(" "),
            _c("div", { staticClass: "mui-input-row mui-search" }, [
              _c("input", {
                directives: [
                  {
                    name: "model",
                    rawName: "v-model",
                    value: _vm.inputValue,
                    expression: "inputValue"
                  }
                ],
                ref: "winInput",
                staticClass: "mui-input-clear",
                attrs: { type: "search", placeholder: "搜索" },
                domProps: { value: _vm.inputValue },
                on: {
                  input: function($event) {
                    if ($event.target.composing) {
                      return
                    }
                    _vm.inputValue = $event.target.value
                  }
                }
              })
            ]),
            _vm._v(" "),
            _c(
              "div",
              { staticClass: "searchIcon", on: { tap: _vm.clickSearch } },
              [_c("i", { staticClass: "jeicon jeicon-search" })]
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "main-content" }, [
            _vm.isMultiple
              ? _c(
                  "div",
                  {
                    staticClass:
                      "mui-slider-indicator mui-segmented-control mui-segmented-control-inverted"
                  },
                  [
                    _c(
                      "a",
                      {
                        staticClass: "mui-control-item mui-active",
                        on: {
                          tap: function($event) {
                            return _vm.slideTab(1)
                          }
                        }
                      },
                      [
                        _vm._v(
                          "\n          待选数据（" +
                            _vm._s(_vm.listsLength) +
                            "）\n        "
                        )
                      ]
                    ),
                    _vm._v(" "),
                    _c(
                      "a",
                      {
                        staticClass: "mui-control-item",
                        on: {
                          tap: function($event) {
                            return _vm.slideTab(2)
                          }
                        }
                      },
                      [
                        _vm._v(
                          "\n          已选数据（" +
                            _vm._s(_vm.selection.length) +
                            "）\n        "
                        )
                      ]
                    )
                  ]
                )
              : _vm._e(),
            _vm._v(" "),
            _c(
              "div",
              {
                staticClass: "mui-scroll-wrapper",
                staticStyle: { "touch-action": "none" },
                attrs: { id: "scroll-wrapper" }
              },
              [
                _c("i", {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: _vm.showSelected,
                      expression: "showSelected"
                    }
                  ],
                  staticClass:
                    "je-fixed-button je-audio-btn mui-icon mui-icon-trash clear",
                  on: { tap: _vm.clearSelect }
                }),
                _vm._v(" "),
                _c("div", { staticClass: "mui-scroll" }, [
                  _c(
                    "div",
                    {
                      staticClass: "mui-slider",
                      attrs: { id: "slider", "data-total": "4" },
                      on: { slide: _vm.slide }
                    },
                    [
                      _c("div", { staticClass: "mui-slider-group" }, [
                        _c(
                          "div",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.showWaitItem,
                                expression: "showWaitItem"
                              }
                            ],
                            staticClass: "mui-slider-item"
                          },
                          [
                            _c(
                              "ul",
                              { staticClass: "mui-table-view" },
                              [
                                !_vm.lists || _vm.lists.length === 0
                                  ? _c("p", { staticClass: "noDatas" }, [
                                      _vm._v(
                                        "\n                    暂无待选数据\n                  "
                                      )
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                _vm._l(_vm.lists, function(item, index) {
                                  return _c(
                                    "li",
                                    {
                                      key: index,
                                      staticClass: "mui-table-view-cell",
                                      class: {
                                        winActive:
                                          _vm.activeId == item &&
                                          !_vm.isMultiple,
                                        "mui-checkbox": _vm.isMultiple,
                                        "mui-left": _vm.isMultiple
                                      },
                                      on: {
                                        tap: function($event) {
                                          return _vm.handleChoose(item)
                                        }
                                      }
                                    },
                                    [
                                      _c("div", {
                                        staticClass: "je-cell-body",
                                        domProps: {
                                          innerHTML: _vm._s(_vm.renderer(item))
                                        }
                                      }),
                                      _vm._v(" "),
                                      _vm.isMultiple
                                        ? _c("input", {
                                            staticClass: "checkboxs",
                                            attrs: {
                                              "data-id": item,
                                              name: "checkboxs",
                                              type: "checkbox"
                                            },
                                            on: {
                                              change: function($event) {
                                                return _vm.selectOne(
                                                  $event,
                                                  item
                                                )
                                              }
                                            }
                                          })
                                        : _vm._e()
                                    ]
                                  )
                                })
                              ],
                              2
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.showSelected,
                                expression: "showSelected"
                              }
                            ],
                            staticClass: "mui-slider-item"
                          },
                          [
                            _c(
                              "ul",
                              { staticClass: "mui-table-view" },
                              [
                                !_vm.selection || _vm.selection.length === 0
                                  ? _c("p", { staticClass: "noDatas" }, [
                                      _vm._v(
                                        "\n                    暂无已选数据\n                  "
                                      )
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                _vm._l(_vm.selection, function(item, index) {
                                  return _c(
                                    "li",
                                    {
                                      key: index,
                                      staticClass: "mui-table-view-cell",
                                      staticStyle: { "padding-right": "50px" }
                                    },
                                    [
                                      _c("div", {
                                        staticClass: "je-cell-body",
                                        domProps: {
                                          innerHTML: _vm._s(_vm.renderer(item))
                                        }
                                      }),
                                      _vm._v(" "),
                                      _c("i", {
                                        staticClass:
                                          "jeicon jeicon-error-circle-o deleteIcon",
                                        on: {
                                          tap: function($event) {
                                            return _vm.deleteItem(index)
                                          }
                                        }
                                      })
                                    ]
                                  )
                                })
                              ],
                              2
                            )
                          ]
                        )
                      ])
                    ]
                  )
                ])
              ]
            )
          ]),
          _vm._v(" "),
          _c("footer", { staticClass: "win-footer" }, [
            _c(
              "button",
              {
                staticClass: "mui-btn leftBtn",
                attrs: { type: "button" },
                on: { tap: _vm.cancelChoose }
              },
              [_vm._v("\n        取消\n      ")]
            ),
            _vm._v(" "),
            _c(
              "button",
              {
                staticClass: "mui-btn mui-btn-primary rightBtn",
                attrs: { type: "button" },
                on: { tap: _vm.dosureChoose }
              },
              [_vm._v("\n        确定\n      ")]
            )
          ])
        ]
      )
    ]
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/runtime/componentNormalizer.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/_vue-loader@15.3.0@vue-loader/lib/runtime/componentNormalizer.js ***!
  \***************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ "./node_modules/_webpack@4.16.5@webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g; // This works in non-strict mode

g = function () {
  return this;
}();

try {
  // This works if eval is allowed (see CSP)
  g = g || Function("return this")() || (1, eval)("this");
} catch (e) {
  // This works if the window reference is available
  if (typeof window === "object") g = window;
} // g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}


module.exports = g;

/***/ }),

/***/ "./node_modules/_webpack@4.16.5@webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (module) {
  if (!module.webpackPolyfill) {
    module.deprecate = function () {};

    module.paths = []; // module.parent = undefined by default

    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function () {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function () {
        return module.i;
      }
    });
    module.webpackPolyfill = 1;
  }

  return module;
};

/***/ }),

/***/ "./src/core/components/actionSheet/index.vue":
/*!***************************************************!*\
  !*** ./src/core/components/actionSheet/index.vue ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_vue_vue_type_template_id_4f2ea88c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=4f2ea88c& */ "./src/core/components/actionSheet/index.vue?vue&type=template&id=4f2ea88c&");
/* harmony import */ var _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js& */ "./src/core/components/actionSheet/index.vue?vue&type=script&lang=js&");
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_15_3_0_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_15_3_0_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _index_vue_vue_type_template_id_4f2ea88c___WEBPACK_IMPORTED_MODULE_0__["render"],
  _index_vue_vue_type_template_id_4f2ea88c___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null

)

/* hot reload */
if (false) { var api; }
component.options.__file = "src\\core\\components\\actionSheet\\index.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./src/core/components/actionSheet/index.vue?vue&type=script&lang=js&":
/*!****************************************************************************!*\
  !*** ./src/core/components/actionSheet/index.vue?vue&type=script&lang=js& ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/_babel-loader@8.0.6@babel-loader/lib!../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js& */ "./node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/actionSheet/index.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a);

/***/ }),

/***/ "./src/core/components/actionSheet/index.vue?vue&type=template&id=4f2ea88c&":
/*!**********************************************************************************!*\
  !*** ./src/core/components/actionSheet/index.vue?vue&type=template&id=4f2ea88c& ***!
  \**********************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_15_3_0_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_4f2ea88c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=4f2ea88c& */ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js?!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/actionSheet/index.vue?vue&type=template&id=4f2ea88c&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_15_3_0_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_4f2ea88c___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_15_3_0_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_4f2ea88c___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./src/core/components/imTreeUser/index.vue":
/*!**************************************************!*\
  !*** ./src/core/components/imTreeUser/index.vue ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_vue_vue_type_template_id_5f9ae6d2___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=5f9ae6d2& */ "./src/core/components/imTreeUser/index.vue?vue&type=template&id=5f9ae6d2&");
/* harmony import */ var _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js& */ "./src/core/components/imTreeUser/index.vue?vue&type=script&lang=js&");
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_15_3_0_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_15_3_0_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _index_vue_vue_type_template_id_5f9ae6d2___WEBPACK_IMPORTED_MODULE_0__["render"],
  _index_vue_vue_type_template_id_5f9ae6d2___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null

)

/* hot reload */
if (false) { var api; }
component.options.__file = "src\\core\\components\\imTreeUser\\index.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./src/core/components/imTreeUser/index.vue?vue&type=script&lang=js&":
/*!***************************************************************************!*\
  !*** ./src/core/components/imTreeUser/index.vue?vue&type=script&lang=js& ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/_babel-loader@8.0.6@babel-loader/lib!../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js& */ "./node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/imTreeUser/index.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a);

/***/ }),

/***/ "./src/core/components/imTreeUser/index.vue?vue&type=template&id=5f9ae6d2&":
/*!*********************************************************************************!*\
  !*** ./src/core/components/imTreeUser/index.vue?vue&type=template&id=5f9ae6d2& ***!
  \*********************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_15_3_0_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_5f9ae6d2___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=5f9ae6d2& */ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js?!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/imTreeUser/index.vue?vue&type=template&id=5f9ae6d2&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_15_3_0_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_5f9ae6d2___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_15_3_0_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_5f9ae6d2___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./src/core/components/treeUser/index.vue":
/*!************************************************!*\
  !*** ./src/core/components/treeUser/index.vue ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_vue_vue_type_template_id_64e7210e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=64e7210e& */ "./src/core/components/treeUser/index.vue?vue&type=template&id=64e7210e&");
/* harmony import */ var _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js& */ "./src/core/components/treeUser/index.vue?vue&type=script&lang=js&");
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_15_3_0_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_15_3_0_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _index_vue_vue_type_template_id_64e7210e___WEBPACK_IMPORTED_MODULE_0__["render"],
  _index_vue_vue_type_template_id_64e7210e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null

)

/* hot reload */
if (false) { var api; }
component.options.__file = "src\\core\\components\\treeUser\\index.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./src/core/components/treeUser/index.vue?vue&type=script&lang=js&":
/*!*************************************************************************!*\
  !*** ./src/core/components/treeUser/index.vue?vue&type=script&lang=js& ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/_babel-loader@8.0.6@babel-loader/lib!../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js& */ "./node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/treeUser/index.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a);

/***/ }),

/***/ "./src/core/components/treeUser/index.vue?vue&type=template&id=64e7210e&":
/*!*******************************************************************************!*\
  !*** ./src/core/components/treeUser/index.vue?vue&type=template&id=64e7210e& ***!
  \*******************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_15_3_0_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_64e7210e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=64e7210e& */ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js?!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/treeUser/index.vue?vue&type=template&id=64e7210e&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_15_3_0_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_64e7210e___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_15_3_0_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_64e7210e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./src/core/components/winCRGroup/index.vue":
/*!**************************************************!*\
  !*** ./src/core/components/winCRGroup/index.vue ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_vue_vue_type_template_id_3971df8e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=3971df8e& */ "./src/core/components/winCRGroup/index.vue?vue&type=template&id=3971df8e&");
/* harmony import */ var _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js& */ "./src/core/components/winCRGroup/index.vue?vue&type=script&lang=js&");
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_15_3_0_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_15_3_0_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _index_vue_vue_type_template_id_3971df8e___WEBPACK_IMPORTED_MODULE_0__["render"],
  _index_vue_vue_type_template_id_3971df8e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null

)

/* hot reload */
if (false) { var api; }
component.options.__file = "src\\core\\components\\winCRGroup\\index.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./src/core/components/winCRGroup/index.vue?vue&type=script&lang=js&":
/*!***************************************************************************!*\
  !*** ./src/core/components/winCRGroup/index.vue?vue&type=script&lang=js& ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/_babel-loader@8.0.6@babel-loader/lib!../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js& */ "./node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/winCRGroup/index.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a);

/***/ }),

/***/ "./src/core/components/winCRGroup/index.vue?vue&type=template&id=3971df8e&":
/*!*********************************************************************************!*\
  !*** ./src/core/components/winCRGroup/index.vue?vue&type=template&id=3971df8e& ***!
  \*********************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_15_3_0_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_3971df8e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=3971df8e& */ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js?!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/winCRGroup/index.vue?vue&type=template&id=3971df8e&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_15_3_0_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_3971df8e___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_15_3_0_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_3971df8e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./src/core/components/winModal/index.vue":
/*!************************************************!*\
  !*** ./src/core/components/winModal/index.vue ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_vue_vue_type_template_id_8e2dba94___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=8e2dba94& */ "./src/core/components/winModal/index.vue?vue&type=template&id=8e2dba94&");
/* harmony import */ var _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js& */ "./src/core/components/winModal/index.vue?vue&type=script&lang=js&");
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_15_3_0_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_15_3_0_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _index_vue_vue_type_template_id_8e2dba94___WEBPACK_IMPORTED_MODULE_0__["render"],
  _index_vue_vue_type_template_id_8e2dba94___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null

)

/* hot reload */
if (false) { var api; }
component.options.__file = "src\\core\\components\\winModal\\index.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./src/core/components/winModal/index.vue?vue&type=script&lang=js&":
/*!*************************************************************************!*\
  !*** ./src/core/components/winModal/index.vue?vue&type=script&lang=js& ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/_babel-loader@8.0.6@babel-loader/lib!../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js& */ "./node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/winModal/index.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_8_0_6_babel_loader_lib_index_js_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a);

/***/ }),

/***/ "./src/core/components/winModal/index.vue?vue&type=template&id=8e2dba94&":
/*!*******************************************************************************!*\
  !*** ./src/core/components/winModal/index.vue?vue&type=template&id=8e2dba94& ***!
  \*******************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_15_3_0_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_8e2dba94___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/_vue-loader@15.3.0@vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=8e2dba94& */ "./node_modules/_vue-loader@15.3.0@vue-loader/lib/loaders/templateLoader.js?!./node_modules/_vue-loader@15.3.0@vue-loader/lib/index.js?!./src/core/components/winModal/index.vue?vue&type=template&id=8e2dba94&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_15_3_0_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_8e2dba94___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_15_3_0_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_15_3_0_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_8e2dba94___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./src/core/helper/proxy.js":
/*!**********************************!*\
  !*** ./src/core/helper/proxy.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.proxy = proxy;

var _util = __webpack_require__(/*! @/core/helper/util */ "./src/core/helper/util.js");

/**
 * @Author : ZiQin Zhai
 * @Date : 2019/11/13 15:54
 * @Version : 1.0
 * @Last Modifined by : ZiQin Zhai
 * @Last Modifined time : 2019/11/13 15:54
 * @Description 代理对象
 * */
var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: _util.noop,
  set: _util.noop
};
/**
 * 创建代理
 * @param target 目标对象
 * @param sourceKey 代理的目标地址
 * @param key 取值的key
 */

function proxy(target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter() {
    return this[sourceKey][key];
  };

  sharedPropertyDefinition.set = function proxySetter(val) {
    this[sourceKey][key] = val;
  };

  Object.defineProperty(target, key, sharedPropertyDefinition);
}

/***/ }),

/***/ "./src/core/helper/util.js":
/*!*********************************!*\
  !*** ./src/core/helper/util.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isUndef = isUndef;
exports.isKeepAlive = isKeepAlive;
exports.isDef = isDef;
exports.isRealTrue = isRealTrue;
exports.isTrue = isTrue;
exports.isRealFalse = isRealFalse;
exports.isPrimitive = isPrimitive;
exports.isObject = isObject;
exports.toRawType = toRawType;
exports.hasIndex = hasIndex;
exports.isEmptyArray = isEmptyArray;
exports.isArray = isArray;
exports.isPlainObject = isPlainObject;
exports.isString = isString;
exports.isRegExp = isRegExp;
exports.isValidArrayIndex = isValidArrayIndex;
exports.toString = toString;
exports.toNumber = toNumber;
exports.remove = remove;
exports.hasOwn = hasOwn;
exports.cached = cached;
exports.toArray = toArray;
exports.extend = extend;
exports.toObject = toObject;
exports.noop = noop;
exports.looseEqual = looseEqual;
exports.looseIndexOf = looseIndexOf;
exports.once = once;
exports.debounce = debounce;
exports.throttle = throttle;
exports.extendFrom = extendFrom;
exports.identity = exports.no = exports.capitalize = exports.camelize = exports.emptyObject = void 0;

var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/typeof.js"));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/toConsumableArray.js"));

/**
 * @Author : ZiQin Zhai
 * @Date : 2019/5/29 14:52
 * @Version : 1.0
 * @Last Modifined by : ZiQin Zhai
 * @Last Modifined time : 2019/5/31 14:52
 * @Description 判断数据类型  copy自尤雨溪
 * */

/**
 * 返回一个空对象
 * @type {Readonly<{}>}
 */
var emptyObject = Object.freeze({}); // these helpers produces better vm code in JS engines due to their
// explicitness and function inlining

/**
 * 校验是否为undefined
 * @param v 待校验数据
 * @returns boolean
 */

exports.emptyObject = emptyObject;

function isUndef(v) {
  return v === undefined || v === null;
}
/**
 * 判断当前的路由是否需要keep-alive
 * @param obj 路由的详细参数
 * @returns boolean
 */


function isKeepAlive(status, name, arr) {
  if (JE.isEmpty(name) || JE.isNotEmpty(arr)) {
    return (0, _toConsumableArray2["default"])(new Set(arr));
  } // 如果数组是个空就直接添加并且是需要keepAlive


  if (status) {
    return (0, _toConsumableArray2["default"])(new Set(arr).add(name));
  }

  return (0, _toConsumableArray2["default"])(new Set(arr)["delete"](name));
}
/**
 * 校验数据是否为非undefined
 * @param v 待校验数据
 * @returns boolean
 */


function isDef(v) {
  return v !== undefined && v !== null;
}
/**
 * 校验数据是否为true
 * @param v 待校验数据
 * @returns boolean
 */


function isRealTrue(v) {
  return v === true;
}
/**
 * 校验数据为真还是为假
 * @param v 待校验数据
 * @returns boolean
 */


function isTrue(v) {
  return !!v;
}
/**
 * 校验数据是否为false
 * @param v 待校验数据
 * @returns boolean
 */


function isRealFalse(v) {
  return v === false;
}
/**
 * 校验数据是否为一个基础类型
 * Check if value is primitive
 * return boolean
 */


function isPrimitive(value) {
  return typeof value === 'string' || typeof value === 'number' // $flow-view-disable-line
  || (0, _typeof2["default"])(value) === 'symbol' || typeof value === 'boolean';
}
/**
 * 校验变量是否为一个对象
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 * return boolean
 */


function isObject(obj) {
  return obj !== null && (0, _typeof2["default"])(obj) === 'object';
}
/**
 * Get the raw type string of a value e.g. [object Object]
 */


var _toString = Object.prototype.toString;

function toRawType(value) {
  return _toString.call(value).slice(8, -1);
}
/**
 * 判断数组中是否有某个下标元素
 * @param arr 目标数组
 * @param index 要获取的下标
 * @returns item 目标下标的元素
 */


function hasIndex(arr, index) {
  var item;

  if (Array.isArray(arr) && arr.length > index) {
    item = arr[index];
  }

  return item;
}
/**
 * 验证是不是一个空数组
 * @param arr 目标数组
 * @returns {arg is Array<any> | boolean}
 */


function isEmptyArray(arr) {
  return Array.isArray(arr) && arr.length === 0;
}
/**
 * 验证是否为一个数组
 */


function isArray(arr) {
  return Array.isArray(arr);
}
/**
 * 判断数据是否为一个纯粹的对象
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 * return boolean
 */


function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}
/**
 * 判断一个对象是否为String
 */


function isString(obj) {
  return _toString.call(obj) === '[object String]';
}
/**
 * 判断数据是否为一个正则对象
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 * return boolean
 */


function isRegExp(v) {
  return _toString.call(v) === '[object RegExp]';
}
/**
 * 检查val是否是一个有效的数组索引，其实就是验证是否是一个非无穷大的正整数
 * Check if val is a valid array index.
 */


function isValidArrayIndex(val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val);
}
/**
 * 强转String
 * Convert a value to a string that is actually rendered.
 * return String
 */


function toString(val) {
  return val == null ? '' : (0, _typeof2["default"])(val) === 'object' ? JSON.stringify(val, null, 2) : String(val);
}
/**
 * 强转number 如果成功转换则返回转换后的值 否则返回原数据
 * Convert a input value to a number for persistence.
 * If the conversion fails, return original string.
 * return number | string
 */


function toNumber(val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n;
}
/**
 * Remove an item from an array
 * 移除数组中的某一个元素
 * return Array<any> | void
 */


function remove(arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);

    if (index > -1) {
      return arr.splice(index, 1);
    }
  }
}
/**
 * Check whether the object has the property.
 */


var hasOwnProperty = Object.prototype.hasOwnProperty;
/**
 * 判断一个值是否为某一个对象的属性
 * @param obj 对象
 * @param key 值
 * @returns {boolean}
 */

function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}
/**
 * 柯里化函数
 * Create a cached version of a pure function.
 */


function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}
/**
 * 将字符串处理为驼峰
 * Camelize a hyphen-delimited string.
 */


var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
});
/**
 * Capitalize a string.
 */

exports.camelize = camelize;
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
});
/**
 * Convert an Array-like object to a real Array.
 * 将类数组对象处理为真实的数组
 * return Array<any>
 */

exports.capitalize = capitalize;

function toArray(list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);

  while (i--) {
    ret[i] = list[i + start];
  }

  return ret;
}
/**
 * Mix properties into target object.
 * 浅拷贝
 * return to
 */


function extend(to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }

  return to;
}
/**
 * Merge an Array of Objects into a single Object.
 */


function toObject(arr) {
  var res = {};

  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }

  return res;
}
/**
 * 空函数
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)
 */


function noop() {}
/**
 * Always return false.
 */


var no = function no() {
  return false;
};
/**
 * 返回一个随机数
 * Return same value
 */


exports.no = no;

var identity = function identity(_) {
  return _;
};
/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */


exports.identity = identity;

function looseEqual(a, b) {
  if (a === b) return true;
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);

  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);

      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i]);
        });
      }

      if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key]);
        });
      }
      /* istanbul ignore next */


      return false;
    } catch (e) {
      /* istanbul ignore next */
      return false;
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b);
  } else {
    return false;
  }
}

function looseIndexOf(arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) return i;
  }

  return -1;
}
/**
 * 闭包保证函数只执行一次
 * Ensure a function is called only once.
 */


function once(fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  };
}
/**
 * 消抖函数，保证函数在一定时间内只能触发一次，如果这个时间段内再次触发，则重新计算
 * @param func 目标对象
 * @param wait 等待时间
 * @param immediate 是否立即执行
 */


function debounce(func, wait, immediate) {
  var timeout;
  return function () {
    var _this = this;

    if (timeout) clearTimeout(timeout);

    if (immediate) {
      var callNow = !timeout;
      timeout = setTimeout(function () {
        timeout = null;
      }, wait);
      if (callNow) func.apply(_this, arguments);
    } else {
      timeout = setTimeout(function () {
        func.apply(_this, arguments);
      }, wait);
    }
  };
}
/**
 * 节流函数 规定时间内只能触发一次
 * @param func
 * @param wait 等待时机
 */


function throttle(func, wait) {
  var prevTimestamp = 0;
  return function () {
    var _this = this;

    var now = Date.now();

    if (now - prevTimestamp > wait) {
      func.apply(_this, arguments);
      prevTimestamp = now;
    }
  };
}
/**
 * 从父类对象继承
 * @param Parent 父类
 * @param Sub 子类
 */


function extendFrom(Parent, Sub) {
  Sub.prototype = Object.create(Parent.prototype);
  Sub.prototype.constructor = Sub;
  return Sub;
}

/***/ }),

/***/ "./src/core/je/class/DelayedTask.js":
/*!******************************************!*\
  !*** ./src/core/je/class/DelayedTask.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/defineProperty.js"));

/**
 * 延时任务类
 * @module DelayedTask
 */
var DelayedTask =
/*#__PURE__*/
function () {
  /**
   * 构造函数
  * @example
  * const task = JE.delayedTask(function(){
  *  alert('延时任务');
  * });
  * task.delay(200);
   * @param {Function} fn 执行的方法
   * @param {Object} [scope] 作用域
   * @param {Array} [args] 参数
   */
  function DelayedTask(fn, scope, args) {
    var _this = this;

    (0, _classCallCheck2["default"])(this, DelayedTask);
    (0, _defineProperty2["default"])(this, "_id", null);
    (0, _defineProperty2["default"])(this, "_delay", 0);
    (0, _defineProperty2["default"])(this, "_callFn", function () {
      // 回调函数
      clearInterval(_this._id);
      _this._id = null; // eslint-disable-next-line prefer-spread

      _this.fn.apply(_this.scope || _this, _this.args || []);
    });
    this.scope = scope;
    this.fn = fn;
    this.args = args;
  }
  /**
   * 事件ID
   * @private
   */


  (0, _createClass2["default"])(DelayedTask, [{
    key: "delay",

    /**
    *  延时执行
    * @param {Numbar} newDelay 延时时间
    * @param {Function} [newFn] 新方法
    * @param {Array} [newArgs] 新参数
    */
    value: function delay(newDelay, newFn, newArgs) {
      this.cancel();
      this._delay = newDelay || this._delay;
      this.fn = newFn || this.fn;
      this.args = newArgs || this.args;

      if (!this._id) {
        this._id = setInterval(this._callFn, this._delay);
      }
    }
    /**
    * 取消执行
    */

  }, {
    key: "cancel",
    value: function cancel() {
      if (this._id) {
        clearInterval(this._id);
        this._id = null;
      }
    }
  }]);
  return DelayedTask;
}();

exports["default"] = DelayedTask;

/***/ }),

/***/ "./src/core/je/class/Element.js":
/*!**************************************!*\
  !*** ./src/core/je/class/Element.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/defineProperty.js"));

/**
 * HtmlElement工具类
 * @module Element
 */
var Element =
/*#__PURE__*/
function () {
  /**
   * 构造函数
   * @param {String|HTMLElement|Element} element id|dom|element
   */
  function Element(element) {
    (0, _classCallCheck2["default"])(this, Element);
    (0, _defineProperty2["default"])(this, "isElement", false);
    (0, _defineProperty2["default"])(this, "_listeners", {});
    if (!element) return null;
    if (element.isElement) return element;
    /**
     * dom对象
     * @public
     */

    if (typeof element == 'string') {
      this.dom = document.getElementById(element) || document.querySelector(element);
    } else {
      this.dom = element;
    }

    if (!this.dom) return null;
    this.isElement = true;
    /**
     * dom id
     * @public
     */

    this.id = this.dom.id = this.dom.id || JE.uuid();
  }
  /**
   * Element标识
   */


  (0, _createClass2["default"])(Element, [{
    key: "addClass",

    /**
     * 添加样式
     * @param  {...any} cls 样式名，可以添加多个
     */
    value: function addClass() {
      var _this$dom$classList;

      (_this$dom$classList = this.dom.classList).add.apply(_this$dom$classList, arguments);
    }
    /**
    * 删除样式
    * @param  {...any} cls 样式名，可以删除多个
    */

  }, {
    key: "removeClass",
    value: function removeClass() {
      var _this$dom$classList2;

      (_this$dom$classList2 = this.dom.classList).remove.apply(_this$dom$classList2, arguments);
    }
    /**
     * 包含样式
     * @param {String} cls 样式名
     * @returns {Boolean} 包含结果
     */

  }, {
    key: "hasClass",
    value: function hasClass(cls) {
      return this.dom.classList.contains(cls);
    }
    /**
     * 切换类名
     * @param {String} cls 样式名
     * @param {Boolean} toggle true添加样式，false删除样式
     * @returns {Boolean} 操作结果
     */

  }, {
    key: "toggleClass",
    value: function toggleClass(cls, toggle) {
      return this.dom.classList.toggle(cls, toggle);
    }
    /**
     * 获取属性
     * @param {String} key 属性
     * @returns {String}
     */

  }, {
    key: "getAttribute",
    value: function getAttribute(key) {
      return this.dom.getAttribute(key);
    }
    /**
     * 设置属性
     * @param {String} key 属性
     * @param {String} val 值
     * @returns {Element}
     */

  }, {
    key: "setAttribute",
    value: function setAttribute(key, val) {
      this.dom.setAttribute(key, val);
      return this;
    }
    /**
     * 设置样式
     * @param {String|Object} key 样式属性或者对象
     * @param {String} val 样式值
     * @returns {Element}
     */

  }, {
    key: "setStyle",
    value: function setStyle(key, val) {
      var _this = this;

      if (JE.isObject(key)) {
        JE.each(key, function (_val, _key) {
          _this.dom.style[_key] = _val;
        });
      } else {
        this.dom.style[key] = val;
      }

      return this;
    }
    /**
     * 获得高
     * @returns {Number}
     */

  }, {
    key: "getHeight",
    value: function getHeight() {
      return this.dom.offsetHeight;
    }
    /**
     * 获得宽
     * @returns {Number}
     */

  }, {
    key: "getWidth",
    value: function getWidth() {
      return this.dom.offsetWidth;
    }
    /**
     * 设置HTML
     * @param {String} html html
     * @returns {Element}
     */

  }, {
    key: "html",
    value: function html(_html) {
      this.dom.innerHTML = _html;
      return this;
    }
  }, {
    key: "on",
    value: function on(eventName, fn) {
      this.dom.addEventListener(eventName, fn);
      var ls = this._listeners[eventName] || [];
      ls.push(fn);
      this._listeners[eventName] = ls;
    }
  }, {
    key: "un",
    value: function un(eventName, fn) {
      var _this2 = this;

      var ls = this._listeners[eventName] || [];
      var unIndex = -1; // 删除单个事件的索引

      ls.forEach(function (_fn, index) {
        if (!fn || fn == _fn) {
          _this2.dom.removeEventListener(eventName, _fn);

          if (fn) {
            unIndex = index;
            return false;
          }
        }
      });

      if (fn) {
        if (unIndex > 0) {
          ls.splice(unIndex, 1);
          this._listeners[eventName] = ls;
        }
      } else {
        delete this._listeners[eventName];
      }
    }
  }, {
    key: "up",
    value: function up(simpleSelector, limit, returnDom) {
      var parentNode = this.dom.parentNode; // 如果没有选择器，默认父节点

      if (JE.isEmpty(simpleSelector)) return parentNode; // 实现思路
      // 1.通过父节点的父节点，查找父父节点 > selector 符合的子节点
      // 2.将查找到的子节点跟当前父节点对比，如果符合，返回父节点

      var ppNode = parentNode.parentNode;
      var count = 0;
      var dom;
      limit = limit || 50;

      while (ppNode) {
        count++;
        ppNode.id = ppNode.id || JE.uuid();
        var nodes = ppNode.querySelectorAll("#".concat(ppNode.id, "> ").concat(simpleSelector)); // eslint-disable-next-line no-loop-func

        JE.each(nodes, function (node) {
          if (parentNode == node) {
            dom = node;
            return false;
          }
        });

        if (dom || limit > 0 && limit == count) {
          break;
        } else {
          parentNode = ppNode;
          ppNode = parentNode.parentNode;
        }
      }

      return dom && (returnDom ? dom : JE.getEl(dom));
    }
  }, {
    key: "down",
    value: function down(simpleSelector, returnDom) {
      var dom = this.select(simpleSelector)[0];

      if (dom) {
        return returnDom ? dom : JE.getEl(dom);
      }

      return null;
    }
  }, {
    key: "parent",
    value: function parent(simpleSelector, limit, returnDom) {
      return this.up(simpleSelector, limit, returnDom);
    }
  }, {
    key: "child",
    value: function child(simpleSelector, returnDom) {
      return this.down("#".concat(this.id, " > ").concat(simpleSelector), returnDom);
    }
  }, {
    key: "select",
    value: function select(simpleSelector) {
      return this.dom.querySelectorAll(simpleSelector);
    }
  }, {
    key: "remove",
    value: function remove() {
      this.dom.parentNode.removeChild(this.dom);
    }
  }]);
  return Element;
}();

exports["default"] = Element;

/***/ }),

/***/ "./src/core/je/class/Store.js":
/*!************************************!*\
  !*** ./src/core/je/class/Store.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/defineProperty.js"));

/**
 * Store 数据集
 * @module Store
 */
var Store =
/*#__PURE__*/
function () {
  /**
   * 构造参数
   * @param {Object} config 配置信息
   * @param {String} config.idName 主键名
   * @param {String} config.url 请求链接
   * @param {String} [config.params] 请求参数
   * @param {String} [config.pageSize] 每页条数，默认10条
   * @param {String} [config.root] 返回数据的json属性，默认rows
   * @param {String} [config.totalProperty] 返回总条数的json属性，默认totalCount
   */
  function Store(config) {
    (0, _classCallCheck2["default"])(this, Store);
    (0, _defineProperty2["default"])(this, "page", 1);
    (0, _defineProperty2["default"])(this, "start", 0);
    (0, _defineProperty2["default"])(this, "totalCount", 0);
    (0, _defineProperty2["default"])(this, "totalPage", 1);
    (0, _defineProperty2["default"])(this, "dataMap", {});
    (0, _defineProperty2["default"])(this, "data", []);

    /**
     * 每页条数
     */
    this.pageSize = this.limit = config.pageSize || 10;
    /**
     * 请求链接
     */

    this.url = config.url;
    /**
     * 请求参数
     */

    this.params = config.params;
    /**
     * 主键名
     */

    this.idName = config.idName;
    /**
     * 返回数据的json属性，默认rows
     */

    this.root = config.root || 'rows';
    /**
     * 返回总条数的json属性，默认totalCount
     */

    this.totalProperty = config.totalProperty || 'totalCount';
  }
  /**
   * 当前页码
   */


  (0, _createClass2["default"])(Store, [{
    key: "getById",

    /**
     * 通过主键获得数据
     * @param {String} id 主键
     * @returns {Object}
     */
    value: function getById(id) {
      return this.dataMap[id];
    }
    /**
     * 通过主键删除数据
     * @param {String} id 主键
     */

  }, {
    key: "removeById",
    value: function removeById(id) {
      var me = this;
      var index = me.data.indexOf(id);

      if (index != -1) {
        me.data.splice(index, 1);
      }

      delete me.dataMap[id];

      if (me.totalCount > 0) {
        me.totalCount--;
      }
    }
    /**
     * 循环数据
     * @param {Function} fn 循环方法
     */

  }, {
    key: "each",
    value: function each(fn) {
      var me = this;
      if (!fn) return;
      JE.each(me.data, function (id, index) {
        var data = me.dataMap[id];
        return fn(data, index);
      });
    }
    /**
     * 按照页码加载数据
     * @param {Number} page 页码
     * @param {Object} config 请求配置
     * @param {Object} [config.params] 请求参数
     * @param {Function} config.callback 回掉函数，参数：data,store
     */

  }, {
    key: "loadPage",
    value: function loadPage(page, config) {
      var me = this; // 分页信息

      page = JE.toNum(JE.value(page, 1));

      if (page <= 1) {
        page = 1;
      } else if (page > me.totalPage) {
        page = me.totalPage;
      }

      me.page = page;
      me.start = (me.page - 1) * me.limit; // 请求参数,默认参数和自动生成的参数

      var _params = JE.apply({
        page: me.page,
        start: me.start,
        limit: me.limit
      }, me.params); // 额外请求的参数


      if (JE.isFunction(config)) {
        config = {
          callback: config
        };
      }

      me._params = config.params || {};
      me._callback = config.callback;
      var params = JE.apply(_params, me._params);
      JE.ajax({
        url: me.url,
        params: params,
        callback: function callback(success, obj) {
          var pageData = obj[me.root];

          if (me.page == 1) {
            me.dataMap = {}; // 清空数据

            me.data = [];
          } // 有ID，才会缓存数据


          if (JE.isNotEmpty(me.idName)) {
            JE.each(pageData, function (data) {
              var id = data[me.idName];
              me.dataMap[id] = data;
              me.data.push(id);
            });
          } // 更新分页信息


          me.totalCount = obj[me.totalProperty];
          me.totalPage = window.parseInt(me.totalCount / me.limit) + (me.totalCount % me.limit > 0 ? 1 : 0);

          if (me._callback) {
            me._callback(obj, me);
          }
        }
      });
    }
    /**
     * 下一页
     * @param {Object} config 配置信息
     */

  }, {
    key: "nextPage",
    value: function nextPage(config) {
      var me = this;
      me.loadPage(me.page + 1, config);
    }
    /**
     * 刷新数据
     */

  }, {
    key: "refresh",
    value: function refresh() {
      var me = this;
      me.loadPage(1, {
        params: me._params,
        callback: me._callback
      });
    }
  }]);
  return Store;
}();

exports["default"] = Store;

/***/ }),

/***/ "./src/core/je/class/WebSocket.js":
/*!****************************************!*\
  !*** ./src/core/je/class/WebSocket.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/defineProperty.js"));

var _Interface = _interopRequireDefault(__webpack_require__(/*! ./socket/Interface */ "./src/core/je/class/socket/Interface.js"));

/**
 * WebSocket
 */
var WebSocket =
/*#__PURE__*/
function () {
  /**
   * 显示debug输出
   */
  function WebSocket(url) {
    (0, _classCallCheck2["default"])(this, WebSocket);
    (0, _defineProperty2["default"])(this, "debug", true);
    var me = this;
    url = url || JE.getSystemConfig('JE_CORE_WEBSOCKETURL4APP') || 'http://219.142.64.198:7001';
    me.socket = _Interface["default"].create(url, {
      onopen: function onopen() {
        me._onOpen.apply(me, arguments);
      },
      onmessage: function onmessage() {
        me._onReceive.apply(me, arguments);
      },
      onclose: function onclose() {
        me._onClose.apply(me, arguments);
      }
    });
  }
  /**
   * 发送消息
   * @param {String} event 事件类型
   * @param {Object} body 消息内容
   */


  (0, _createClass2["default"])(WebSocket, [{
    key: "send",
    value: function send() {
      var _this$getSocket;

      (_this$getSocket = this.getSocket()).send.apply(_this$getSocket, arguments);
    }
    /**
     * 重连
     */

  }, {
    key: "reconnect",
    value: function reconnect() {
      this.getSocket().reconnect();
    }
    /**
     * 销毁
     */

  }, {
    key: "destory",
    value: function destory() {
      this.getSocket().destory();
    }
    /**
     * 获得socket接口实例
     * @returns {SocketInterface}
     */

  }, {
    key: "getSocket",
    value: function getSocket() {
      return this.socket;
    }
    /**
     * 可操作的页面
     */

  }, {
    key: "_onReceive",

    /**
     * 接收消息及响应
     * @param {Object} event 事件
     */
    value: function _onReceive(event) {
      var me = this;
      var message = JSON.parse(event.data || '{}');
      me.debug && console.log('>>> receive packet=', message); // 分发处理消息

      JE.each(me.webviews, function (view) {
        JE.fire(view, 'socketonmessage', message);
      });
    }
    /**
     * 建立连接
     * @param {*} event 事件
     * @param {*} reconnect 是否重连
     */

  }, {
    key: "_onOpen",
    value: function _onOpen(event, reconnect) {
      var me = this;
      me.debug && console.log('%c Web Socket opened!', 'color:green;');

      if (me.getSocket().isConnected()) {
        // 连接建立后握手
        me._handshake(); // 通知重连成功


        if (reconnect) {
          me._onReconnect();
        }
      }
    }
    /**
     * 连接关闭
     * @param {*} event 事件
     */

  }, {
    key: "_onClose",
    value: function _onClose(event) {
      var me = this;
      me.debug && console.log('%c Web Socket closed!', 'color:red;', event);
      JE.each(me.webviews, function (view) {
        JE.fire(view, 'socketdisconnect');
      });
    }
    /**
     * 接收异常
     * @param {event} event 事件
     */

  }, {
    key: "_onError",
    value: function _onError(event) {
      var me = this;
      me.debug && console.error('Web Socket receive, error', event);
      me.getSocket().close();
    }
    /**
     * 断线重连成功
     */

  }, {
    key: "_onReconnect",
    value: function _onReconnect() {
      var me = this;
      console.log('%c Web Socket reconnect success !', 'color:green;');
      JE.each(me.webviews, function (view) {
        JE.fire(view, 'socketreconnect');
      });
    }
    /**
     * 进行握手操作
     */

  }, {
    key: "_handshake",
    value: function _handshake() {
      var me = this;
      var user = JE.getCurrentUser();
      me.debug && console.log('Web Socket handshake:', user.username, '~', user.userId);
      me.send('_handshakeEvent', {
        userId: user.userId,
        deviceId: 'web',
        // web/phone
        osName: 'web',
        // 原生用
        osVersion: '1.0',
        // 原生版本
        clientVersion: '1.0',
        mobile: '2',
        appId: JE.getApkCode(),
        cid: JE.getCID()
      });
    }
  }, {
    key: "webviews",
    get: function get() {
      return plus.webview.all();
    }
  }]);
  return WebSocket;
}();

exports["default"] = WebSocket;

/***/ }),

/***/ "./src/core/je/class/socket/Android.js":
/*!*********************************************!*\
  !*** ./src/core/je/class/socket/Android.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/getPrototypeOf.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/inherits.js"));

var _H2 = _interopRequireDefault(__webpack_require__(/*! ./H5 */ "./src/core/je/class/socket/H5.js"));

/**
 * WebSocket-Android
 */
var Android =
/*#__PURE__*/
function (_H) {
  (0, _inherits2["default"])(Android, _H);

  function Android() {
    (0, _classCallCheck2["default"])(this, Android);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Android).apply(this, arguments));
  }

  (0, _createClass2["default"])(Android, [{
    key: "destory",

    /**
     * 销毁
     */
    value: function destory() {
      var me = this;

      if (me.isConnected()) {
        me._destory = true; // 重置重连

        if (me.reconnectHandler && me.reconnectHandler.hasCallbacks(me.reconnectRunnable)) {
          me.reconnectHandler.removeCallbacks(me.reconnectRunnable);
        } // 重置心跳


        if (me.heartHandler && me.heartHandler.hasCallbacks(me.heartRunnable)) {
          me.heartHandler.removeCallbacks(me.heartRunnable);
        } // 关闭连接


        me.getSocket().close();
        me.debug && console.log('Web Socket method closed!');
      }
    }
    /**
     * 重连
     * @param {Boolean} reset 立即重连
     */

  }, {
    key: "reconnect",
    value: function reconnect() {
      var me = this; // 重置重连

      if (me.reconnectHandler && me.reconnectHandler.hasCallbacks(me.reconnectRunnable)) {
        me.reconnectHandler.removeCallbacks(me.reconnectRunnable);
      } // 创建操作


      if (!me.reconnectHandler) {
        var Handler = plus.android.importClass('android.os.Handler');
        me.reconnectHandler = new Handler();
        me.reconnectRunnable = plus.android["implements"]('java.lang.Runnable', {
          run: function run() {
            me.reconnect();
          }
        });
      } // 连接成功，停止重连 || 达到重连次数，停止重连


      if (me.isConnected() || me.checkTimes == me.connectTimes) {
        delete me.reconnecting;
        delete me.checkTimes;
        return;
      } // 重连中标记


      me.reconnecting = true; // 重连计数

      me.checkTimes = me.checkTimes || 0;
      me.checkTimes++;
      me.debug && console.log("%c Web Socket Begin reconnect ...".concat(me.checkTimes), 'color:blue;'); // 连接

      me.connect(); // 延时重连

      me.reconnectHandler.postDelayed(me.reconnectRunnable, me.checkTimes * 1000);
    }
    /**
     * 心跳检测
     * @param {Boolean} reset 重置心跳
     */

  }, {
    key: "heartBeat",
    value: function heartBeat() {
      var me = this; // 重置心跳

      if (me.heartHandler && me.heartHandler.hasCallbacks(me.heartRunnable)) {
        me.heartHandler.removeCallbacks(me.heartRunnable);
      }

      if (!me.heartHandler) {
        var Handler = plus.android.importClass('android.os.Handler');
        me.heartHandler = new Handler();
        me.heartRunnable = plus.android["implements"]('java.lang.Runnable', {
          run: function run() {
            me.send('heartbeat');
            me.heartBeat();
          }
        });
      } // 没有连接，停止心跳


      if (!me.isConnected()) {
        return;
      } // 轮询检测心跳


      var second = 15; // 心跳时间  秒

      me.heartHandler.postDelayed(me.heartRunnable, second * 1000);
    }
  }]);
  return Android;
}(_H2["default"]);

exports["default"] = Android;

/***/ }),

/***/ "./src/core/je/class/socket/H5.js":
/*!****************************************!*\
  !*** ./src/core/je/class/socket/H5.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/defineProperty.js"));

/**
 * WebSocket
 */
var H5 =
/*#__PURE__*/
function () {
  /**
   * 显示debug输出
   */

  /**
   * socket发送类型
   */

  /**
   * socket接收类型
   */
  // 重连次数

  /**
   * 实例化时，创建连接
   */
  function H5() {
    (0, _classCallCheck2["default"])(this, H5);
    (0, _defineProperty2["default"])(this, "debug", true);
    (0, _defineProperty2["default"])(this, "SocketState", {
      CLOSED: 3,
      CLOSING: 2,
      CONNECTING: 0,
      OPEN: 1
    });
    (0, _defineProperty2["default"])(this, "SendCommand", {
      UNKNOWN: 0,
      HEARTBEAT: 1,
      HANDSHAKE: 2,
      LOGIN: 3,
      LOGOUT: 4,
      KICK: 5,
      CHAT: 6,
      CANCEL: 7,
      PUSH: 8,
      OK: 10,
      ERROR: 11
    });
    (0, _defineProperty2["default"])(this, "ReceiveCommand", {
      HANDSHAKE: 0,
      // 握手
      IMMSG: 1,
      // IM对话
      IM: 2,
      // IM推送
      IMGROUPMSG: 3,
      // IM群组对话
      JEPLUS: 4,
      // JEPLUS推送
      UNREAD: 5 // 未读消息

    });
    (0, _defineProperty2["default"])(this, "connectTimes", 5);
    (0, _defineProperty2["default"])(this, "_failedMessage", []);
    this.connect.apply(this, arguments);
  }
  /**
   * 进行连接
   * @param {String} url 链接地址
   * @param {Object} events 事件
   */


  (0, _createClass2["default"])(H5, [{
    key: "connect",
    value: function connect(url, events) {
      var me = this;
      me._socket_url = url = url || me._socket_url;
      me._socket_events = events = events || me._socket_events;

      if (plus.networkinfo.getCurrentType() == plus.networkinfo.CONNECTION_NONE) {
        console.error('网络异常，请检查网络设置！');
        return;
      } // 创建连接


      var socket = me._socket = new window.WebSocket(url); // 接收消息
      // socket.onmessage = (event) => { me._onReceive(event.data); };

      socket.addEventListener('message', function (event) {
        // 重置心跳
        me.heartBeat();
        var message = event.data; // 握手成功，如果有发送失败消息，重新发送

        if (message.type == me.ReceiveCommand.HANDSHAKE) {
          me._failedMessage.forEach(function (msg) {
            me.send(msg.event, msg.body);
          });

          me._failedMessage = [];
        } else {
          events.onmessage(event);
        }
      }); // 打开连接

      socket.onopen = function (event) {
        events.onopen(event, me.reconnecting);
        delete me.reconnecting;
      }; // 关闭连接


      socket.onclose = function (event) {
        if (!me._destory) {
          // 通知断线消息
          if (!me.reconnecting) {
            events.onclose(event);
          } // 断线重连


          me.reconnect();
        }
      }; // 连接错误


      socket.onerror = function (event) {
        me.debug && console.error('Web Socket receive, error', event);
        me.getSocket().close();
      };

      me.debug && console.debug("try connect server, url=".concat(me._socket_url));
    }
    /**
     * 是否连接
     * @returns{Boolean}
     */

  }, {
    key: "isConnected",
    value: function isConnected() {
      return this.getSocket().readyState == 1;
    }
    /**
     * 销毁
     */

  }, {
    key: "destory",
    value: function destory() {
      var me = this;

      if (me.isConnected()) {
        me._destory = true; // 销毁重连

        me.reconnectFn && clearTimeout(me.reconnectFn); // 销毁心跳

        me._heartBeatFn && clearInterval(me._heartBeatFn); // 关闭连接

        me.getSocket().close();
        me.debug && console.log('Web Socket method closed!');
      }
    }
    /**
     * 获得websocket对象
     * @returns {WebSocket}
     */

  }, {
    key: "getSocket",
    value: function getSocket() {
      var me = this;
      return me._socket;
    }
    /**
     * 重连
     * @param {Boolean} reset 立即重连
     */

  }, {
    key: "reconnect",
    value: function reconnect() {
      var me = this; // 重置重连

      me._reconnectFn && clearTimeout(me._reconnectFn); // 连接成功，停止重连 || 达到重连次数，停止重连

      if (me.isConnected() || me.checkTimes == me.connectTimes) {
        delete me.reconnecting;
        delete me.checkTimes;
        return;
      } // 重连中标记


      me.reconnecting = true; // 重连计数

      me.checkTimes = me.checkTimes || 0;
      me.checkTimes++;
      me.debug && console.log("%c Web Socket Begin reconnect ...".concat(me.checkTimes), 'color:blue;'); // 连接

      me.connect(); // 延时重连

      me._reconnectFn = setTimeout(function () {
        me.reconnect();
      }, me.checkTimes * 1000);
    }
    /**
     * 心跳检测
     */

  }, {
    key: "heartBeat",
    value: function heartBeat() {
      var me = this; // 重置心跳

      me._heartBeatFn && clearInterval(me._heartBeatFn); // 没有连接，停止心跳

      if (!me.isConnected()) {
        return;
      } // 轮询检测心跳


      var second = 15; // 心跳时间  秒

      me._heartBeatFn = setInterval(function () {
        me.send('heartbeat');
      }, second * 1000);
    }
    /**
     * 发送失败的消息
     */

  }, {
    key: "send",

    /**
     * 发送消息
     * @param {String} event 事件类型
     * @param {Object} body 消息内容
     */
    value: function send(event) {
      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var me = this;
      var socket = me.getSocket();
      me.debug && console.log(event, body);
      var packet = {
        cmd: 0,
        // 1个字节
        type: 0,
        // 1个字节
        sessionId: '',
        // 四个字节
        flags: 0,
        // 1个字节
        body: body
      }; // eslint-disable-next-line default-case

      switch (event) {
        case 'message':
          packet.cmd = me.SendCommand.CHAT;
          break;

        case '_handshakeEvent':
          packet.cmd = me.SendCommand.HANDSHAKE;
          break;

        case 'heartbeat':
          packet.cmd = me.SendCommand.HEARTBEAT;
          break;
      }

      if (me.isConnected()) {
        socket.send(JSON.stringify(packet));
      } else if ([socket.CLOSED, socket.CLOSING].indexOf(socket.readyState) != -1) {
        JE.log('socket 链接关闭，准备重连..');

        this._failedMessage.push({
          event: event,
          body: body
        }); // 删除正在重连的标记


        delete me.reconnecting;
        me.reconnect();
      } else if (socket.readyState == socket.CONNECTING) {
        JE.log('socket 链接中，请稍等..');

        this._failedMessage.push({
          event: event,
          body: body
        });
      }
    }
  }]);
  return H5;
}();

exports["default"] = H5;

/***/ }),

/***/ "./src/core/je/class/socket/Interface.js":
/*!***********************************************!*\
  !*** ./src/core/je/class/socket/Interface.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js"));

var _H = _interopRequireDefault(__webpack_require__(/*! ./H5 */ "./src/core/je/class/socket/H5.js"));

var _Android = _interopRequireDefault(__webpack_require__(/*! ./Android */ "./src/core/je/class/socket/Android.js"));

/**
 * Socket接口类
 */
var Interface =
/*#__PURE__*/
function () {
  function Interface(SocketClass, url, events) {
    (0, _classCallCheck2["default"])(this, Interface);
    Object.defineProperty(this, 'socket', {
      value: new SocketClass(url, events)
    });
  }
  /**
   * 发送消息
   * @param {String} event 事件类型
   * @param {Object} body 消息内容
   */


  (0, _createClass2["default"])(Interface, [{
    key: "send",
    value: function send(event) {
      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      this.socket.send.apply(this.socket, arguments);
    }
    /**
     * 重连
     */

  }, {
    key: "reconnect",
    value: function reconnect() {
      this.socket.reconnect.apply(this.socket, arguments);
    }
    /**
     * 销毁连接
     */

  }, {
    key: "destory",
    value: function destory() {
      this.socket.destory();
    }
    /**
     * 是否连接中
     * @returns{Boolean}
     */

  }, {
    key: "isConnected",
    value: function isConnected() {
      return this.socket.isConnected();
    }
    /**
     * 创建socket实例
     * @param {*} url socket连接
     * @param {*} events socket监听事件
     * @returns{Interface}
     */

  }], [{
    key: "create",
    value: function create(url, events) {
      // 默认使用H5
      var SocketClass = _H["default"];

      if (mui.os.android) {
        SocketClass = _Android["default"];
      }

      return new Interface(SocketClass, url, events);
    }
  }]);
  return Interface;
}();

exports["default"] = Interface;

/***/ }),

/***/ "./src/core/je/css/je.css":
/*!********************************!*\
  !*** ./src/core/je/css/je.css ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./src/core/je/func/api/func.js":
/*!**************************************!*\
  !*** ./src/core/je/func/api/func.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFuncDep = getFuncDep;
exports.getFuncInfo = getFuncInfo;
exports.getFieldInfo = getFieldInfo;
exports._getFieldInfo = _getFieldInfo;

var _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/regenerator/index.js"));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/asyncToGenerator.js"));

var _url = __webpack_require__(/*! url */ "./node_modules/_url@0.11.0@url/url.js");

/**
 *  加载功能数据
 * @param {Array} ddListCodes   功能依赖字典编码
 * @param {Array} appCodes      功能依赖的子功能编码
 * @param {Array} permAppCodes  功能依赖的权限功能编码
 * @param {String} loadPerm      加载功能权限
 * @param {String} apkId         apkID
 * @param {String} appId         appID
 * @param {String} funcId        功能id
 * @param {String} funcCode      功能编码
 * @param {String} appCode       app编码
 * @returns {Promise}
 */
function getFuncDep(_ref) {
  var ddListCodes = _ref.ddListCodes,
      apkId = _ref.apkId,
      appId = _ref.appId,
      appCodes = _ref.appCodes,
      permAppCodes = _ref.permAppCodes,
      _ref$loadPerm = _ref.loadPerm,
      loadPerm = _ref$loadPerm === void 0 ? '1' : _ref$loadPerm,
      funcId = _ref.funcId,
      funcCode = _ref.funcCode,
      appCode = _ref.appCode;
  return JE.fetch(JE.getUrlMaps('je.core.phone.app.doInitForm'), {
    ddListCodes: ddListCodes && ddListCodes.join(','),
    apkId: apkId,
    appId: appId,
    appCodes: appCodes && appCodes.join(','),
    permAppCodes: permAppCodes,
    loadPerm: loadPerm,
    funcId: funcId,
    funcCode: funcCode,
    appCode: appCode
  });
}
/**
 * 获得功能数据
 * @param {String} funcCode 功能编码
 * @returns {Promise}
 */


function getFuncInfo(funcCode) {
  var bean = JE.getCache(funcCode, 'funcBean');

  if (bean) {
    return new Promise(function (resolve) {
      resolve(JE.decode(bean));
    });
  }

  return JE.ajax({
    url: JE.getUrlMaps('je.core.load'),
    params: {
      tableCode: 'JE_PHONE_APP',
      whereSql: "AND APP_CODE='".concat(funcCode, "' AND APP_APK_ID='").concat(JE.getApkID(), "'")
    }
  }).then(function (data) {
    var info = data.rows[0];

    if (info) {
      JE.setCache(funcCode, 'funcBean', JE.encode(info));
    } else if (JE.isEmpty(info)) {
      console.error("\u6CA1\u6709\u83B7\u53D6\u5230info\u5BF9\u8C61,\u529F\u80FDcode\u4E3A\u3010".concat(funcCode, "\u3011"));
      info = {
        APP_APK_ID: JE.getApkID(),
        APP_CODE: funcCode,
        APP_FUNC_USEWF: '1',
        // 如果功能为空，默认开启工作流
        APP_FUNC_TABLENAME: funcCode
      };
    }

    return info;
  });
}
/**
 * 获取字段
 * @param info
 * @return {Promise<T>}
 */


function getFieldInfo(_x) {
  return _getFieldInfo2.apply(this, arguments);
}
/**
   * 获取字段
   * @param {String} funcBean 功能bean
   * @return {Promise<T>}
   */


function _getFieldInfo2() {
  _getFieldInfo2 = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee(info) {
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return JE.ajax({
              url: JE.getUrlMaps('je.core.load'),
              params: {
                limit: -1,
                orderSql: 'order by SY_ORDERINDEX ASC',
                tableCode: 'JE_PHONE_APPFIELD',
                whereSql: "and APPFIELD_XTYPE not in ('fieldset') AND APPFIELD_APP_ID='".concat(info.JE_PHONE_APP_ID, "'")
              }
            }).then(function (field) {
              return field.rows;
            });

          case 2:
            return _context.abrupt("return", _context.sent);

          case 3:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _getFieldInfo2.apply(this, arguments);
}

function _getFieldInfo(funcCode) {
  return getFuncInfo(funcCode).then(function (funcBean) {
    var beans = JE.getCache(funcCode, 'funcFieldBeans');

    if (beans) {
      return new Promise(function (resolve) {
        resolve(JE.decode(beans));
      });
    }

    var funcId = funcBean.JE_PHONE_APP_ID;
    return JE.ajax({
      url: JE.getUrlMaps('je.core.load'),
      params: {
        limit: -1,
        orderSql: 'order by SY_ORDERINDEX ASC',
        tableCode: 'JE_PHONE_APPFIELD',
        whereSql: "and APPFIELD_XTYPE not in ('fieldset') AND APPFIELD_APP_ID='".concat(funcId, "'")
      }
    }).then(function (field) {
      JE.setCache(funcCode, 'funcFieldBeans', JE.encode(field.rows));
      return field.rows;
    });
  });
}

/***/ }),

/***/ "./src/core/je/func/func.js":
/*!**********************************!*\
  !*** ./src/core/je/func/func.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireWildcard.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFuncData = getFuncData;
exports.getFuncDep = getFuncDep;
exports.getFuncCache = getFuncCache;
exports.buildSqlPerm = buildSqlPerm;
exports.getFuncPerm = getFuncPerm;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/defineProperty.js"));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/toConsumableArray.js"));

var _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/regenerator/index.js"));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/asyncToGenerator.js"));

var _FuncModel = _interopRequireDefault(__webpack_require__(/*! ./model/FuncModel */ "./src/core/je/func/model/FuncModel.js"));

var Api = _interopRequireWildcard(__webpack_require__(/*! ./api/func */ "./src/core/je/func/api/func.js"));

var _ReportModel = _interopRequireDefault(__webpack_require__(/*! @/core/je/func/model/ReportModel */ "./src/core/je/func/model/ReportModel.js"));

var _ChartModel = _interopRequireDefault(__webpack_require__(/*! @/core/je/func/model/ChartModel */ "./src/core/je/func/model/ChartModel.js"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * 功能数据
 * @param {String} funcCode 功能编码
 * @returns {Promise<InfoModel>}
 */
function getFuncData(_x) {
  return _getFuncData2.apply(this, arguments);
}
/**
 * 拉取功能相关的依赖 （字典）（权限）
 * 表单用到的依赖与列表用到的依赖接口不同，但返回的值相同
 * @param {funcModel}funcModel 功能模型对象
 * @return {Promise<void>}
 */


function _getFuncData2() {
  _getFuncData2 = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee(funcCode) {
    var func;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return _getFuncData(funcCode);

          case 2:
            func = _context.sent;
            return _context.abrupt("return", func);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _getFuncData2.apply(this, arguments);
}

function getFuncDep(_x2) {
  return _getFuncDep.apply(this, arguments);
}
/**
 * 获取本地没有的缓存字典的字典名称
 * @param {array|string} 字典编码
 */


function _getFuncDep() {
  _getFuncDep = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee2(funcModel) {
    var _dictoryList;

    var dictoryList,
        funcDep,
        _args2 = arguments;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            dictoryList = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : [];

            if (JE.isObject(funcModel)) {
              _context2.next = 4;
              break;
            }

            console.error('请传入功能模型对象进行查询');
            return _context2.abrupt("return", false);

          case 4:
            if (!(!funcModel.apkId || !funcModel.appId)) {
              _context2.next = 7;
              break;
            }

            console.error('功能对象数据异常，请检查');
            return _context2.abrupt("return", false);

          case 7:
            // 获取到缓存当中没有的字典数据
            dictoryList = _getDictWithoutNoCache((_dictoryList = dictoryList).concat.apply(_dictoryList, (0, _toConsumableArray2["default"])(funcModel.dataDictCodes)));
            _context2.next = 10;
            return Api.getFuncDep(_objectSpread({
              ddListCodes: JE.arrayUtils.unique(dictoryList),
              loadPerm: 1
            }, funcModel));

          case 10:
            funcDep = _context2.sent;
            JE.setDicCache(funcDep.dics);
            return _context2.abrupt("return", funcDep);

          case 13:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _getFuncDep.apply(this, arguments);
}

function _getDictWithoutNoCache(_dictCodes) {
  try {
    if (!Array.isArray(_dictCodes) && !JE.isString(_dictCodes)) {
      throw new Error('参数异常');
    }

    if (JE.isString(_dictCodes)) {
      _dictCodes = _dictCodes.split(',');
    }
  } catch (e) {
    console.error('参数异常，请传入数组或者将字典编码以【,】分隔');
  }

  var dictCodes = [];

  if (JE.isEmpty(JE.dicListData)) {
    dictCodes = _dictCodes;
  } else {
    dictCodes = _dictCodes.filter(function (dict) {
      return !JE.dicListData.hasOwnProperty(dict);
    });
  }

  return dictCodes;
}
/**
 * 获取
 * @param funcCode
 * @return {*}
 * @private
 */


function _getFuncData(_x3) {
  return _getFuncData3.apply(this, arguments);
}
/**
 * 功能缓存
 * @param {*} funcCode 功能编码
 * @returns {String}
 */


function _getFuncData3() {
  _getFuncData3 = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee4(funcCode) {
    var getFunc;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            getFunc = function _ref2(funcCode) {
              return new Promise(
              /*#__PURE__*/
              function () {
                var _ref = (0, _asyncToGenerator2["default"])(
                /*#__PURE__*/
                _regenerator["default"].mark(function _callee3(resolve) {
                  var _JE, funcCache, _funcCache$getFuncCac, info, fields, resolveData, _info, _fields;

                  return _regenerator["default"].wrap(function _callee3$(_context3) {
                    while (1) {
                      switch (_context3.prev = _context3.next) {
                        case 0:
                          _JE = JE, funcCache = _JE.funcCache;
                          _funcCache$getFuncCac = funcCache.getFuncCache(funcCode), info = _funcCache$getFuncCac.func, fields = _funcCache$getFuncCac.field;
                          resolveData = {
                            info: info,
                            fields: fields
                          };

                          if (!JE.isEmpty(info)) {
                            _context3.next = 8;
                            break;
                          }

                          _context3.next = 6;
                          return Api.getFuncInfo(funcCode);

                        case 6:
                          _info = resolveData.info = _context3.sent;
                          funcCache.setFuncCache(_info);

                        case 8:
                          if (!(JE.isEmpty(fields) && JE.isNotEmpty(resolveData.info) && resolveData.info.APP_TYPE === 'func')) {
                            _context3.next = 13;
                            break;
                          }

                          _context3.next = 11;
                          return Api.getFieldInfo(resolveData.info);

                        case 11:
                          _fields = resolveData.fields = _context3.sent;
                          funcCache.setFieldCache(funcCode, _fields);

                        case 13:
                          // 初始化功能模型
                          if (JE.isNotEmpty(resolveData.info) || JE.isNotEmpty(resolveData.fields)) {
                            resolveData.info = createFuncModel(resolveData);
                            resolveData.fields = resolveData.info._fields || resolveData.info.fields;
                          }

                          JE.isEmpty(resolveData.info) && (resolveData.info = {});
                          JE.isEmpty(resolveData.fields) && (resolveData.fields = {});
                          resolve(resolveData);

                        case 17:
                        case "end":
                          return _context3.stop();
                      }
                    }
                  }, _callee3);
                }));

                return function (_x4) {
                  return _ref.apply(this, arguments);
                };
              }());
            };

            _context4.next = 3;
            return getFunc(funcCode);

          case 3:
            return _context4.abrupt("return", _context4.sent);

          case 4:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _getFuncData3.apply(this, arguments);
}

function getFuncCache(funcCode) {
  var str = JE.getCache(funcCode, 'func');
  return str && JE.decode(str);
}
/**
 * 加工sql权限
 * @param _info 功能信息
 * @param funcPerm 权限信息
 */


function buildSqlPerm(info, funcPerm) {
  /* -----------------sql权限------------------*/
  var currentUser = JE.getCurrentUser();
  var _funcPerm$funcPerm = funcPerm.funcPerm,
      permInfo = _funcPerm$funcPerm === void 0 ? {} : _funcPerm$funcPerm,
      _funcPerm$companyPerm = funcPerm.companyPerm,
      companyPerm = _funcPerm$companyPerm === void 0 ? {} : _funcPerm$companyPerm;
  var otherPerm = permInfo.permConfig || [];
  var sqls = [];
  var whereSql = info.whereSql,
      defaultSql = info.defaultSql;
  whereSql = defaultSql; // 处理数据权限

  var userField = permInfo.userField || 'SY_CREATEUSERID';
  var deptField = permInfo.deptField || 'SY_CREATEORGID'; // 权限sql

  if (JE.isNotEmpty(permInfo.seePermSql)) {
    sqls.push(" (1=1 ".concat(permInfo.seePermSql, " ) "));
  } // 权限sql


  if (JE.isNotEmpty(permInfo.permSql)) {
    sqls.push(" (1=1 ".concat(permInfo.permSql, " ) "));
  } // js权限sql


  if (JE.isNotEmpty(permInfo.permJs)) {
    if (JE.isNotEmpty(JE.eval(permInfo.permJs)())) {
      var sqlVal = JE.eval(permInfo.permJs);

      if (JE.isNotEmpty(sqlVal)) {
        sqls.push(" (1=1 ".concat(sqlVal(), " ) "));
      }
    }
  } // 设定返回标识，该值为true的时候不处理sql的条件


  var notPermSql = false; // 可见人员

  if (JE.isNotEmpty(permInfo.seeUsers) && permInfo.seeUsers.indexOf(currentUser.userId) != -1) {
    sqls.push(' 1=1 ');
    notPermSql = true;
  } // deptId  部门id   可见部门


  if (JE.isNotEmpty(permInfo.seeDepts) && permInfo.seeDepts.indexOf(currentUser.deptId) != -1) {
    sqls.push(' 1=1 ');
    notPermSql = true;
  } // 可见角色


  if (JE.isNotEmpty(permInfo.seeRoles)) {
    var flag = false;
    JE.each(currentUser.roles, function (r) {
      JE.each(permInfo.seeRoles, function (seeRoleId) {
        if (JE.isEmpty(seeRoleId)) return;

        if (JE.isNotEmpty(r.baseRoleId) && r.baseRoleId == seeRoleId || r.roleId == seeRoleId) {
          flag = true;
          return false;
        }
      });

      if (flag) {
        return false;
      }
    });

    if (flag) {
      sqls.push(' 1=1 ');
      notPermSql = true;
    }
  } // sentryIds  岗位id 可见岗位


  if (JE.isNotEmpty(permInfo.seeSentrys)) {
    var _flag = false;
    JE.each(JE.currentUser.sentrys, function (sentry) {
      JE.each(permInfo.seeSentrys, function (seeSentryId) {
        if (JE.isEmpty(seeSentryId)) return;

        if (sentry.sentryId == seeSentryId) {
          _flag = true;
          return false;
        }
      });

      if (_flag) {
        return false;
      }
    });

    if (_flag) {
      sqls.push(' 1=1 ');
      notPermSql = true;
    }
  }

  if (!notPermSql && JE.isNotEmpty(otherPerm)) {
    JE.each(otherPerm, function (p) {
      var sql = ''; // eslint-disable-next-line default-case

      switch (p) {
        case 'SELF_CREATE':
          // 本人看本人
          sql = " ".concat(userField, " = '{@USER_ID@}'");
          break;

        case 'LEAD_DEPT':
          // 主管领导
          //            sql = " (SY_CREATEORG = '{@DEPT_CODE@}' AND '1' = '{@IS_MANAGER@}')";//@IS_MANAGER@
          if (currentUser.branchInfo.zgUserIds != '') {
            sql = " ".concat(userField, " IN ('").concat(currentUser.branchInfo.zgUserIds.join("','"), "') ");
          }

          break;

        case 'SELF_ZSDEPT':
          // 直属领导
          if (currentUser.branchInfo.zsUserIds != '') {
            sql = " ".concat(userField, " IN ('").concat(currentUser.branchInfo.zsUserIds.join("','"), "') ");
          }

          break;

        case 'SELF_FZRDEPT':
          // 部门负责人
          if (currentUser.branchInfo.fzrUserIds != '') {
            sql = " ".concat(userField, " IN ('").concat(currentUser.branchInfo.fzrUserIds.join("','"), "') ");
          }

          break;

        case 'MONITOR_DEPT':
          // 监管部门可见
          if (currentUser.branchInfo.jgUserIds != '') {
            sql = " ".concat(userField, " IN ('").concat(currentUser.branchInfo.jgUserIds.join("','"), "') ");
          }

          break;

        case 'SELF_DEPT':
          // 本部门可见
          sql = " ".concat(deptField, " ='{@DEPT_ID@}' ");
          break;

        case 'WF_PREAPPROV':
          // 待审批可见
          sql = " SY_PREAPPROVUSERS like '%{@USER_ID@}%'";
          break;

        case 'WF_APPROVED':
          // 审批后可见
          sql = " SY_APPROVEDUSERS like '%{@USER_ID@}%'";
          break;

        case 'SELF_COMPANY':
          // 公司内可见
          // 拿到登录用户部门ID
          sqls.push(" SY_JTGSID = '{@USER_JTGSID@}'");
          break;

        case 'MONITOR_COMPANY':
          // 公司监管可见
          companyPerm.MONITOR_COMPANY && sqls.push(companyPerm.MONITOR_COMPANY);
          break;

        case 'MONITOR_COMPANY_DEPT':
          // 公司监管可见
          companyPerm.MONITOR_COMPANY_DEPT && sqls.push(companyPerm.MONITOR_COMPANY_DEPT);
          break;
      }

      if (!JE.isEmpty(sql)) {
        sqls.push(sql);
      }
    });
  } // 处理数据权限的覆盖


  if (JE.isNotEmpty(permInfo.querySql)) {
    // 覆盖sql
    if (permInfo.sqlOverwrite) {
      whereSql = permInfo.querySql;
    } else {
      whereSql += " ".concat(permInfo.querySql);
    }
  } // 最后返回sql


  if (!JE.isEmpty(sqls)) {
    whereSql += " and (".concat(sqls.join(' or '), ")");
  } // 4.格式化sql


  info.whereSql = whereSql && whereSql.replaceAll('parent.', 'parent_');
}
/**
 * 功能权限
 * @param {String} funcCode 功能编码
 */


function getFuncPerm(funcCode) {} // getFuncData(funcCode);

/**
 * 创建功能模型对象
 * @param info
 * @param field
 */


function createFuncModel(resolveData) {
  var info = resolveData.info;
  var funcModel = {};

  switch (info.APP_TYPE) {
    case 'func':
      funcModel = _FuncModel["default"].create(resolveData);
      break;

    case 'report':
      funcModel = _ReportModel["default"].create(resolveData);
      break;

    case 'chart':
      funcModel = _ChartModel["default"].create(resolveData);
      break;
  }

  return funcModel;
}

/***/ }),

/***/ "./src/core/je/func/model/ChartModel.js":
/*!**********************************************!*\
  !*** ./src/core/je/func/model/ChartModel.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/getPrototypeOf.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/inherits.js"));

var _InfoModel2 = _interopRequireDefault(__webpack_require__(/*! @/core/je/func/model/InfoModel */ "./src/core/je/func/model/InfoModel.js"));

/**
 * 图表类
 * 继承InfoModel模型后 添加自己特定数据值
 */
var ChartModel =
/*#__PURE__*/
function (_InfoModel) {
  (0, _inherits2["default"])(ChartModel, _InfoModel);

  function ChartModel(option) {
    var _this;

    (0, _classCallCheck2["default"])(this, ChartModel);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(ChartModel).call(this, option.info));

    _this._init(option.info);

    return _this;
  }

  (0, _createClass2["default"])(ChartModel, [{
    key: "_init",
    value: function _init(info) {
      // chart功能所需要的数据值
      // APP_CHART_LIST
      this.chartList = info.APP_CHART_LIST && JSON.parse(info.APP_CHART_LIST) || [];
    }
  }], [{
    key: "create",
    value: function create(options) {
      return new ChartModel(options);
    }
  }]);
  return ChartModel;
}(_InfoModel2["default"]);

exports["default"] = ChartModel;

/***/ }),

/***/ "./src/core/je/func/model/FuncModel.js":
/*!*********************************************!*\
  !*** ./src/core/je/func/model/FuncModel.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/getPrototypeOf.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/inherits.js"));

var _field2 = _interopRequireDefault(__webpack_require__(/*! ./field */ "./src/core/je/func/model/field.js"));

var _constant = __webpack_require__(/*! ../util/constant */ "./src/core/je/func/util/constant.js");

var _InfoModel2 = _interopRequireDefault(__webpack_require__(/*! @/core/je/func/model/InfoModel */ "./src/core/je/func/model/InfoModel.js"));

var FuncModel =
/*#__PURE__*/
function (_InfoModel) {
  (0, _inherits2["default"])(FuncModel, _InfoModel);

  function FuncModel(options) {
    var _this;

    (0, _classCallCheck2["default"])(this, FuncModel);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(FuncModel).call(this, options.info));

    _this._init(options.info);

    options.fields && _this._initFields(options.fields);
    return _this;
  }

  (0, _createClass2["default"])(FuncModel, [{
    key: "_init",
    value: function _init(info) {
      this.useWF = info.APP_FUNC_USEWF === '1';
      this.disableEdit = info.APP_FUNC_DISABLEEDIT;
      this.homePage = info.APP_FUNC_HOMEPAGE;
      this.version = info.APP_VERSION;
      this._fields = {}; // 字段

      this.dics = []; // 字典

      this.apps = {}; // 子功能与子功能集合的 功能code与字段code的映射关系表

      this.cApps = []; // 子功能的功能ID

      this.cgApps = []; // 子功能集合的功能ID集合

      this.buttons = null;
      this.searchs = null;
      this.renderer = null;
      this.listeners = null; // 权限合集

      this.funcPerm = null; // 功能权限

      this.useFieldHistory = info.APP_FUNC_USEHISTORY === '1' || false; // 是否启用数据留痕

      this._initOther(info);
    } // 初始化字段

  }, {
    key: "_initFields",
    value: function _initFields() {
      var _this2 = this;

      var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      this.dataDictCodes = []; // 数据字典编号集合

      fields.forEach(function (_field) {
        var field = new _field2["default"](_field);
        _this2._fields[field.code] = field;

        if (field.xtype === _constant.P_CODE) {
          getCodeStrat.call(_this2, field);
        }

        if (field.dicCode && !_this2.dics.includes(field.dicCode)) {
          _this2.dataDictCodes.push(field.dicCode);
        }

        if (field.funcCode && !_this2.apps.hasOwnProperty(field.funcCode)) {
          buildApp.call(_this2, field);
        }
      });
      /**
       * 获取主键策略
       */

      function getCodeStrat(field) {
        var configInfo = field.configInfo && JSON.parse(field.configInfo) || '';
        this.codeGenFieldInfo = [{
          code: field.code,
          configInfo: configInfo,
          funcId: this.funcId,
          funcName: this.funcName,
          funcCode: this.funcCode,
          tableCode: this.tableCode
        }];
      }
      /**
       * 构建子功能与子功能集合数据
       */


      function buildApp(field) {
        if (field.xtype === _constant.APP_CHILD_GROUP) {
          this.cgApps.push(field.funcCode);
        } else if (field.xtype === _constant.APP_CHILD) {
          this.cApps.push(field.funcCode);
        }

        this.apps[field.funcCode] = field.code;
      }
    }
  }, {
    key: "_initOther",
    value: function _initOther(info) {
      var BUTTONS = typeof info.APP_FUNC_BUTTONS === 'string' ? info.APP_FUNC_BUTTONS : JSON.stringify(info.APP_FUNC_BUTTONS);
      var SEARCHS = typeof info.APP_FUNC_SEARCHS === 'string' ? info.APP_FUNC_SEARCHS : JSON.stringify(info.APP_FUNC_SEARCHS);
      this.buttons = JE.decode(BUTTONS || '[]');
      this.searchs = JE.decode(SEARCHS || '[]');
      this.renderer = info.APP_FUNC_RENDERER && JE.eval(info.APP_FUNC_RENDERER);

      if (info.APP_FUNC_JS) {
        var js = info.APP_FUNC_JS.trim();

        if (js.substring(js.length - 1) === ';') {
          js = js.substring(0, js.length - 1);
        } // 为了接受平台处配置的listener创建的全局APP对象，接受完以后马上删除


        !window.APP && (window.APP = {});
        this.listeners = JE.eval("".concat(js || ''));
        delete window.APP;
      } // 样式


      if (JE.isNotEmpty(info.APP_FUNC_CSS)) {
        JE.createStyleSheet(info.APP_FUNC_CSS);
      }
    }
    /**
     *
     * @param options { option,field }
     * @return {InfoModel}
     */

  }], [{
    key: "create",
    value: function create(options) {
      return new FuncModel(options);
    }
  }]);
  return FuncModel;
}(_InfoModel2["default"]);

exports["default"] = FuncModel;

/***/ }),

/***/ "./src/core/je/func/model/InfoModel.js":
/*!*********************************************!*\
  !*** ./src/core/je/func/model/InfoModel.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js"));

/**
 * @Author : ZiQin Zhai
 * @Date : 2019/12/23 10:28
 * @Version : 1.0
 * @Last Modifined by : ZiQin Zhai
 * @Last Modifined time : 2019/12/23 10:28
 * @Description 基础功能模型
 * */
var InfoModel = function InfoModel(info) {
  (0, _classCallCheck2["default"])(this, InfoModel);
  this.appId = info.JE_PHONE_APP_ID;
  this.apkId = info.APP_APK_ID;
  this.appName = info.APP_TEXT;
  this.appCode = info.APP_CODE;
  this.funcId = info.APP_FUNC_ID;
  this.funcName = info.APP_FUNC_NAME;
  this.funcCode = info.APP_FUNC_CODE;
  this.tableName = info.APP_FUNC_TABLENAME;
  this.pkName = info.APP_FUNC_PKNAME;
  this.pageSize = info.APP_FUNC_PAGESIZE;
  this.action = JE.replaceOldUrl(info.APP_FUNC_ACTION);
  this.loadAction = info.APP_FUNC_LOADACTION;
  this.whereSql = info.APP_FUNC_WHERESQL;
  this.defaultSql = info.APP_FUNC_WHERESQL;
  this.orderSql = info.APP_FUNC_ORDERSQL;
  this.headerBGColor = info.APP_HEADER_BGCOLOR;
  this.headerTextColor = info.APP_HEADER_TEXTCOLOR;
  this.headerBtnColor = info.APP_HEADER_BTNCOLOR;
  this.disableEdit = info.APP_FUNC_DISABLEEDIT;
  this.type = info.APP_TYPE;
  this.version = info.APP_VERSION;
  this.otherConfig = info.APP_FUNC_OTHERCONFIG || {}; // 其他配置
};

exports["default"] = InfoModel;

/***/ }),

/***/ "./src/core/je/func/model/ReportModel.js":
/*!***********************************************!*\
  !*** ./src/core/je/func/model/ReportModel.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/getPrototypeOf.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/inherits.js"));

var _InfoModel2 = _interopRequireDefault(__webpack_require__(/*! @/core/je/func/model/InfoModel */ "./src/core/je/func/model/InfoModel.js"));

/**
 * @Author : ZiQin Zhai
 * @Date : 2019/12/23 11:15
 * @Version : 1.0
 * @Last Modifined by : ZiQin Zhai
 * @Last Modifined time : 2019/12/23 11:15
 * @Description 报表类
 * */
var ReportModel =
/*#__PURE__*/
function (_InfoModel) {
  (0, _inherits2["default"])(ReportModel, _InfoModel);

  function ReportModel(option) {
    var _this;

    (0, _classCallCheck2["default"])(this, ReportModel);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(ReportModel).call(this, option.info));

    _this._init(option.info);

    return _this;
  }

  (0, _createClass2["default"])(ReportModel, [{
    key: "_init",
    value: function _init(info) {
      this.reportCode = info.APP_REPORT_CODE;
    }
    /**
     *
     * @param options { option,field }
     * @return {InfoModel}
     */

  }], [{
    key: "create",
    value: function create(options) {
      return new ReportModel(options);
    }
  }]);
  return ReportModel;
}(_InfoModel2["default"]);

exports["default"] = ReportModel;

/***/ }),

/***/ "./src/core/je/func/model/field.js":
/*!*****************************************!*\
  !*** ./src/core/je/func/model/field.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/slicedToArray.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js"));

var _constant = __webpack_require__(/*! ../util/constant */ "./src/core/je/func/util/constant.js");

var Field =
/*#__PURE__*/
function () {
  function Field(options) {
    (0, _classCallCheck2["default"])(this, Field);

    this._init(options);
  }

  (0, _createClass2["default"])(Field, [{
    key: "_init",
    value: function _init(bean) {
      this.id = bean.JE_PHONE_APPFIELD_ID;
      this.code = bean.APPFIELD_CODE;
      this.label = bean.APPFIELD_NAME;
      this.xtype = bean.APPFIELD_XTYPE;
      this.hidden = bean.APPFIELD_HIDDEN == '1';
      this.configInfo = bean.APPFIELD_CONFIGINFO;
      this.otherConfig = JE.decode(bean.APPFIELD_OTHERCONFIG || '{}');
      this.separators = JE.decode(bean.APPFIELD_SEPARATORS || '[]'); // 分隔符

      this.labelColor = bean.APPFIELD_LABELCOLOR;
      this.unitTpl = bean.APPFIELD_UNITTPL;
      this.whereSql = bean.APPFIELD_WHERESQL;
      this.hideLabel = bean.APPFIELD_HIDELABEL == '1';
      this.allowBlank = bean.APPFIELD_ALLOWBLANK == '1';
      this.editable = bean.APPFIELD_EDITABLE == '1';
      this.hidden = bean.APPFIELD_HIDDEN == '1';
      this.readOnly = bean.APPFIELD_READONLY == '1';
      this.height = bean.APPFIELD_HEIGHT;
      this.textAlign = bean.APPFIELD_TEXTALIGN || 'left';
      this.emptyText = bean.APPFIELD_EMPTYTEXT;
      this.defaultValue = bean.APPFIELD_VALUE;
      this.value = bean.VALUE || '';
      this.allowBlankExp = bean.APPFIELD_ALLOWBLANKEXP; // 为空表达式

      this.bindingExp = bean.APPFIELD_BINDING; // 绑定表达式

      this.interreterExp = bean.APPFIELD_INTERPRETER; // 显隐表达式

      this.readOnlyExp = bean.APPFIELD_READONLYEXP; // 只读表达式

      this.fieldOption = {
        // 默认配置
        useFieldHistory: bean.APPFIELD_HISTORY === '1' || false
      };

      this._normalizeXtype();
    }
    /**
     * 构建configInfo
     * 配置信息说明： 字典编码,表单字段1~表单字段2~表单字段3,id~text~code,M(多选)|S(单选),icon(显示图片)|icon-text(显示图片和文字)|text(显示文字)
     */

  }, {
    key: "_buildConfigInfo",
    value: function _buildConfigInfo() {
      var ret = {
        dicCode: null,
        // 字典编码
        fields: [],
        // 表单字段
        mappings: [],
        // 映射关系
        checkMode: null,
        // 选择模式（单多选）
        showMode: null // 显示格式

      };
      if (JE.isEmpty(this.configInfo)) return false; // 原始的配置信息

      this._configInfo = this.configInfo; // 处理字典的映射关系

      var _this$configInfo$spli = this.configInfo.split(',');

      var _this$configInfo$spli2 = (0, _slicedToArray2["default"])(_this$configInfo$spli, 5);

      ret.dicCode = _this$configInfo$spli2[0];
      ret.fields = _this$configInfo$spli2[1];
      ret.mappings = _this$configInfo$spli2[2];
      ret.checkMode = _this$configInfo$spli2[3];
      ret.showMode = _this$configInfo$spli2[4];

      if (JE.isNotEmpty(ret.fields) && JE.isNotEmpty(ret.mappings)) {
        try {
          ret.fields = ret.fields.split('~');
          ret.mappings = ret.mappings.split('~');

          if (ret.fields.length !== ret.mappings.length) {
            JE.msg("\u5B57\u6BB5\u4E0E\u5B57\u5178\u503C\u6570\u91CF\u4E0D\u5339\u914D\uFF0C\u8BF7\u68C0\u67E5\uFF01configInfo\u914D\u7F6E\u5F02\u5E38\u3010".concat(this.code, "\u3011"));
            throw new Error('字段与字典值数量不匹配，请检查');
          }
        } catch (e) {
          JE.msg("".concat(this.label, "\u5B57\u6BB5\u914D\u7F6E\u5F02\u5E38\uFF0C\u8BF7\u68C0\u67E5"));
        }
      }

      return ret;
    }
    /**
     * 格式化不同类别表单字段的逻辑处理
     */

  }, {
    key: "_normalizeXtype",
    value: function _normalizeXtype() {
      if (_constant.CHILD_FUNC.includes(this.xtype) || ['button', 'link'].includes(this.xtype)) {
        this.configInfo = JE.decode(this.configInfo || '{}');
      } // 解析单选多选框


      if (_constant.CRGROUP_TYPE.indexOf(this.xtype) !== -1) {
        this.configInfo = this._buildConfigInfo();
        this.dicCode = this.configInfo.dicCode;
      } else if ([_constant.TRESS_FIELD, _constant.QUERY_USER_FIELD, _constant.GRID_S_FIELD].includes(this.xtype)) {
        this.configInfo = this._buildConfigInfo();
      } // 解析链接
      else if (this.xtype === 'link') {
          var links = this.configInfo.links;
          links && (this.configInfo.links = JE.decode(links || '[]'));
        } // 解析子功能与子功能集合
        else if (_constant.CHILD_FUNC.includes(this.xtype)) {
            var fields = this.configInfo.fields;
            this.funcCode = this.configInfo.funcCode;
            fields && (this.configInfo.fields = JE.decode(fields || '[]'));
          }
    }
  }]);
  return Field;
}();

exports["default"] = Field;

/***/ }),

/***/ "./src/core/je/func/util/constant.js":
/*!*******************************************!*\
  !*** ./src/core/je/func/util/constant.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WORKFLOW_TYPE = exports.FORM_TYPE = exports.CONTROLLER_TYPE = exports.P_CODE = exports.BUTTON_TYPE = exports.NUMBER_FIELD = exports.CHILD_FUNC = exports.APP_CHILD = exports.APP_CHILD_GROUP = exports.IMAGE_TYPE = exports.GRID_S_FIELD = exports.QUERY_USER_FIELD = exports.TRESS_FIELD = exports.CRGROUP_TYPE = exports.RGROUP = exports.CGROUP = exports.DATE_TYPE = void 0;

/**
 * @Author : ZiQin Zhai
 * @Date : 2019/7/16 15:43
 * @Version : 1.0
 * @Last Modifined by : ZiQin Zhai
 * @Last Modifined time : 2019/7/16 15:43
 * @Description 常量
 * */
var DATE_TYPE = ['datefield', 'datetimefield', 'datemonthfield', 'timefield'];
exports.DATE_TYPE = DATE_TYPE;
var CGROUP = 'cgroup'; // 多选

exports.CGROUP = CGROUP;
var RGROUP = 'rgroup'; // 单选

exports.RGROUP = RGROUP;
var CRGROUP_TYPE = [CGROUP, RGROUP];
exports.CRGROUP_TYPE = CRGROUP_TYPE;
var TRESS_FIELD = 'treessfield';
exports.TRESS_FIELD = TRESS_FIELD;
var QUERY_USER_FIELD = 'queryuserfield';
exports.QUERY_USER_FIELD = QUERY_USER_FIELD;
var GRID_S_FIELD = 'gridssfield';
exports.GRID_S_FIELD = GRID_S_FIELD;
var IMAGE_TYPE = ['image', 'imagefile']; // 图片类型

exports.IMAGE_TYPE = IMAGE_TYPE;
var APP_CHILD_GROUP = 'childfuncfield'; // 子功能集合

exports.APP_CHILD_GROUP = APP_CHILD_GROUP;
var APP_CHILD = 'child'; // 子功能

exports.APP_CHILD = APP_CHILD;
var CHILD_FUNC = [APP_CHILD_GROUP, APP_CHILD];
exports.CHILD_FUNC = CHILD_FUNC;
var NUMBER_FIELD = 'numberfield';
exports.NUMBER_FIELD = NUMBER_FIELD;
var BUTTON_TYPE = ['link', 'button']; // 按钮类型

exports.BUTTON_TYPE = BUTTON_TYPE;
var P_CODE = 'textcode';
/**
 * 控制器类型
 * @type {{LIST: string, FORM: string, BUTTON: string, FIELD: string}}
 */

exports.P_CODE = P_CODE;
var CONTROLLER_TYPE = {
  LIST: 'list',
  FORM: 'form',
  SEARCH_FORM: 'searchForm',
  BUTTON: 'button',
  FIELD: 'field',
  INFO: 'info',
  WORKFLOW: 'workflow'
};
exports.CONTROLLER_TYPE = CONTROLLER_TYPE;
var FORM_TYPE = {
  WORKFLOW: 'workflow',
  DEFAULT_TYPE: 'defaultForm'
};
/**
 * 工作流常量
 * @type {{}}
 */

exports.FORM_TYPE = FORM_TYPE;
var WORKFLOW_TYPE = {
  fen_zhi: 'fork',
  // 分支流程
  hui_qian: 'countersign' // 会签流程

};
exports.WORKFLOW_TYPE = WORKFLOW_TYPE;

/***/ }),

/***/ "./src/core/je/func/util/funcCache.js":
/*!********************************************!*\
  !*** ./src/core/je/func/util/funcCache.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

/**
 * H5的功能缓存工具，绑定JE上
 */
var funcKey = 'funcBean';
var fieldKey = 'funcFieldBean';
var FuncCache = {
  /**
     * 判断本地是否有功能缓存，如果有，则做版本的diff，对比出已经更新的数据覆盖缓存
   * 如果没有缓存，则直接缓存
   *
   * @param funcs
   * @return 功能缓存对象
   */
  initCache: function initCache(funcs) {
    this.diffVersion(funcs); // (Object.keys(funcs) || []).forEach((funcCode) => {
    //   // 设置功能缓存
    //   const app = funcs[funcCode];
    //   this.setFuncCache(funcCode, JE.encode(app));
    // });
  },

  /**
   * 设置对应code的功能 （该对象方法有可能被重载）
   * @param code
   * @param func
   */
  setFuncCache: function setFuncCache(code, func) {
    // 对功能数据进行编码
    if (!JE.isString(func)) {
      func = JE.encode(func);
    }

    JE.setCache(code, func, funcKey);
  },

  /**
   * 获取功能
   * @param code
   * @returns {string}
   */
  getFuncCache: function getFuncCache(code) {
    var func = JE.getCache(code, funcKey);
    var field = JE.getCache(code, fieldKey);
    return new FuncObj({
      func: func && JE.decode(func),
      field: field && JE.decode(field)
    });
  },

  /**
   * 设置字段缓存
   */
  setFieldCache: function setFieldCache(code) {
    var field = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    // 没有field对象时为删除操作
    JE.setCache(code, JE.encode(field), fieldKey);
  },

  /**
   * 获取字段缓存
   * @param code (?) 字段对应的功能编码
   */
  getFieldCache: function getFieldCache(code) {
    return JE.decode(JE.getCache(code, 'funcFieldBean') || '{}');
  },

  /**
   * 对比更新缓存
   * @param funcs
   */
  diffVersion: function diffVersion(funcs) {
    var _this = this;

    // 更新后的功能名称
    var updatedFuncName = [];
    (Object.keys(funcs) || []).forEach(function (code) {
      var func = funcs[code];

      var cacheFunc = _this.getFuncCache(code).func; // 判断是否需要更新


      var isUpdated = diffAndUpdate(func || {}, cacheFunc || {});

      if (isUpdated) {
        _this.setFuncCache(code, func); // 记录被更新的功能


        updatedFuncName.push("".concat(func.APP_FUNC_NAME, " -> \u7248\u672C\uFF1A ").concat(func.APP_VERSION));

        _this.removeFieldCache(code);
      }
    });

    if (JE.isNotEmpty(updatedFuncName)) {
      console.info("".concat(updatedFuncName.join(';'), "\u7F13\u5B58\u66F4\u65B0\u6210\u529F"));
    }
    /**
     * 对比缓存并且更新
     */


    function diffAndUpdate(func, cacheFunc) {
      return func.APP_VERSION !== cacheFunc.APP_VERSION || JE.isEmpty(cacheFunc);
    }
  },

  /**
   * 删除字段
   * @param code
   */
  removeFieldCache: function removeFieldCache(code) {
    this.setFieldCache(code);
  }
};
/**
 * 功能类
 * @param func
 * @constructor
 */

function FuncObj(func) {
  if (func.hasOwnProperty('func')) {
    this.func = func.func;
    this.field = func.field;
  } else {
    this.func = func;
    this.field = null;
  }

  return this;
}

var _default = FuncCache;
exports["default"] = _default;

/***/ }),

/***/ "./src/core/je/je.js":
/*!***************************!*\
  !*** ./src/core/je/je.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireWildcard.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/defineProperty.js"));

var _index = __webpack_require__(/*! ./mvc/index */ "./src/core/je/mvc/index.js");

var _pinyin = _interopRequireDefault(__webpack_require__(/*! ./util/pinyin */ "./src/core/je/util/pinyin.js"));

var date = _interopRequireWildcard(__webpack_require__(/*! ./util/date */ "./src/core/je/util/date.js"));

var _ajax = __webpack_require__(/*! ./util/ajax */ "./src/core/je/util/ajax.js");

var _util = _interopRequireDefault(__webpack_require__(/*! ./util/util */ "./src/core/je/util/util.js"));

var sqlUtil = _interopRequireWildcard(__webpack_require__(/*! ./system/sql */ "./src/core/je/system/sql.js"));

var _plus = _interopRequireDefault(__webpack_require__(/*! ./system/plus */ "./src/core/je/system/plus.js"));

var _api = _interopRequireDefault(__webpack_require__(/*! ./system/api */ "./src/core/je/system/api.js"));

var _assets = _interopRequireDefault(__webpack_require__(/*! ./system/assets */ "./src/core/je/system/assets.js"));

var _system = _interopRequireDefault(__webpack_require__(/*! ./system/system */ "./src/core/je/system/system.js"));

var _view = _interopRequireDefault(__webpack_require__(/*! ./system/view */ "./src/core/je/system/view.js"));

var _push = _interopRequireDefault(__webpack_require__(/*! ./system/push */ "./src/core/je/system/push.js"));

var func = _interopRequireWildcard(__webpack_require__(/*! ./func/func */ "./src/core/je/func/func.js"));

var _Cache = _interopRequireDefault(__webpack_require__(/*! ./util/Cache */ "./src/core/je/util/Cache.js"));

var _funcCache = _interopRequireDefault(__webpack_require__(/*! ./func/util/funcCache */ "./src/core/je/func/util/funcCache.js"));

var _array = _interopRequireDefault(__webpack_require__(/*! ./util/array */ "./src/core/je/util/array.js"));

var _constants = _interopRequireDefault(__webpack_require__(/*! ./system/constants */ "./src/core/je/system/constants.js"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

// 依赖css
__webpack_require__(/*! ./css/je.css */ "./src/core/je/css/je.css"); // eslint-disable-next-line no-unused-vars
// import xtemplate from './plugin/XTemplate';

/**
 * JE 工具类.
 * 参考 JE/* 的 modules
 * @global JE
 */


window.JE = _util["default"].apply(window.JE || {}, _objectSpread({}, _Cache["default"], {}, func, {}, date, {}, _assets["default"], {}, _api["default"], {}, _util["default"], {}, _plus["default"], {}, _system["default"], {}, _view["default"], {}, _push["default"], {}, sqlUtil, {
  funcCache: _funcCache["default"],
  arrayUtils: _array["default"],
  constants: _constants["default"],
  pinyin: _pinyin["default"],
  toPinYin: _pinyin["default"],
  ajax: _ajax.ajax,
  fetch: _ajax.fetch,
  JController: _index.JController,
  JModel: _index.JModel
})); // 注册每个页面的事件

window.addEventListener('pageaction', function (event) {
  var config = event.detail || {};
  var action = config.action;
  var params = config.params;

  if (action == 'clearcache') {
    JE.clearCache(); // 页面添加自定义方法
  } else if (window[action] && JE.isFunction(window[action])) {
    window[action](params);
  }
});

/***/ }),

/***/ "./src/core/je/mvc/base/controller/BaseController.js":
/*!***********************************************************!*\
  !*** ./src/core/je/mvc/base/controller/BaseController.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/defineProperty.js"));

var _BaseModel = _interopRequireDefault(__webpack_require__(/*! ../model/BaseModel */ "./src/core/je/mvc/base/model/BaseModel.js"));

var _util = __webpack_require__(/*! @/core/helper/util */ "./src/core/helper/util.js");

/**
 * @Author : ZiQin Zhai
 * @Date : 2019/11/13 11:30
 * @Version : 1.0
 * @Last Modifined by : ZiQin Zhai
 * @Last Modifined time : 2019/11/13 11:30
 * @Description 基类业务控制器
 * */
var BaseController =
/*#__PURE__*/
function () {
  // MODEL= null
  function BaseController() {
    (0, _classCallCheck2["default"])(this, BaseController);
    (0, _defineProperty2["default"])(this, "_VM", null);
    (0, _defineProperty2["default"])(this, "_model", {});
    this.setVM(this.__proto__.VM);
  }
  /**
   * 设置实例
   * @param vm
   */


  (0, _createClass2["default"])(BaseController, [{
    key: "setVM",
    value: function setVM(vm) {
      this._VM = vm;
    }
  }, {
    key: "getVM",
    value: function getVM() {
      return this._VM;
    }
    /**
     * 创建模型类
     * @private
     */

  }, {
    key: "_createModels",
    value: function _createModels() {
      var _this = this;

      this.MODEL.forEach(function (modelCons) {
        _this.createModel(modelCons);
      });
    }
    /**
     * 创建模型对象
     * @param model 模型类
     */

  }, {
    key: "createModel",
    value: function createModel(ModelCons) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (!(ModelCons.prototype instanceof _BaseModel["default"])) {
        throw new Error('模型参数异常');
      }

      var modelIns = new ModelCons(options);
      var nameSpace = modelIns.getNameSpace();

      if (this.hasModel(nameSpace)) {
        nameSpace = modelIns.rename();
      } // 防止生成随机数以后还会重复


      if (this.hasModel(nameSpace)) {
        // 销毁模型
        modelIns = null;
        this.createModel(ModelCons);
      }

      this._setModel(nameSpace, modelIns);

      modelIns.defineReactive(this._VM);
      return modelIns;
    }
    /**
     * 设置模型对象
     * @param key
     * @param val
     * @private 内部方法
     */

  }, {
    key: "_setModel",
    value: function _setModel(key, val) {
      this.setModel(key, val);
      this[key] = val;
    }
    /**
     * 设置模型对象 并继承BaseModel
     * @param key
     * @param obj
     */

  }, {
    key: "setModel",
    value: function setModel(key, obj) {
      if ((0, _util.isPlainObject)(obj) && !(obj instanceof _BaseModel["default"])) {
        var Sub = _BaseModel["default"].extend(key);

        this.createModel(Sub, obj);
      } else {
        this._model[key] = obj;
      }
    }
    /**
     * 获取模型对象
     */

  }, {
    key: "getModel",
    value: function getModel(key) {
      return this._model[key];
    }
    /**
     * 判断是否有某一个命名的参数
     * @param nameSpace
     * @return {boolean}
     */

  }, {
    key: "hasModel",
    value: function hasModel(nameSpace) {
      return this._model.hasOwnProperty(nameSpace);
    }
  }]);
  return BaseController;
}();

exports["default"] = BaseController;

/***/ }),

/***/ "./src/core/je/mvc/base/model/BaseModel.js":
/*!*************************************************!*\
  !*** ./src/core/je/mvc/base/model/BaseModel.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/slicedToArray.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/defineProperty.js"));

var _util = __webpack_require__(/*! @/core/helper/util */ "./src/core/helper/util.js");

var _proxy = __webpack_require__(/*! @/core/helper/proxy */ "./src/core/helper/proxy.js");

/**
 * @Author : ZiQin Zhai
 * @Date : 2019/11/13 11:30
 * @Version : 1.0
 * @Last Modifined by : ZiQin Zhai
 * @Last Modifined time : 2019/11/13 11:30
 * @Description 基类模型
 * */
var BaseModel =
/*#__PURE__*/
function () {
  // 模型命名空间
  // 模型映射前的数据
  function BaseModel(options) {
    (0, _classCallCheck2["default"])(this, BaseModel);
    (0, _defineProperty2["default"])(this, "nameSpace", void 0);
    (0, _defineProperty2["default"])(this, "_data", {});
    (0, _defineProperty2["default"])(this, "_observerKeys", []);
    (0, _defineProperty2["default"])(this, "_option", {});
    this._option = options;

    this._afterCreated();
  }
  /**
   * 创建数据模型
   * @return {*}
   * @private
   */


  (0, _createClass2["default"])(BaseModel, [{
    key: "buildData",
    value: function buildData(options) {
      this._data = options;
    }
    /**
     * 构造函数完成以后执行的操作
     * @private
     */

  }, {
    key: "_afterCreated",
    value: function _afterCreated() {
      var _this = this;

      var Timer = setTimeout(function () {
        _this._validator();

        clearTimeout(Timer);
        Timer = null;
      }, 18);
    }
    /**
     * 验证模型对象是否符合要求
     * @private
     */

  }, {
    key: "_validator",
    value: function _validator() {
      if (!this.getNameSpace()) {
        throw new Error('未定义的命名空间,请手动设置命名空间');
      }
    }
    /**
     * 获取需要双向数据绑定的属性
     */

  }, {
    key: "getObserverData",
    value: function getObserverData() {
      var _this2 = this;

      var datas = {};
      (this.getObserverKey() || []).forEach(function (key) {
        datas[key] = _this2._data[key];
      });
      return datas;
    }
    /**
     * 获取需要双向数据绑定的data
     */

  }, {
    key: "getObserverKey",
    value: function getObserverKey() {
      return this._observerKeys;
    }
    /**
     * 设置需要双向数据绑定的数据
     * @param [Array || data] 数组或者按,分割的Key
     */

  }, {
    key: "setObserverKey",
    value: function setObserverKey(keys) {
      var _this3 = this;

      if (!(0, _util.isString)(keys) && !(0, _util.isArray)(keys)) {
        console.error('参数异常，请传入以，分割的模型key或者一个数组');
        return;
      } // 将字符串处理为数组


      if ((0, _util.isString)(keys)) {
        keys = keys.split(',');
      }

      keys.forEach(function (key) {
        if (!_this3._observerKeys.includes(key)) {
          // 将属性拷贝到_data中
          _this3._data[key] = _this3[key];

          _this3._observerKeys.push(key);
        }
      });
    }
    /**
     * 将需要双向数据绑定的模型对象进行处理
     */

  }, {
    key: "handlerObserve",
    value: function handlerObserve(vm) {
      var keys = this.getObserverKey();
    }
    /**
     * 获取模型对象的命名空间
     */

  }, {
    key: "getNameSpace",
    value: function getNameSpace() {
      return this.nameSpace;
    }
    /**
     * 更新命名空间
     * @param nameSpace
     * @return {*}
     */

  }, {
    key: "setNameSpace",
    value: function setNameSpace(nameSpace) {
      if (!(0, _util.isString)(nameSpace)) {
        throw new Error('参数异常');
      }

      return this.nameSpace = nameSpace;
    }
    /**
     * 重新设置命名空间  在命名冲突时使用
     */

  }, {
    key: "rename",
    value: function rename() {
      return this.setNameSpace("".concat(this.getNameSpace(), "_").concat(JE.random(9999999, 1)));
    }
    /**
     * 创建双向数据绑定对象
     */

  }, {
    key: "defineReactive",
    value: function defineReactive(vm) {
      if (vm._data === null) {
        JE.msg('JeController必须在beforeCreate之后执行');
        return false;
      } // 已经有重复的model在Vm实例上时候进行提醒


      if (vm.hasOwnProperty(this.getNameSpace())) {
        console.error("model\u7C7B\u91CD\u590D\uFF0C\u8BF7\u68C0\u67E5\u3010".concat(this.getNameSpace(), "\u3011,").concat(vm.$id));
      }

      vm[this.getNameSpace()] = vm._data[this.getNameSpace()] = Vue.observable(this.getObserverData());
      this.doWatcher(vm);
      this.createGetterAndSetter(vm);
    }
    /**
     * 对用户定义的Watcher进行一次求值，订阅对当前VM实例的依赖
     */

  }, {
    key: "doWatcher",
    value: function doWatcher(vm) {
      var watchers = vm._watchers || [];
      watchers.forEach(function (watcher) {
        if (watcher.user) {
          watcher.get && watcher.get();
        }
      });
    }
    /**
     * 创建被观测数据的getter跟setter
     * @params {vm} vue 实例
     */

  }, {
    key: "createGetterAndSetter",
    value: function createGetterAndSetter(vm) {
      var observerData = vm[this.getNameSpace()];
      this._data = observerData;
      this.createProxy();
    }
    /**
     * 创建代理对象
     */

  }, {
    key: "createProxy",
    value: function createProxy() {
      var _this4 = this;

      var data = this._data || {};
      Object.entries(data).forEach(function (_ref) {
        var _ref2 = (0, _slicedToArray2["default"])(_ref, 2),
            k = _ref2[0],
            v = _ref2[1];

        _this4[k] = v;
        (0, _proxy.proxy)(_this4, '_data', k);
      });
    }
    /**
     * BaseModel 的子类
     * @param {string} nameSpace 命名空间
     */

  }], [{
    key: "extend",
    value: function extend(nameSpace) {
      SubModel.prototype.nameSpace = nameSpace;
      return SubModel;
    }
  }]);
  return BaseModel;
}();

exports["default"] = BaseModel;
var SubModel = (0, _util.extendFrom)(BaseModel, function (value, vm) {
  Object.assign(this, value);
  this.buildData(value);
});

/***/ }),

/***/ "./src/core/je/mvc/index.js":
/*!**********************************!*\
  !*** ./src/core/je/mvc/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "JController", {
  enumerable: true,
  get: function get() {
    return _BaseController["default"];
  }
});
Object.defineProperty(exports, "JModel", {
  enumerable: true,
  get: function get() {
    return _BaseModel["default"];
  }
});

var _BaseController = _interopRequireDefault(__webpack_require__(/*! ./base/controller/BaseController */ "./src/core/je/mvc/base/controller/BaseController.js"));

var _BaseModel = _interopRequireDefault(__webpack_require__(/*! ./base/model/BaseModel */ "./src/core/je/mvc/base/model/BaseModel.js"));

__webpack_require__(/*! ./mixin/vue.mixins */ "./src/core/je/mvc/mixin/vue.mixins.js");

/***/ }),

/***/ "./src/core/je/mvc/mixin/vue.mixins.js":
/*!*********************************************!*\
  !*** ./src/core/je/mvc/mixin/vue.mixins.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

var _BaseController = _interopRequireDefault(__webpack_require__(/*! ../base/controller/BaseController */ "./src/core/je/mvc/base/controller/BaseController.js"));

/**
 * @Author : ZiQin Zhai
 * @Date : 2019/12/16 17:53
 * @Version : 1.0
 * @Last Modifined by : ZiQin Zhai
 * @Last Modifined time : 2019/12/16 17:53
 * @Description Vue mixins
 * */

/**
 * 全局mixins
 */
function initMixins() {
  window.Vue.prototype.$createCtrl = function (controller, options) {
    if (!(controller.prototype instanceof _BaseController["default"])) {
      throw new Error('控制器必须继承BaseController');
    }

    controller.prototype.VM = this;
    var f = new controller(options);
    controller.prototype.VM = null;
    return f;
  };
}

window.Vue && initMixins();

/***/ }),

/***/ "./src/core/je/system/api.js":
/*!***********************************!*\
  !*** ./src/core/je/system/api.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

/**
 * 数据接口类.
 * @module JE/api
 */
var _default = {
  /**
   *获得请求的链接
   * @param {String} key url | action
   * @param {String} method 方法名
   * @returns {String}
   */
  getUrlMaps: function getUrlMaps(key, method) {
    var maps = JE.urlMaps || {};
    key = method ? "".concat(key, ".").concat(method) : key; // maps[key] || console.log(key)

    return maps[key] || '';
  },

  /**
   *  替换旧的url
   * @param {*} url url
   * @returns {String}
   */
  replaceOldUrl: function replaceOldUrl(url) {
    if (!url) {
      return url;
    }

    if (!/^\//.test(url)) {
      url = "/".concat(url);
    }

    if (!/^(\/je|je)/.test(url)) {
      url = "je".concat(url);
    } //    if(/^\/je\/dynaAction/.test(url)) {
    //        url = url.replace('/je/dynaAction', '/je');
    //        url = url.replace(/!/, '/');
    //        url = url.replace('.action', '');
    //        return url;
    //    }


    if (/^\/(.*?)\/(.*?)/.test(url)) {
      url = url.replace('je/dynaAction', 'je');
      url = url.replace(/Action/g, '');
      url = url.replace(/!/, '/');
      url = url.replace('.action', '');
    } else if (/^(.*?)\/(.*?)/.test(url)) {
      url = url.replace('je/dynaAction', 'je');
      url = url.replace(/Action/g, '');
      url = url.replace(/!/, '/');
      url = url.replace('.action', '');
    }

    return url;
  },

  /**
  * api 链接
  */
  urlMaps: function () {
    // 方法前缀，后缀
    var methodPrefix = '/';
    var methodSuffix = '';
    /**
    * DynaController基础方法
    */

    var methods = {
      load: 'load',
      save: 'doSave',
      copy: 'doCopy',
      update: 'doUpdate',
      remove: 'doRemove',
      disable: 'doDisable',
      insertUpdateList: 'doInsertUpdateList',
      updateList: 'doUpdateList',
      // 方法标识与URL路径一致，做拼接URL容错处理，后期可删除
      doSave: 'doSave',
      doCopy: 'doCopy',
      doUpdate: 'doUpdate',
      doRemove: 'doRemove',
      doDisable: 'doDisable',
      doInsertUpdateList: 'doInsertUpdateList',
      doUpdateList: 'doUpdateList',
      listUpdate: 'listUpdate',
      getInfoById: 'getInfoById',
      getTree: 'getTree',
      loadGridTree: 'loadGridTree',
      treeMove: 'treeMove',
      doUploadFuncFile: 'doUploadFuncFile',
      uploadFile: 'uploadFile',
      checkFieldUniquen: 'checkFieldUniquen',
      executeBatchSql: 'executeBatchSql',
      selectList: 'selectList',
      selectOne: 'selectOne',
      saveMark: 'saveMark',
      savePostil: 'savePostil',
      loadBadge: 'loadBadge',
      getIditProcedureColumn: 'getIditProcedureColumn'
    };
    /**
    * controller定义
    */

    var controllers = {
      /*
      "controller标识" : {
          base : "controller路径",
          unextend : false, // true -> 不继承DynaController
          methods : {
              "方法标识":"方法路径"
          }
      },
      */

      /* 平台核心链接 */
      'je.core': {
        base: '/je'
      },

      /* 登陆 */
      'je.core.login': {
        base: '/rbac/login',
        methods: {
          login: 'loginNew',
          getIdentityByUserCode: 'getIdentityByUserCode',
          checkUser: 'checkUser',
          getJcaptImage: 'getJcaptImage',
          createState: 'createState'
        }
      },

      /* 系统配置 */
      'je.core.sys.config': {
        base: '/je/sysConfig/sysConfig',
        methods: {
          loadSysVariables: 'loadSysVariables',
          loadLoginSysVariables: 'loadLoginSysVariables',
          loadProVariables: 'loadProVariables',
          writeSysVariables: 'writeSysVariables',
          writeDevelopVariables: 'writeDevelopVariables',
          writeSysModeVariables: 'writeSysModeVariables',
          removeFile: 'removeFile'
        }
      },

      /* 用户 UserController */
      'je.core.rbac.user': {
        base: '/je/rbac/user',
        methods: {
          getCurrentUserInfo: 'getCurrentUserInfo',
          loadUserInfo: 'loadUserInfo',
          loadQueryInfo: 'loadQueryInfo',
          loadDeptInfo: 'loadDeptInfo',
          loadSentryParams: 'loadSentryParams',
          modifyPassWord: 'modifyPassWord',
          doUpdateInfo: 'doUpdateInfo',
          resetPassWord: 'resetPassWord',
          resetLocked: 'resetLocked',
          loadAppUser: 'loadAppUser',
          doEnabled: 'doEnabled',
          doUpdateDept: 'doUpdateDept',
          updateUserLocked: 'updateUserLocked',
          doCallAt: 'doCallAt'
        }
      },

      /* 用户 UserController */
      'je.core.rbac.perm': {
        base: '/je/rbac/perm',
        methods: {
          getMenuTree: 'getMenuTree',
          getAppMenuPerm: 'getAppMenuPerm',
          getAppFuncPerm: 'getAppFuncPerm',
          getPublicCheckedPerm: 'getPublicCheckedPerm',
          getAuthorPermTree: 'getAuthorPermTree',
          getPermTree: 'getPermTree',
          getFuncTree: 'getFuncTree',
          initFuncTreeNode: 'initFuncTreeNode',
          initAppTreeNode: 'initAppTreeNode',
          impFuncTreeNode: 'impFuncTreeNode',
          removeFuncTreeNode: 'removeFuncTreeNode',
          getUserPermTree: 'getUserPermTree',
          getCheckedPerm: 'getCheckedPerm',
          getAppCheckedPerm: 'getAppCheckedPerm',
          getFuncCheckedPerm: 'getFuncCheckedPerm',
          doUpdatePerm: 'doUpdatePerm',
          doUpdatePublicPerm: 'doUpdatePublicPerm',
          getRoleTree: 'getRoleTree',
          getDeptTree: 'getDeptTree',
          getSentryTree: 'getSentryTree',
          getMouleTree: 'getMouleTree',
          getAppTree: 'getAppTree',
          getProxyPermTree: 'getProxyPermTree',
          doDevelopPerm: 'doDevelopPerm',
          doButtonPerm: 'doButtonPerm',
          doFuncchildPerm: 'doFuncchildPerm',
          getRoleUserDiyPerm: 'getRoleUserDiyPerm',
          updateRoleUserDiyPerm: 'updateRoleUserDiyPerm',
          getRoleSelectPerm: 'getRoleSelectPerm',
          doSaveRoleDept: 'doSaveRoleDept',
          loadPermRoles: 'loadPermRoles',
          loadCheckRolePerms: 'loadCheckRolePerms',
          loadRolePermSee: 'loadRolePermSee',
          loadUserDiyPerm: 'loadUserDiyPerm',
          loadRoleModule: 'loadRoleModule',
          loadRoleFunc: 'loadRoleFunc',
          loadRoleAllPermSee: 'loadRoleAllPermSee',
          loadRoleDiyPermSee: 'loadRoleDiyPermSee',
          loadDeptRoles: 'loadDeptRoles',
          doSaveRoleCheckPerm: 'doSaveRoleCheckPerm',
          loadUserRoles: 'loadUserRoles',
          doCheckUserPerm: 'doCheckUserPerm',
          doCheckUserRole: 'doCheckUserRole'
        }
      },

      /* 登陆 DoActController */
      'je.core.doact': {
        base: '/je/doAct/doAct',
        unextend: true,
        methods: {
          loadMultiModels: 'loadMultiModels',
          getModelFields: 'getModelFields'
        }
      },

      /* PortalController */
      'je.core.portal': {
        base: '/je/portal/portal',
        methods: {
          getCurrentInfo: 'getCurrentInfo'
        }
      },

      /* sql查询 */
      'je.core.dbsql': {
        base: '/je/dbsql/dbsql',
        methods: {
          select: 'select',
          loadMultiModels: 'loadMultiModels',
          getSelectModel: 'getSelectModel',
          removeBySql: 'removeBySql',
          executeSql: 'executeSql',
          selectSql: 'selectSql',
          doTrans: 'doTrans'
        }
      },

      /* jms */
      'je.core.jms': {
        base: '/je/jms/jms',
        methods: {
          loadMsg: 'loadMsg',
          loadImMsg: 'loadImMsg',
          loadHistory: 'loadHistory',
          loadRelation: 'loadRelation',
          getChannle: 'getChannle',
          loadGroup: 'loadGroup'
        }
      },

      /* 菜单 */
      'je.core.menu': {
        base: '/je/menu/menu',
        methods: {
          menuMove: 'menuMove',
          expSysExcel: 'expSysExcel'
        }
      },

      /* saas */
      'je.core.saasYh': {
        base: '/je/saas/saasYh',
        methods: {
          register: 'register',
          registerDsf: 'registerDsf',
          doUserRz: 'doUserRz',
          modifyPw: 'modifyPw',
          resetPassword: 'resetPassword',
          saasManager: 'saasManager.action',
          loadUseCp: 'loadUseCp',
          validateRegister: 'validateRegister',
          validateUserCode: 'validateUserCode',
          sendRandom: 'sendRandom',
          validateRandom: 'validateRandom',
          doRzRandom: 'doRzRandom',
          getUserAt: 'getUserAt',
          createState: 'createState'
        }
      },
      'je.core.saas.cpYhq': {
        base: '/je/saas/cpYhq',
        methods: {
          checkYhq: 'checkYhq'
        }
      },
      'je.core.saas.saasNote': {
        base: '/je/saas/saasNote',
        methods: {
          loadInfo: 'loadInfo',
          sqDx: 'sqDx',
          updateDx: 'updateDx',
          doPayOrder: 'doPayOrder',
          complateCz: 'complateCz'
        }
      },
      'je.core.saas.cpInfo': {
        base: '/je/saas/cpInfo',
        methods: {
          loadCpDicInfo: 'loadCpDicInfo',
          loadCpPerm: 'loadCpPerm',
          loadCps: 'loadCps',
          loadSaasOrders: 'loadSaasOrders',
          doInitDic: 'doInitDic'
        }
      },
      'je.core.saas': {
        base: '/je/saas/saas',
        methods: {
          setUpCp: 'setUpCp',
          setupSaasCp: 'setupSaasCp',
          uninstallCp: 'uninstallCp',
          initCompany: 'initCompany',
          clearCompany: 'clearCompany',
          loadCpPermTree: 'loadCpPermTree',
          loadCpFuncPermTree: 'loadCpFuncPermTree',
          updateCpPerm: 'updateCpPerm',
          updateCpYhPerm: 'updateCpYhPerm',
          loadCpYhPermTree: 'loadCpYhPermTree',
          loadApkPermTree: 'loadApkPermTree',
          loadCpYhFuncPermTree: 'loadCpYhFuncPermTree',
          loadCpYhGhPermTree: 'loadCpYhGhPermTree',
          loadCpYhDicPermTree: 'loadCpYhDicPermTree',
          impCpYhFuncPerm: 'impCpYhFuncPerm',
          addYhDic: 'addYhDic',
          delYhDic: 'delYhDic',
          doPayCpOrder: 'doPayCpOrder',
          calculateTodayOperatingData: 'calculateTodayOperatingData',
          checkYhFpInfo: 'checkYhFpInfo',
          getInvoice: 'getInvoice',
          deleteInvoice: 'deleteInvoice',
          rechargeable: 'rechargeable',
          operationOne: 'operationOne',
          operationTwo: 'operationTwo'
        }
      },

      /* 静态化 */
      'je.core.staticize': {
        base: '/je/staticize/staticize',
        methods: {
          loadStaticize: 'loadStaticize',
          doFuncInfo: 'doFuncInfo',
          clearFuncInfo: 'clearFuncInfo',
          resetMenuStaticize: 'resetMenuStaticize'
        }
      },

      /* 图标样式 */
      'je.core.icon': {
        base: '/je/icon/icon',
        methods: {
          generateCSS: 'generateCSS',
          saveCustomCss: 'saveCustomCss',
          saveSysSingleton: 'saveSysSingleton',
          importFont: 'importFont'
        }
      },

      /* 图标样式 */
      'je.core.vmt': {
        base: '/je/vmt/vmt',
        methods: {
          createC4T: 'createC4T'
        }
      },

      /* 功能 */
      'je.core.develop.funcInfo': {
        base: '/je/develop/funcInfo',
        methods: {
          doUpdateHelp: 'doUpdateHelp',
          loadFuncs: 'loadFuncs',
          doUpdateInfo: 'doUpdateInfo',
          doSummary: 'doSummary',
          funcCopy: 'funcCopy',
          getFuncByCode: 'getFuncByCode',
          getFuncPerm: 'getFuncPerm',
          removeFuncs4cache: 'removeFuncs4cache',
          copySoftFun: 'copySoftFun',
          copyHard: 'copyHard',
          getInfoByCode: 'getInfoByCode',
          clearFuncInfo: 'clearFuncInfo',
          removeFunRelyon: 'removeFunRelyon',
          treeMove: 'treeMove',
          returnInfo: 'returnInfo',
          summary: 'summary',
          checkIn: 'checkIn',
          checkOut: 'checkOut',
          checkDefault: 'checkDefault',
          checkSync: 'checkSync',
          loadFunc: 'loadFunc',
          getInfoById: 'getInfoById',
          clearStaticize: 'clearStaticize'
        }
      },

      /* excel */
      'je.core.develop.excel': {
        base: '/je/develop/excel',
        methods: {
          exp: 'exp',
          doPreviewData: 'doPreviewData',
          loadSheetInfo: 'loadSheetInfo'
        }
      },

      /* associationField */
      'je.core.develop.associationField': {
        base: '/je/develop/associationField'
      },

      /* dataImpl  前端js未调用 */
      'je.core.develop.dataImpl': {
        base: '/je/develop/dataImpl',
        methods: {
          generateTemplate: 'generateTemplate',
          implFields: 'implFields',
          implExcelFields: 'implExcelFields',
          clearHidden: 'clearHidden',
          clearExcelHidden: 'clearExcelHidden',
          quickColumn: 'quickColumn',
          applyFunc: 'applyFunc'
        }
      },

      /* funcPerm */
      'je.core.develop.funcPerm': {
        base: '/je/develop/funcPerm',
        methods: {
          getFuncRoleTree: 'getFuncRoleTree',
          getFuncFieldDic: 'getFuncFieldDic',
          getFuncPerm: 'getFuncPerm',
          doUpdatePerm: 'doUpdatePerm',
          getFuncYwcjPerm: 'getFuncYwcjPerm'
        }
      },

      /* funRelation */
      'je.core.develop.funRelation': {
        base: '/je/develop/funRelation',
        methods: {
          doImpl: 'doImpl',
          insertAny: 'insertAny'
        }
      },

      /* funRelyon */
      'je.core.develop.funRelyon': {
        base: '/je/develop/funRelyon',
        methods: {
          removeRelyon: 'removeRelyon'
        }
      },

      /* gantt */
      'je.core.develop.gantt': {
        base: '/je/develop/gantt'
      },

      /* queryStrategy */
      'je.core.develop.queryStrategy': {
        base: '/je/develop/queryStrategy'
      },

      /* resButton */
      'je.core.develop.resButton': {
        base: '/je/develop/resButton',
        methods: {
          initShBtnInfo: 'initShBtnInfo'
        }
      },

      /* resColumn */
      'je.core.develop.resColumn': {
        base: '/je/develop/resColumn',
        methods: {
          impl: 'impl',
          doSync: 'doSync',
          doQuerySave: 'doQuerySave',
          getTreeTableCodes: 'getTreeTableCodes'
        }
      },

      /* resColumn */
      'je.core.develop.resField': {
        base: '/je/develop/resField',
        methods: {
          doSync: 'doSync'
        }
      },

      /* web app相关 */
      'je.core.web.app': {
        base: '/je/web/app',
        methods: {
          execute: 'execute'
        }
      },

      /* phone app相关 */
      'je.core.phone.app': {
        base: '/je/phone/app',
        methods: {
          push: 'push',
          getApkBadge: 'getApkBadge',
          getAppDataNum: 'getAppDataNum',
          loadHome: 'loadHome',
          loadApk: 'loadApk',
          loadLoginCfg: 'loadLoginCfg',
          initWFData: 'initWFData',
          getCurrentUserInfo: 'getCurrentUserInfo',
          getWfCommentDetail: 'getWfCommentDetail',
          doInitList: 'doInitList',
          doInitForm: 'doInitForm',
          doReportInit: 'doReportInit',
          doReportLoad: 'doReportLoad',
          loadDS: 'loadDS',
          doChartLoad: 'doChartLoad',
          doDSLoad: 'doDSLoad'
        }
      },
      'je.core.phone.phone': {
        base: '/je/phone',
        methods: {
          buildApp: 'buildApp',
          buildPlugin: 'buildPlugin',
          importPlugin: 'importPlugin',
          buildFuncHtml: 'buildFuncHtml',
          push: 'push',
          doVersion: 'doVersion',
          doCopyApp: 'doCopyApp',
          doPluginAdd: 'doPluginAdd',
          doAddApk: 'doAddApk',
          doAddModel: 'doAddModel',
          doTreeNodeMove: 'doTreeNodeMove',
          importApps: 'importApps',
          exportApps: 'exportApps',
          downLoginFile: 'downLoginFile'
        }
      },

      /* document */
      'je.core.doc.document': {
        base: '/je/doc/document',
        methods: {
          doLoadFile: 'doLoadFile',
          downLoadZIP: 'downLoadZIP',
          downLoadFiles: 'downLoadFiles',
          download: 'download',
          loadFormFiles: 'loadFormFiles',
          uploadFile: 'uploadFile',
          removeFormFiles: 'removeFormFiles',
          getDocInfo: 'getDocInfo',
          deleteFile: 'deleteFile',
          writeFile: 'writeFile',
          openOfficeFile: 'openOfficeFile',
          openPageOffice: 'openPageOffice'
        }
      },

      /* 新文件上传 */
      'je.core.doc.new.document': {
        base: '/je/document',
        methods: {
          file: 'file',
          preview: 'preview',
          down: 'down'
        }
      },

      /* documentation */
      'je.core.doc.documentation': {
        base: '/je/doc/documentation',
        methods: {
          saveDirs: 'saveDirs',
          download: 'download',
          downloadPackage: 'downloadPackage',
          downloadZip: 'downloadZip',
          doRestore: 'doRestore',
          doClear: 'doClear',
          newFile: 'newFile',
          doSaveFile: 'doSaveFile',
          getFileMenuTree: 'getFileMenuTree',
          paste: 'paste',
          packageFile: 'packageFile',
          getFuncInfoTree: 'getFuncInfoTree',
          doOpenFile: 'doOpenFile',
          treeMove: 'treeMove',
          doUpdatePerm: 'doUpdatePerm',
          addFaster: 'addFaster',
          orderFaster: 'orderFaster'
        }
      },

      /* doc.file */
      'je.core.doc.file': {
        base: '/je/doc/file',
        methods: {
          newFile: 'newFile',
          downloadPackage: 'downloadPackage',
          paste: 'paste'
        }
      },

      /* doc.fileview */
      'je.core.doc.fileview': {
        base: '/je/doc/fileview',
        methods: {
          loadFileData: 'loadFileData',
          loadEmlData: 'loadEmlData',
          saveFile: 'saveFile'
        }
      },

      /* chart */
      'je.core.sys.chart': {
        base: '/je/sys/sysChart',
        methods: {
          loadFileData: 'loadFileData',
          loadEmlData: 'loadEmlData',
          saveFile: 'saveFile'
        }
      },

      /* email */
      'je.core.email': {
        base: '/je/email/email',
        methods: {
          loadUserRoot: 'loadUserRoot',
          doAddConfig: 'doAddConfig',
          updateConfig: 'updateConfig',
          testConfig: 'testConfig',
          doSend: 'doSend',
          doSendEmail: 'doSendEmail',
          doReply: 'doReply',
          doReceive: 'doReceive',
          stopReceive: 'stopReceive',
          getUnreadCount: 'getUnreadCount',
          doClear: 'doClear'
        }
      },

      /* word */
      'je.core.word': {
        base: '/je/word',
        methods: {
          report2word: 'report2word',
          report2excel: 'report2excel'
        }
      },

      /* resourceTable */
      'je.core.resourceTable': {
        base: '/je/resourceTable',
        methods: {
          applyTable: 'applyTable',
          getFuncInfoByTable: 'getFuncInfoByTable',
          copyTable: 'copyTable',
          imp: 'imp',
          createView: 'createView',
          updateView: 'updateView',
          syncView: 'syncView',
          syncTable: 'syncTable',
          impView: 'impView',
          checkTableCode: 'checkTableCode',
          loadTableData: 'loadTableData',
          sql: 'sql',
          physicsRemove: 'physicsRemove',
          clearTableCache: 'clearTableCache',
          clearTableAllCache: 'clearTableAllCache',
          pasteTable: 'pasteTable',
          getInfoById: 'getInfoById',
          tableMove: 'tableMove',
          getTableInfoByFunc: 'getTableInfoByFunc',
          getPkCode4Table: 'getPkCode4Table',
          syncTreePath: 'syncTreePath',
          initSaasColumn: 'initSaasColumn',
          toOracle: 'toOracle',
          toMySql: 'toMySql',
          generateSql: 'generateSql',
          syncOracleData: 'syncOracleData',
          syncMySqlData: 'syncMySqlData',
          syncOracleJbpm: 'syncOracleJbpm',
          syncTableField: 'syncTableField',
          doSetPkName: 'doSetPkName'
        }
      },

      /* tableKdy */
      'je.core.tableKey': {
        base: '/je/table/tableKey',
        methods: {
          removeKey: 'removeKey',
          doAddPk: 'doAddPk'
        }
      },
      'je.core.tableIndex': {
        base: '/je/table/tableIndex',
        methods: {
          removeIndex: 'removeIndex',
          createIndexByColumn: 'createIndexByColumn',
          removeIndexByColumn: 'removeIndexByColumn'
        }
      },

      /* tableColumn */
      'je.core.tableColumn': {
        base: '/je/table/tableColumn',
        methods: {
          addField: 'addField',
          removeColumn: 'removeColumn',
          impNewCols: 'impNewCols',
          checkColunmnCode: 'checkColunmnCode',
          addColumnByDD: 'addColumnByDD',
          addColumnByDDList: 'addColumnByDDList',
          addColumnByTable: 'addColumnByTable',
          addColumnByAtom: 'addColumnByAtom',
          addAtomByColumn: 'addAtomByColumn',
          generateUpdateInfo: 'generateUpdateInfo',
          generateShInfo: 'generateShInfo',
          findColumnCount: 'findColumnCount'
        }
      },

      /* tableKdy */
      'je.core.btnlog': {
        base: '/je/login/btnLog',
        methods: {
          insertBtnLog: 'insertBtnLog'
        }
      },
      'je.core.calendar': {
        base: '/je/calendar/calendar',
        methods: {
          loadPortal: 'loadPortal',
          getMyTaskTree: 'getMyTaskTree',
          getGroupTree: 'getGroupTree',
          getShareTaskTree: 'getShareTaskTree',
          removeGroup: 'removeGroup',
          addGroupUsers: 'addGroupUsers'
        }
      },
      'je.core.sysConfig.sysMode': {
        base: '/je/sysConfig/sysMode',
        methods: {
          expDevelop: 'expDevelop',
          backDevelopData: 'backDevelopData'
        }
      },
      'je.core.cache': {
        base: '/je/app/cache',
        methods: {
          clearAll: 'clearAll',
          clearFunc: 'clearFunc',
          clearDic: 'clearDic',
          clearMenu: 'clearMenu',
          getModel: 'getModel',
          applyCacheConfig: 'applyCacheConfig'
        }
      },

      /* 数据字典 */
      'je.core.dd.dd': {
        base: '/je/dd/dd',
        methods: {
          initLoad: 'initLoad',
          getDicByCode: 'getDicByCode',
          getDicItemByCode: 'getDicItemByCode',
          getDicItemByCodes: 'getDicItemByCodes'
        }
      },
      'je.core.dd.tree': {
        base: '/je/dd/tree',
        methods: {
          loadTreeData: 'loadTreeData',
          loadTree: 'loadTree',
          loadLinkTree: 'loadLinkTree',
          clearMenu: 'clearMenu',
          getModel: 'getModel',
          applyCacheConfig: 'applyCacheConfig',
          findAsyncNodes: 'findAsyncNodes'
        }
      },
      'je.core.dd.ddItem': {
        base: '/je/dd/ddItem',
        methods: {
          checkDdItems: 'checkDdItems'
        }
      },
      'je.core.db': {
        base: '/je/db/db',
        methods: {
          doDb: 'doDb',
          doCheckInfo: 'doCheckInfo',
          doSyncCoreInfo: 'doSyncCoreInfo',
          doWfData: 'doWfData',
          doYwData: 'doYwData',
          doFuncInfo: 'doFuncInfo',
          doSysInfo: 'doSysInfo',
          expDbExcel: 'expDbExcel'
        }
      },
      'je.core.dataSource': {
        base: '/je/dataSource',
        methods: {
          doTest: 'doTest'
        }
      },
      'je.core.job': {
        base: '/je/job/job',
        methods: {
          addJobDesign: 'addJobDesign',
          deleteTask: 'deleteTask',
          stopTask: 'stopTask',
          startTask: 'startTask',
          receiveTask: 'receiveTask',
          finishTask: 'finishTask',
          setHistory: 'setHistory',
          addStar: 'addStar',
          cancelStar: 'cancelStar'
        }
      },
      'je.core.message.message': {
        base: '/je/message/message',
        methods: {
          sendSys: 'sendSys',
          testSendMsg: 'testSendMsg',
          sendRtx: 'sendRtx',
          sendDwr: 'sendDwr',
          sendEmail: 'sendEmail',
          sendNote: 'sendNote',
          sendMsg: 'sendMsg',
          sendNoteMsg: 'sendNoteMsg',
          checkNoteMsg: 'checkNoteMsg'
        }
      },
      'je.core.mk': {
        base: '/je/mk/mk',
        methods: {
          saveLogo: 'saveLogo',
          loadLogo: 'loadLogo',
          saveShowInfo: 'saveShowInfo',
          createOrUpdate: 'createOrUpdate'
        }
      },
      'je.core.mxGraph': {
        base: '/je/mxGraph/mxGraph',
        methods: {
          expImg: 'expImg'
        }
      },
      'je.core.rbac.rbac': {
        base: '/je/rbac/rbac',
        methods: {
          queryUserByDeptId: 'queryUserByDeptId',
          queryUserByDeptCode: 'queryUserByDeptCode',
          countUserByDeptCode: 'countUserByDeptCode',
          countUserByDeptId: 'countUserByDeptId',
          queryUserByRoleId: 'queryUserByRoleId',
          queryUserByRoleCode: 'queryUserByRoleCode',
          countUserByRoleCode: 'countUserByRoleCode',
          countUserByRoleId: 'countUserByRoleId',
          queryUserBySentryId: 'queryUserBySentryId',
          queryUserBySentryCode: 'queryUserBySentryCode',
          countUserBySentryCode: 'countUserBySentryCode',
          countUserBySentryId: 'countUserBySentryId',
          queryUser: 'queryUser',
          countUser: 'countUser',
          queryDeptById: 'queryDeptById',
          queryDeptByCode: 'queryDeptByCode',
          countDeptByCode: 'countDeptByCode',
          countDeptById: 'countDeptById',
          queryRoleById: 'queryRoleById',
          queryRoleByCode: 'queryRoleByCode',
          countRoleByCode: 'countRoleByCode',
          countRoleById: 'countRoleById',
          querySentryById: 'querySentryById',
          querySentryByCode: 'querySentryByCode',
          countSentryByCode: 'countSentryByCode',
          countSentryById: 'countSentryById'
        }
      },
      'je.core.rbac.dept': {
        base: '/je/rbac/dept',
        methods: {
          doEnabled: 'doEnabled',
          implUsers: 'implUsers',
          checkDeptCode: 'checkDeptCode',
          checkAdminDept: 'checkAdminDept',
          syncCompany: 'syncCompany'
        }
      },
      'je.core.rbac.role': {
        base: '/je/rbac/role',
        methods: {
          roleMove: 'roleMove',
          loadRoleUsers: 'loadRoleUsers',
          doUpdateUsers: 'doUpdateUsers',
          removeUsers: 'removeUsers',
          syncDeptOrder: 'syncDeptOrder',
          syncSentryOrder: 'syncSentryOrder',
          doImplUser: 'doImplUser'
        }
      },
      'je.core.rbac.cjgl': {
        base: '/je/rbac/cjgl',
        methods: {
          paste: 'paste',
          doAddNode: 'doAddNode',
          gsMove: 'gsMove',
          saveNode: 'saveNode',
          removeNode: 'removeNode',
          saveDicNode: 'saveDicNode'
        }
      },
      'je.core.rbac.roleGroup': {
        base: '/je/rbac/roleGroup',
        methods: {}
      },
      'je.core.rbac.workGroup': {
        base: '/je/rbac/workGroup',
        methods: {
          implUsers: 'implUsers',
          removeUsers: 'removeUserss'
        }
      },
      'je.core.rbac.sentry': {
        base: '/je/rbac/sentry',
        methods: {
          doEnabled: 'doEnabled',
          loadSentryUsers: 'loadSentryUsers',
          implUsers: 'implUsers',
          removeUsers: 'removeUsers'
        }
      },
      'je.core.wf.taskInfo': {
        base: '/je/jbpm/taskInfo',
        methods: {
          getCurrentTask: 'getCurrentTask',
          updateTaskPriority: 'updateTaskPriority',
          updateTaskDelay: 'updateTaskDelay',
          completeTask: 'completeTask',
          completeBatchTask: 'completeBatchTask',
          taskTask: 'taskTask',
          doPrompt: 'doPrompt',
          loadWfInfo: 'loadWfInfo',
          loadWfPdInfo: 'loadWfPdInfo',
          loadForkTaskInfo: 'loadForkTaskInfo',
          loadEndInfo: 'loadEndInfo',
          startProcess: 'startProcess',
          sponsorProcess: 'sponsorProcess',
          callProcess: 'callProcess',
          endProcess: 'endProcess',
          handUpProcess: 'handUpProcess',
          activateProcess: 'activateProcess',
          loadTaskAssgine: 'loadTaskAssgine',
          loadTaskRejectAssgine: 'loadTaskRejectAssgine',
          loadAppTaskAssgine: 'loadAppTaskAssgine',
          loadRoundUser: 'loadRoundUser',
          loadAppRoundUser: 'loadAppRoundUser',
          loadAppPromptUser: 'loadAppPromptUser',
          getProcessEndTask: 'getProcessEndTask',
          getWfTaskName: 'getWfTaskName',
          doSetDiyUser: 'doSetDiyUser',
          getModel: 'getModel'
        }
      },
      'je.core.wf.processInfo': {
        base: '/je/jbpm/processInfo',
        methods: {
          callDeploy: 'callDeploy',
          deploy: 'deploy',
          showImage: 'showImage',
          getProcessTree: 'getProcessTree',
          getCurrentTaskTree: 'getCurrentTaskTree',
          getProcessInfo: 'getProcessInfo',
          loadProcessHistory: 'loadProcessHistory',
          clearDirtyData: 'clearDirtyData'
        }
      },
      'je.core.test.testAll': {
        base: '/je/test/testAll',
        methods: {
          addRootNodeByDD: 'addRootNodeByDD',
          syncDicCore: 'syncDicCore',
          syncSyPath: 'syncSyPath',
          updateKeys: 'updateKeys',
          updateTableField: 'updateTableField',
          syncYhyg: 'syncYhyg',
          updateDataVal: 'updateDataVal',
          updateFieldVal: 'updateFieldVal',
          updateIntFieldVal: 'updateIntFieldVal',
          updateSysField: 'updateSysField',
          syncFuncData: 'syncFuncData',
          printTest: 'printTest',
          doTree: 'doTree',
          doChildTree: 'doChildTree',
          test: 'test',
          exp: 'exp',
          syncFuncInfo: 'syncFuncInfo',
          syncMenu: 'syncMenu',
          syncTableColumn: 'syncTableColumn',
          syncDicInfo: 'syncDicInfo',
          syncIndex: 'syncIndex',
          testBean: 'testBean',
          testProcedure: 'testProcedure',
          id: 'id'
        }
      },
      'je.core.crm.crmHr': {
        base: '/je/CRM/crmHr',
        methods: {
          createOrUpdateCost: 'createOrUpdateCost'
        }
      },
      'je.core.crm.zclr': {
        base: '/je/CRM/zclr',
        methods: {}
      }
    }; // 数据库链接

    var urls = {
      'sys/iconAction!importFont.action': '/je/icon/icon/importFont',
      'je/appAction!doInitList.action': '/je/phone/app/doInitList',
      'rbac/userAction!getCurrentUserInfo.action': '/je/rbac/user/getCurrentUserInfo',
      'sys/expressAction!load.action': '/je/express/express/load',
      'je/appAction!loadHome.action': '/je/phone/app/loadHome'
    };
    var _urls = {}; // 方法链接

    for (var method in methods) {
      var methodUrl = methodPrefix + methods[method] + methodSuffix;
      _urls["method.".concat(method)] = methodUrl;
    }

    for (var key in controllers) {
      var controller = controllers[key];
      var ctrMethods = controller.methods = controller.methods || {}; // 继承链接

      if (!controller.unextend) {
        for (var _method in methods) {
          ctrMethods[_method] = ctrMethods[_method] ? ctrMethods[_method] : methods[_method];
        }
      } // 基础链接


      var ctrBase = _urls[key] = controller.base; // 方法链接

      for (var _method2 in ctrMethods) {
        var _methodUrl = methodPrefix + ctrMethods[_method2] + methodSuffix;

        _urls["".concat(key, ".").concat(_method2)] = ctrBase + _methodUrl;
      }
    } // 数据库链接


    for (var url in urls) {
      _urls[url] = urls[url];
    }

    return _urls;
  }()
};
exports["default"] = _default;

/***/ }),

/***/ "./src/core/je/system/assets.js":
/*!**************************************!*\
  !*** ./src/core/je/system/assets.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

/**
 * 资源文件.
 * @module JE/api
 */
var _default = {
  /**
   * 图片文件
   */
  images: {
    folder: 'http://localhost:13131/_www/static/images/folder.png',
    app: 'http://localhost:13131/_www/static/images/app.png',
    apk: 'http://localhost:13131/_www/static/images/apk.png',
    appAdd: 'http://localhost:13131/_www/static/images/app-add.png',
    loginLogo: 'http://localhost:13131/_www/static/images/logo.png'
  },

  /**
   * 音频文件
   */
  audios: {
    // 安装更新
    install: '_www/static/audio/install.wav',
    // 错误
    error: '_www/static/audio/error.wav',
    // 功能点击
    funcclick: '_www/static/audio/funcclick.mp3',
    // 按钮点击
    btnclick: '_www/static/audio/btnclick.wav',
    // im消息提醒
    im_message: '_www/static/audio/im_message.mp3',
    // im语音消息发送
    im_voice_send: '_www/static/audio/im_voice_send.mp3'
  }
};
exports["default"] = _default;

/***/ }),

/***/ "./src/core/je/system/config.js":
/*!**************************************!*\
  !*** ./src/core/je/system/config.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

/**
 * 配置信息
 */
var _default = {
  pages: {
    link: {
      title: '链接',
      page: '_www/plugins/link/index.html'
    },
    report: {
      title: '报表',
      page: '_www/plugins/report/index.html'
    },
    chart: {
      title: '图表',
      page: '_www/plugins/chart/index.html'
    },
    appinfo: {
      title: 'APP版本',
      page: '_www/plugins/tools/appinfo.html'
    },
    barcode: {
      title: '扫码',
      page: '_www/plugins/tools/barcode.html'
    },
    setting: {
      title: '系统设置',
      js: '_www/view/config/setting.js'
    }
  }
};
exports["default"] = _default;

/***/ }),

/***/ "./src/core/je/system/constants.js":
/*!*****************************************!*\
  !*** ./src/core/je/system/constants.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

/**
 * @Author : ZiQin Zhai
 * @Date : 2019/11/11 17:16
 * @Version : 1.0
 * @Last Modifined by : ZiQin Zhai
 * @Last Modifined time : 2019/11/11 17:16
 * @Description 常量集合
 **/
var _default = {
  APP_LICENSE_UNAUTHRIZED: 9003 // 未授权的APP

};
exports["default"] = _default;

/***/ }),

/***/ "./src/core/je/system/des.js":
/*!***********************************!*\
  !*** ./src/core/je/system/des.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.strEncode = strEncode;
exports.strDecode = strDecode;

/**
 * 加密函数,三个密钥
 * @module JE/DES
 * @example
 *  //加密:
 *  strEncode(data,firstKey,secondKey,thirdKey);
 *  //解密:
 *  strDecode(data,firstKey,secondKey,thirdKey);
 *
 */
var BASE64_CODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
/**
   * 描述: 混淆段长度,范围:4-255.
   */

var BLOCK_MAX_LENGTH = 20;
/**
   * 描述: 混淆段长度,关键字长度.
   */

var BLOCK_KEY_LENGTH = 4;
var _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='; // private method for UTF-8 encoding

var _utf8_encode = function _utf8_encode(string) {
  string = string.replace(/\r\n/g, '\n');
  var utftext = '';

  for (var n = 0; n < string.length; n++) {
    var c = string.charCodeAt(n);

    if (c < 128) {
      utftext += String.fromCharCode(c);
    } else if (c > 127 && c < 2048) {
      utftext += String.fromCharCode(c >> 6 | 192);
      utftext += String.fromCharCode(c & 63 | 128);
    } else {
      utftext += String.fromCharCode(c >> 12 | 224);
      utftext += String.fromCharCode(c >> 6 & 63 | 128);
      utftext += String.fromCharCode(c & 63 | 128);
    }
  }

  return utftext;
}; // private method for UTF-8 decoding


var _utf8_decode = function _utf8_decode(utftext) {
  var string = '';
  var i = 0;
  var c = c1 = c2 = 0;

  while (i < utftext.length) {
    c = utftext.charCodeAt(i);

    if (c < 128) {
      string += String.fromCharCode(c);
      i++;
    } else if (c > 191 && c < 224) {
      c2 = utftext.charCodeAt(i + 1);
      string += String.fromCharCode((c & 31) << 6 | c2 & 63);
      i += 2;
    } else {
      c2 = utftext.charCodeAt(i + 1);
      c3 = utftext.charCodeAt(i + 2);
      string += String.fromCharCode((c & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
      i += 3;
    }
  }

  return string;
}; // public method for encoding


var encodeBase64 = function encodeBase64(input) {
  var output = '';
  var chr1;
  var chr2;
  var chr3;
  var enc1;
  var enc2;
  var enc3;
  var enc4;
  var i = 0;
  input = _utf8_encode(input);

  while (i < input.length) {
    chr1 = input.charCodeAt(i++);
    chr2 = input.charCodeAt(i++);
    chr3 = input.charCodeAt(i++);
    enc1 = chr1 >> 2;
    enc2 = (chr1 & 3) << 4 | chr2 >> 4;
    enc3 = (chr2 & 15) << 2 | chr3 >> 6;
    enc4 = chr3 & 63;

    if (isNaN(chr2)) {
      enc3 = enc4 = 64;
    } else if (isNaN(chr3)) {
      enc4 = 64;
    }

    output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);
  }

  return output;
}; // public method for decoding


var decodeBase64 = function decodeBase64(input) {
  var output = '';
  var chr1;
  var chr2;
  var chr3;
  var enc1;
  var enc2;
  var enc3;
  var enc4;
  var i = 0;
  input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');

  while (i < input.length) {
    enc1 = _keyStr.indexOf(input.charAt(i++));
    enc2 = _keyStr.indexOf(input.charAt(i++));
    enc3 = _keyStr.indexOf(input.charAt(i++));
    enc4 = _keyStr.indexOf(input.charAt(i++));
    chr1 = enc1 << 2 | enc2 >> 4;
    chr2 = (enc2 & 15) << 4 | enc3 >> 2;
    chr3 = (enc3 & 3) << 6 | enc4;
    output += String.fromCharCode(chr1);

    if (enc3 != 64) {
      output += String.fromCharCode(chr2);
    }

    if (enc4 != 64) {
      output += String.fromCharCode(chr3);
    }
  }

  output = _utf8_decode(output);
  return output;
};
/**
 * 加密
 * @param {*} data 加密信息
 * @param {*} firstKey key
 * @param {*} secondKey key
 * @param {*} thirdKey key
 * @returns {String}
 */


function strEncode(data, firstKey, secondKey, thirdKey) {
  // 验证参数
  // eslint-disable-next-line no-cond-assign
  if (data == null || data == undefined || (data = new String(data)).length == 0) return ''; // 获取时间戳

  var currentTimeMillis = new Date().valueOf(); // 计算key长度
  // var keyLength = strToBinary(firstKey).length + secondKey.length + strToBinary(thirdKey).length;

  var keyLength = 0;

  for (var i = 0; i < firstKey.length; i++) {
    keyLength += firstKey.charCodeAt(i);
  }

  for (var _i = 0; _i < secondKey.length; _i++) {
    keyLength -= secondKey.charCodeAt(_i);
  }

  var isSum = false;

  for (var _i2 = 0; _i2 < thirdKey.length; _i2++) {
    if (isSum) {
      keyLength += thirdKey.charCodeAt(_i2);
    } else {
      keyLength -= thirdKey.charCodeAt(_i2);
    }

    isSum = !isSum;
  }

  if (keyLength < 0) {
    keyLength = -keyLength;
  } // 计算混淆段长度


  var blockLength = 4 + (keyLength + currentTimeMillis) % (BLOCK_MAX_LENGTH - 4); // 计算偏移量

  var offset = (keyLength + blockLength) % BASE64_CODE.length;
  var base64Str = encodeBase64(data);
  var sb = [];
  var chars = base64Str.split('');
  var temp = [];

  for (var _i3 = 0; _i3 < chars.length; _i3++) {
    var index = BASE64_CODE.indexOf(chars[_i3]); // 偏移替换

    index = (index + offset) % BASE64_CODE.length;
    temp.push(BASE64_CODE.charAt(index));

    if (temp.length == blockLength) {
      for (var j = temp.length - 1; j >= 0; j--) {
        sb.push(temp[j]);
      }

      temp = [];
    }
  }

  if (temp.length != 0) {
    for (var _j = temp.length - 1; _j >= 0; _j--) {
      sb.push(temp[_j]);
    }
  }

  blockLength += sb.length + BLOCK_KEY_LENGTH;
  var blockLengthStr = blockLength.toString(16);

  while (blockLengthStr.length < BLOCK_KEY_LENGTH) {
    blockLengthStr = "0".concat(blockLengthStr);
  }

  sb.push(blockLengthStr);
  return sb.join('');
}
/**
 * 解密
 * @param {*} data 解密字符串
 * @param {*} firstKey key
 * @param {*} secondKey key
 * @param {*} thirdKey key
 * @returns {String}
 */


function strDecode(data, firstKey, secondKey, thirdKey) {
  // TODO 解密暂时不加
  return '';
}

/***/ }),

/***/ "./src/core/je/system/plus.js":
/*!************************************!*\
  !*** ./src/core/je/system/plus.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireWildcard.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/toConsumableArray.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/defineProperty.js"));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/objectWithoutProperties.js"));

var Uploder = _interopRequireWildcard(__webpack_require__(/*! ../util/uploader */ "./src/core/je/util/uploader.js"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

// 单击声音  绑定样式je-audio-btn
window.addEventListener('tap', function (e) {
  var dom = e.target;

  if (mui.os.plus && dom && (dom.classList.contains('je-audio-btn') || dom.classList.contains('mui-action-back'))) {
    JE.playAudio4Btn();
  }
});
var _default = {
  /**
   * 打开新窗口
   * @param {string} url 要打开的页面地址
   * @param {string} id 指定页面ID 如果没指定 则使用url作为id
   * @param {object} options 可选:参数,等待,窗口,显示配置{params:{},waiting:{},styles:{},show:{}}
   * @param {object} handleHeadClick  启用原生头监听, 在对应页面添加 监听，符合条件就会触发回调
   *    支持配置监听位置
   *        {
  *          center:true // 监听中间区域 40%~80%
  *        }
   *    亦可支持同时配置center、right
   *
   *    // 对应页面添加如下监听
   *    window.addEventListener('handleHeadClick', () => {
  *      // Anything...
  *    });
   * @returns {webview}
   */
  openWindow: function openWindow(_ref) {
    var url = _ref.url,
        _ref$id = _ref.id,
        id = _ref$id === void 0 ? url : _ref$id,
        _ref$title = _ref.title,
        title = _ref$title === void 0 ? '' : _ref$title,
        _ref$type = _ref.type,
        type = _ref$type === void 0 ? 'default' : _ref$type,
        _ref$hideNView = _ref.hideNView,
        hideNView = _ref$hideNView === void 0 ? false : _ref$hideNView,
        _ref$aniShow = _ref.aniShow,
        aniShow = _ref$aniShow === void 0 ? 'pop-in' : _ref$aniShow,
        _ref$styles = _ref.styles;
    _ref$styles = _ref$styles === void 0 ? {} : _ref$styles;
    var _ref$styles$statusbar = _ref$styles.statusbar,
        statusbar = _ref$styles$statusbar === void 0 ? '#536DFE' : _ref$styles$statusbar,
        _ref$styles$popGestur = _ref$styles.popGesture,
        popGesture = _ref$styles$popGestur === void 0 ? 'close' : _ref$styles$popGestur,
        otherStyle = (0, _objectWithoutProperties2["default"])(_ref$styles, ["statusbar", "popGesture"]),
        _ref$handleHeadClick = _ref.handleHeadClick,
        handleHeadClick = _ref$handleHeadClick === void 0 ? {} : _ref$handleHeadClick,
        other = (0, _objectWithoutProperties2["default"])(_ref, ["url", "id", "title", "type", "hideNView", "aniShow", "styles", "handleHeadClick"]);

    var styles = _objectSpread({
      // 沉浸式栏底色
      statusbar: {
        background: statusbar
      },
      // iOS侧滑
      popGesture: popGesture,
      titleNView: !hideNView && {
        // 窗口的标题栏控件
        type: type,
        // 标题栏控件样式
        titleText: title,
        // 标题栏文字,当不设置此属性时，默认加载当前页面的标题，并自动更新页面的标题
        titleSize: '17px',
        // 字体大小,默认17px
        titleColor: '#fff',
        // 字体颜色,颜色值格式为"#RRGGBB",默认值为"#000000"
        autoBackButton: true,
        backgroundColor: '#536dfe' // 控件背景颜色,颜色值格式为"#RRGGBB",默认值为"#F7F7F7"
        // progress: { // 标题栏控件的进度条样式
        //   color: '#F02619', // 进度条颜色,默认值为"#00FF00"
        //   height: '2px', // 进度条高度,默认值为"2px"
        // },
        // splitLine: { // 标题栏控件的底部分割线，类似borderBottom
        //   color: '#CCCCCC', // 分割线颜色,默认值为"#CCCCCC"
        //   height: '1px', // 分割线高度,默认值为"2px"
        // },

      },
      softinputMode: 'adjustResize'
    }, otherStyle);

    var option = _objectSpread({
      styles: styles
    }, other);

    var webview = mui.openWindow(_objectSpread({
      url: url,
      id: id,
      show: {
        aniShow: aniShow
      }
    }, option)); // 处理点击原生头

    if (!JE.isEmpty(handleHeadClick)) {
      // 不支持监听left，左侧事件已经被back监听。
      var center = handleHeadClick.center,
          right = handleHeadClick.right;
      var innerWidth = plus.screen.resolutionWidth;
      webview.getTitleNView().addEventListener('click', function (_ref2) {
        var clientX = _ref2.clientX;

        function checkPosition() {
          switch (true) {
            case clientX < 0:
              return false;

            case center && clientX >= parseInt(innerWidth * 0.2, 10) && clientX <= parseInt(innerWidth * 0.8, 10):
              if (!right) {
                // 支持同时配置 center、right
                return true;
              }

            // eslint-disable-next-line no-fallthrough

            case right && clientX >= parseInt(innerWidth * 0.8, 10):
              return true;

            default:
              return false;
          }
        } // 配置title，right


        var check = checkPosition();

        if (check) {
          mui.fire(webview, 'handleHeadClick');
        }
      });
    }

    return webview;
  },

  /**
   * 是否包含H5+的配置sdk
   * @param {String} sdk sdk名称
   * @returns {Boolean}
   */
  hasPlusSDK: function hasPlusSDK(sdk) {
    return sdk && true; // const sdks = JE.split(JE.getLSItem('__plussdk'), ',');
    // return sdks.indexOf(sdk) != -1;
  },

  /**
   * 播放音频
   * @param {String} path 音频路径
   * @param {Function} [success] 成功方法
   * @param {Function} [error] 失败方法
   */
  playAudio: function playAudio(path, success, error) {
    if (mui.os.plus && JE.isNotEmpty(path) && JE.getLSItem('_audio_button') != '0') {
      var player = plus.audio.createPlayer(path);
      player.play(success, error);
    }
  },

  /**
   * 播放单击按钮声音
   */
  playAudio4Btn: function playAudio4Btn() {
    JE.playAudio(JE.audios.btnclick);
  },

  /**
   * 获取当前位置
   * @param {Function} callback 回调函数，参数：success,obj
   * @param {Object} [options] h5+ 配置项
   */
  getLocation: function getLocation(callback, options) {
    if (mui.os.plus && JE.hasPlusSDK('Maps')) {
      plus.geolocation.getCurrentPosition(function (p) {
        callback(true, p);
      }, function (e) {
        var msg = '获取用户位置的请求超时';

        switch (e.code) {
          case 1:
            msg = 'GPS访问被拒绝 或 GPS未开启';
            break;

          case 2:
            msg = '位置信息不可用';
            break;

          case 3:
            msg = '获取用户位置的请求超时';
            break;

          default:
            msg = e.message;
            break;
        }

        callback(false, {
          message: msg,
          error: e
        });
      }, JE.apply({
        provider: 'baidu'
      }, options));
    } else {
      JE.alert('不支持地图，请联系管理员！');
    }
  },

  /**
   * 获得首页
   * @returns {webview}
   */
  getHomePage: function getHomePage() {
    return plus.webview.getLaunchWebview();
  },

  /**
   * 获得服务页
   * @returns {webview}
   */
  getServerPage: function getServerPage() {
    return window.plus && (plus.webview.getWebviewById('je-server-page') || plus.webview.getLaunchWebview());
  },

  /**
   * 触发首页事件
   * @param {*} event 事件
   * @param {*} params 参数
   */
  fireServer: function fireServer(event, params) {
    this.fire(this.getServerPage(), event, params);
  },

  /**
   * 触发首页action方法
   * @param {*} action 事件
   * @param {*} params 参数
   */
  fireServerAction: function fireServerAction(action, params) {
    this.fireServer('serveraction', {
      action: action,
      params: params
    });
  },

  /**
   * HBuilder 包名
   */
  HBuilderPackageName: ['io.dcloud.HBuilder', 'io.dcloud.streamapps'],

  /**
   * 获得程序的包名
   * @returns {String}
   */
  getPackageName: function getPackageName() {
    var packageName = '';

    if (mui.os.plus) {
      if (mui.os.android) {
        packageName = plus.android.runtimeMainActivity().getPackageName();
      } else if (mui.os.ios) {
        var NSBundle = plus.ios.importClass('NSBundle');
        var bundle = NSBundle.mainBundle();
        packageName = bundle.bundleIdentifier();
        plus.ios.deleteObject(bundle);
      }
    } // packageName = JE.HBuilderPackageName.indexOf(packageName) != -1 ? 'com.je.suanbanyun' : packageName;


    return packageName;
  },

  /**
   * APP资源根目录（_doc/apkCode/）
   * @param {String} [folder] 相对于根目录的地址
   * @returns {String}
   */
  getBasicPath: function getBasicPath(folder) {
    var basicPath = "_doc/".concat(JE.getApkCode(), "/");
    return JE.isEmpty(folder) ? basicPath : basicPath + (folder.startsWith('/') ? folder.substring(1) : folder);
  },

  /**
   * 文件下载
   * @param {Object} cfg 配置信息
   * @param {String} cfg.url 下载的文件地址
   * @param {String} cfg.fileName 下载后的文件名或者目录
   * @param {String} [cfg.showWaiting] 下载等待提示
   * @param {String} [cfg.waitMsg] 下载等待提示文字
   * @param {Number} [cfg.timeout] 下载请求超时毫秒
   * @param {Function} [cfg.callback] 下载后的函数
   * @param {Function} [cfg.statechanged] 下载中状态
   * @returns {Promise} downloader
   */
  download: function download() {
    var cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return new Promise(function (resolve, reject) {
      var url = cfg.url;

      if (JE.isEmpty(url)) {
        var message = '下载地址不能为空！';
        JE.msg(message); // eslint-disable-next-line prefer-promise-reject-errors

        reject({
          message: message
        });
        return;
      }

      cfg.showWaiting && JE.showWaiting(cfg.waitMsg || '开始下载...', true);
      var filename = JE.getBasicPath('download/') + JE.value(cfg.fileName, '');
      var dtask = plus.downloader.createDownload(url, {
        retry: 0,
        method: 'GET',
        filename: filename,
        timeout: (cfg.timeout || 5000) * 0.001 // 五秒没响应，表示下载失败

      }, function (downloader, status) {
        if (status == 200) {
          cfg.callback && cfg.callback(downloader);
          resolve(downloader);
        } else {
          downloader.message = '下载失败！';
          reject(downloader);
        }

        JE.closeWaiting();
      }); // 下载状态

      dtask.addEventListener('statechanged', function (task) {
        cfg.statechanged && cfg.statechanged(task);
        /* switch (task.state) {
          case 1: // 开始
            //            wt.setTitle( "开始下载..." );
            break;
          case 2: // 已连接到服务器
            //            wt.setTitle( "链接到服务器..." );
            break;
          case 3: // 已接收到数据
            let msg = '加载中...';
            if (task.totalSize > 0) {
              msg = `${window.parseInt((task.downloadedSize / task.totalSize) * 100)}%`;
            }
            cfg.showWaiting && JE.showWaiting(msg, true);
            break;
          case 4: // 下载完成
            break;
          default:
        } */
      });
      dtask.start();
    });
  },

  /**
   * 等待框
   * @param {Object} msg 提示消息
   * @param {Boolean} [global] 全局的(启用后当多次调用本方法，只创建一个等待框)
   * @param {Object} [closeFn] 等待关闭后方法
   * @returns {waiting} h5+ 等待框
   */
  showWaiting: function showWaiting(msg, global, closeFn) {
    if (mui.os.plus) {
      var wt;

      if (global) {
        if (!JE.__waiting) {
          JE.__waiting = plus.nativeUI.showWaiting(msg, {
            padlock: true
          });
        } else {
          JE.__waiting.setTitle(msg);
        }

        wt = JE.__waiting;
        setTimeout(function () {
          if (JE.__waiting) {
            plus.nativeUI.closeWaiting();
          }
        }, 5000);
      } else {
        JE.__waiting = plus.nativeUI.showWaiting(msg, {
          padlock: true
        });
        setTimeout(function () {
          if (JE.__waiting) {
            plus.nativeUI.closeWaiting();
          }
        }, 5000);
      }

      if (closeFn && JE.isFunction(closeFn)) {
        wt.onclose = function () {
          return closeFn(wt);
        };
      }

      return wt;
    }

    return null;
  },

  /**
   * 关闭所有等待框
   * @returns {waiting} h5+ 等待框
   */
  closeWaiting: function closeWaiting() {
    delete JE.__waiting;

    if (mui.os.plus) {
      return plus.nativeUI.closeWaiting();
    }

    return null;
  },

  /**
   * 遮罩
   * @param {Boolean} visible 显隐
   * @param {String|Object} idORview 空表示当前webview
   */
  doMask: function doMask(visible, idORview) {
    var wv = plus.webview.currentWebview();

    if (idORview) {
      wv = idORview;

      if (JE.isString(idORview)) {
        wv = plus.webview.getWebviewById(idORview);
      }
    }

    wv.setStyle({
      mask: visible ? 'rgba(0,0,0,0.1)' : 'none'
    });
  },

  /**
   * 触发webview窗体事件
   * @param {String} idOrWebview  id 或者  webview对象
   * @param {String} eventName  窗体的事件
   * @param {Object} params  参数
   * @return {webview} webview
   */
  fire: function fire(idOrWebview, eventName, params) {
    var view = idOrWebview;

    if (JE.isString(idOrWebview)) {
      view = plus.webview.getWebviewById(idOrWebview);
    }

    if (view && eventName) {
      mui.fire(view, eventName, params);
    }

    return view;
  },

  /**
   * 预加载页面
   * @param {String} url 页面地址
   * @param {String} id 页面id
   */
  preloadPage: function preloadPage(url) {
    var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;
    mui.preload({
      id: id,
      url: url
    });
  },

  /**
   * 图片操作
   */
  image: {
    /**
     * 图片预览
     * @param {*} images 图片地址
     * @param {*} options 配置项
     */
    preview: function preview(images, options) {
      plus.nativeUI.previewImage(images, options);
    },

    /**
     * 拍照
     * @returns {Promise}
     */
    capture: function capture() {
      return new Promise(function (resolve, reject) {
        var cmr = plus.camera.getCamera();
        cmr.captureImage(function (file) {
          resolve(file);
        }, function (e) {
          reject(e);
        });
      });
    },

    /**
     *
     *  选择相册图片
     * @param {Boolean} [multiple] 是否多选
     * @param {Number} [maximum]  最多可选几张（默认1张如果multiple为true 默认9张 也可以自定义)
     * @returns {Promise <Array>}
     */
    pick: function pick() {
      var multiple = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var maximum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : multiple ? 9 : 1;
      return new Promise(function (resolve, reject) {
        plus.gallery.pick(function (path) {
          var files = path.files;
          resolve(files || [path]);
        }, function (e) {
          ![12].includes(e.code) && reject(e);
        }, {
          maximum: maximum,
          system: false,
          multiple: multiple,
          onmaxed: function onmaxed() {
            plus.nativeUI.toast("\u6700\u591A\u53EA\u80FD\u9009\u62E9".concat(maximum, "\u5F20\u56FE\u7247"));
          }
        });
      });
    },

    /**
     *
     *  压缩图片
     * @param {String} path 图片位置
     * @returns {Promise }
     */
    compress: function compress(path, options) {
      var uploading = options.uploading;
      return new Promise(function (resolve, reject) {
        plus.zip.compressImage({
          src: path,
          dst: "_doc/temp/".concat(+new Date(), "_").concat(Math.floor(Math.random() * 10000), ".jpg"),
          quality: 70
        }, function (_ref3) {
          var target = _ref3.target;
          uploading && uploading({
            file: Uploder.retFile({
              name: target,
              url: target,
              id: JE.uuid()
            }),
            priviewUrl: target
          });
          resolve(target);
        }, function (e) {
          JE.msg(e.message);
          reject(e);
        });
      });
    },

    /**
     * 上传
     * @param {String} path 文件路径
     * @param {Object} params 参数
     * @returns {Promise}
     */
    upload: function upload(path, params) {
      return new Promise(function (resolve, reject) {
        JE.showWaiting('上传中...');
        var url = JE.buildURL("".concat(JE.getUrlMaps('je.core.doc.new.document.file')));
        var task = plus.uploader.createUpload(url, {
          method: 'POST',
          blocksize: 204800,
          priority: 100
        }, function (uploader, status) {
          var result = JE.decode(uploader.responseText); // 上传完成

          if (status == 200) {
            // 格式化文件
            var file = result.obj[0];
            var data = Uploder.retFile({
              path: file.fileKey,
              name: file.relName,
              id: file.fileKey
            });
            resolve({
              files: [data],
              result: result
            });
          } else {
            reject(t);
          }

          JE.closeWaiting();
        });
        task.addFile(path, {
          key: 'files'
        }); // 增加参数

        JE.each(params, function (val, key) {
          task.addData(val, key);
        });
        task.setRequestHeader('authorization', JE.getLSItem('authorization')); // task.addEventListener( "statechanged", onStateChanged, false );

        task.start();
      });
    }
  },

  /**
   * 上传附件
   * @param {Object} options 上传参数
   * @param {String} options.multiple 多附件
   * @param {String} options.maximum 数量限制
   * @param {String} options.selectType 图片选择类型:all,capture(相机),pick(相册)
   * @param {String} options.params 参数
   * @param {String} options.path 上传的文件地址
   * @param {String} options.file 上传的文件流
   * @param {String} options.params 参数
   * @param {String} options.callback 单附件上传成功后回调
   * @returns {Promise} 全部附件操作成功
   */
  uploadFile: function uploadFile() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var image = this.image;
    var params = options.params || {}; // 上传参数

    if (!window.plus) {
      return Uploder.uploadFile(options);
    } // 选择文件


    if (options.selectType == 'none') {
      return image.compress(options.path, options).then(function (compressFile) {
        return image.upload(compressFile, params).then(function (obj) {
          // 上传成功
          options.callback && options.callback(obj);
          return obj;
        });
      });
    }

    return JE.selectFile(options.multiple, options.maximum, options.selectType).then(function (files) {
      var uploads = []; // 循环压缩图片，上传图片

      files.forEach(function (file) {
        uploads.push(image.compress(file, options).then(function (compressFile) {
          return image.upload(compressFile, params);
        }));
      });
      return Promise.all(uploads).then(function (_files) {
        var files = [];
        var result = null;

        _files.forEach(function (_file) {
          files.push.apply(files, (0, _toConsumableArray2["default"])(_file.files));

          if (!result) {
            result = _file.result;
          } else {
            var obj = _file.result.obj;
            result.obj.push(obj && obj[0]);
          }
        });

        options.callback && options.callback(files, result); // resolve({ files, result })
        // // 上传成功
        // options.callback && options.callback(files, result);
        // return files;
      });
    });
  },

  /**
   * 打开文件
   * @param {*} path 文件本地路径
   * @returns {Promise}
   */
  openFile: function openFile(path) {
    return new Promise(function (resolve, reject) {
      // 判断文件是否已经下载
      plus.io.resolveLocalFileSystemURL(path, function (file) {
        // 如果已存在文件，则打开文件
        if (file.isFile) {
          JE.msg('正在打开文件...');
          plus.runtime.openFile(path, reject);
          resolve();
        } else {
          // eslint-disable-next-line prefer-promise-reject-errors
          reject({
            message: '不是文件'
          });
        }
      }, reject);
    });
  },

  /**
   *  选择文件
   * @param {Boolean} [multiple] 是否多选
   * @param {Number} [maximum]  最多可选几张（默认1张如果multiple为true 默认9张 也可以自定义)
   * @param {String} [selectType] 图片选择类型:all,capture(相机),pick(相册)
   * @returns {Promise <Array>}
   */
  selectFile: function selectFile() {
    var multiple = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    var maximum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : multiple ? 9 : 1;
    var selectType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'all';
    var image = this.image;
    return new Promise(function (resolve, reject) {
      if (!mui.os.plus) {
        JE.msg('网页不支持！');
        reject();
        return;
      }

      if (selectType == 'capture') {
        image.capture().then(function (file) {
          resolve([file]);
        });
      } else if (selectType == 'pick') {
        image.pick(multiple, maximum).then(function (files) {
          resolve(files);
        });
      } else {
        JE.actionSheet('选择图片', function (e) {
          if (e.index == 1) {
            image.capture().then(function (file) {
              resolve([file]);
            });
          } else if (e.index == 2) {
            image.pick(multiple, maximum).then(function (files) {
              resolve(files);
            });
          }
        }, ['拍照', '从相册中选择图片']);
      }
    });
  },
  isJEAPP: function isJEAPP() {
    return JE.getPackageName() == 'com.je.suanbanyun';
  },

  /*
   * 打开扫描二维码页面
   */
  openBarCode: function openBarCode(callback) {
    var events = {};
    var barcode = JE.getPluginInfo('barcode');
    var webObj = plus.webview.create(barcode.page, 'barcode', {
      titleNView: {
        backgroundColor: '#536DFE',
        titleText: '扫描二维码',
        titleColor: '#fff',
        autoBackButton: true // buttons: [
        //   {
        //     text: '相册',
        //     fontSize: '17px',
        //     width: '188px',
        //     onclick() {
        //       webObj.evalJS('openGallery()');
        //     },
        //   },
        // ],

      },
      popGesture: 'hide'
    });
    var wobj = plus.nativeUI.showWaiting();
    webObj.addEventListener('loaded', function () {
      wobj.close();
      webObj.show('slide-in-right');
    });

    function handleListen(id, event) {
      if (event) {
        events[id] = event;
        window.addEventListener(id, event);
      } else if (events[id]) {
        window.removeEventListener(id, events[id]);
        delete events[id];
      }
    }

    handleListen('scanResult', function (event) {
      var result = event.detail.result;
      callback && callback(result);
      handleListen('scanResult', null);
    });
  },

  /**
   *  设置dom获得焦点，并淡出键盘
   * @param {HTMLElement} dom 焦点dom
   * @param {Boolean} [show] 显示输入键盘，默认true
   */
  showSoftInput: function showSoftInput(dom, show) {
    var obj = JE.SoftObj = JE.value(JE.SoftObj, {});

    if (mui.os.android) {
      if (!obj.InputMethodManager && !obj.imm) {
        var main = plus.android.runtimeMainActivity();
        var Context = plus.android.importClass('android.content.Context');
        obj.InputMethodManager = plus.android.importClass('android.view.inputmethod.InputMethodManager');
        obj.imm = main.getSystemService(Context.INPUT_METHOD_SERVICE);
      }
    } else if (!obj.nativeWebview) {
      obj.nativeWebview = plus.webview.currentWebview().nativeInstanceObject();
    }

    show = JE.value(show, true);

    if (mui.os.android) {
      obj.imm.toggleSoftInput(0, obj.InputMethodManager[show ? 'SHOW_FORCED' : 'HIDE_NOT_ALWAYS']);
    } else {
      obj.nativeWebview.plusCallMethod({
        setKeyboardDisplayRequiresUserAction: !show
      });
    }

    if (dom) {
      setTimeout(function () {
        // 此处可写具体逻辑设置获取焦点的input
        dom.focus();
      }, 200);
    }
  },

  /**
   * 异常修复
   * 该方法用于删除调试代码等容易因为APP打包导致的清空缓存就能解决的问题
   */
  repairError: function repairError() {
    var homePage = this.getHomePage();
    this.fire(homePage, 'repairError');
    plus.runtime.restart();
    alert('修复成功');
  }
};
exports["default"] = _default;

/***/ }),

/***/ "./src/core/je/system/push.js":
/*!************************************!*\
  !*** ./src/core/je/system/push.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _WebSocket = _interopRequireDefault(__webpack_require__(/*! ../class/WebSocket */ "./src/core/je/class/WebSocket.js"));

/**
 * 系统推送，websocket，个推
 * @module JE/push
 */
var _default = {
  /**
   * 注册websocket
   * @param {WebView} webview 页面
   * @param {Function} fn 接受消息方法
   */
  registSocket: function registSocket(webview, fn) {
    JE.fire(this.getServerPage(), 'registsocket', webview.id);
    window.addEventListener('socketonmessage', function (target) {
      var message = target.detail;
      fn && fn(message);
    });
  },

  /**
   * 重连socket
   */
  reconnectSocket: function reconnectSocket() {
    JE.fireServerAction('reconnectSocket');
  },

  /**
   * 发送消息
   * @param {Object} message 消息体
   */
  sendSocket: function sendSocket(message) {
    JE.fire(this.getServerPage(), 'sendsocket', message);
  },

  /**
   * 创建WebSocket
   * @param {Boolean} [reset] 重新创建websocket
   * @returns {WebSocket}
   */
  createSocket: function createSocket() {
    JE.WebSocket = JE.WebSocket || new _WebSocket["default"]();

    if (!JE.WebSocketEvent) {
      // 注册socket,收到消息后出发socketonmessage
      window.addEventListener('registsocket', function () {
        var webviewId = window.event.detail;

        if (webviewId) {
          var webview = plus.webview.getWebviewById(webviewId);
          JE.WebSocket.webviews[webview.id] = webview;
        }
      });
      window.addEventListener('sendsocket', function () {
        var message = window.event.detail;
        JE.WebSocket.send('message', message);
      });
      JE.WebSocketEvent = true;
    }

    return JE.WebSocket;
  },

  /**
   * 推送信息
   * @param {String} key 键
   * @returns {String}
   */
  getPushInfo: function getPushInfo(key) {
    var info = {};

    if (mui.os.plus && JE.hasPlusSDK('Push')) {
      info = JE.value(plus.push.getClientInfo(), {});
    }

    if (JE.isEmpty(key)) {
      return info;
    }

    return JE.value(info[key], '');
  },

  /**
   * 推送
   * 1.每个app需要注册apppush事件
   * 2.根据推送的消息，触发app的推送事件，然后根据推送的数据，执行apppush事件里的方法
   */
  push: {
    /**
     * 推送消息
     * @param {Object} msg 消息
     * @param {Object} msg.title 标题
     * @param {Object} msg.content 内容
     * @param {Object} msg.payload 参数，json对象
     * @param {Object} msg.type 通知类型
     * @param {Object} callback 回调函数
     *
      JE.push.send({
        title:'',//标题
        content:'',//消息内容
        payload:{//参数
          app:'',//提醒打开的功能编码
          params:{}//传递给功能的参数，用于收到消息后的操作
        },
        type:''//消息类型，暂时没用
      },function(obj){
        //回调函数，obj为服务器返回的数据
      });
     */
    send: function send(msg, _callback) {
      // 后台请求推送，带上默认参数
      if (!JE.hasPlusSDK('Push')) {
        JE.msg('未配置推送模块，无法推送！');
        return;
      }

      var clientInfo = JE.getPushInfo();
      clientInfo.os = plus.os.name;
      var payload = msg.payload || {};
      msg.payload = JE.encode(payload);
      msg.apkCode = JE.getLSItem('apkCode');
      JE.apply(msg, clientInfo);
      JE.ajax({
        // url:'je/appAction!push.action',
        url: JE.getUrlMaps('je.core.phone.app.push'),
        params: msg,
        callback: function callback(success, obj) {
          if (_callback) {
            _callback(obj);
          }
        }
      });
    },

    /**
     * 接收推送消息
     * @param {Object} msg 消息
     * @param {Object} newMsg 消息
     */
    receive: function receive(msg, newMsg) {
      /* var payload = {
        app:'',//app编码
        homePage:'',//首页
        viewId:'',//视图id
        params:{}//参数
      }; */
      if (!JE.hasPlusSDK('Push')) {
        return;
      } //      JE.alert(JE.encode(msg),null,'msg');


      var data;

      if (msg.arguments) {
        data = JSON.parse(msg.arguments);
      }

      var _ref = data || msg,
          payload = _ref.payload;

      payload = JE.isString(payload) ? JE.decode(JE.value(payload, '{}')) : payload; // ios 离线消息（aps）接收到的数据为 payload={payload:{},...},payload为字符串

      payload = JE.value(payload.payload, payload);
      payload = JE.isString(payload) ? JE.decode(payload) : payload; // 本地创建的消息，不操作

      if (newMsg && payload._msgType == 'LOCAL') {
        return;
      } // 推送人


      var serverCfg = payload.cfg;

      if (serverCfg) {} // 推送的apk不对，取消操作
      // const apkCode = JE.getLSItem('apkCode');
      // if (serverCfg.apkCode != apkCode) {
      // if (msg.type == 'click' || newMsg != true) {
      //   JE.alert('非该APP消息，无法查看！');
      //   return;
      // }
      // } // 不是本人，取消操作
      // const { userId } = JE.getCurrentUser();
      // if (['USERID', 'USERIDS'].indexOf(serverCfg.type) != -1 && serverCfg.userId != userId) {
      //   if (msg.type == 'click' || newMsg != true) {
      //     JE.alert('非本人消息，无法查看！');
      //   }
      //   return;
      // }
      // 创建本地消息,如果没有内容，不创建，进行业务操作


      if (newMsg && serverCfg && serverCfg.createMsg) {
        payload._msgType = 'LOCAL'; // ios payload必须为字符串，否则click接收到的payload为空

        var payloadStr = JE.encode(payload);
        var appStatus = plus.storage.getItem('appStatus');

        if (appStatus - 0) {
          plus.push.createMessage(payload.content, payloadStr, {
            title: msg.title,
            cover: false
          });
        }

        return;
      }

      var params = payload.params || {}; // 参数

      var app = window.APP.apps[payload.app]; // 打开app，操作app里面的业务

      if (app) {
        var _payload = payload,
            homePage = _payload.homePage;
        var _payload2 = payload,
            viewId = _payload2.viewId;
        window.APP.app.openApp({
          code: app.APP_CODE,
          text: app.APP_TEXT,
          version: app.APP_VERSION,
          type: app.APP_TYPE,
          homePage: homePage,
          params: {
            viewId: viewId,
            callback: function callback(wv) {
              JE.fire(wv.id, 'apppush', params);
            }
          }
        });
      } else if (payload.app == '__homeview') {
        // 首页操作
        var home = plus.webview.getLaunchWebview();
        JE.fire(home, 'apppush', params);
      }
    }
  },

  /**
   * 推送消息
   * @param {Object} msg 消息
   * @param {Object} msg.title 标题
   * @param {Object} msg.content 内容
   * @param {Object} msg.payload 参数，json对象
   * @param {Object} msg.type 通知类型
   * @param {Object} callback 回调函数
   *
    JE.pushMsg({
      title:'',//标题
      content:'',//消息内容
      payload:{//参数
        app:'',//提醒打开的功能编码
        params:{}//传递给功能的参数，用于收到消息后的操作
      },
      type:''//消息类型，暂时没用
    },function(obj){
      //回调函数，obj为服务器返回的数据
    });
   */
  pushMsg: function pushMsg(msg, callback) {
    JE.push.send(msg, callback);
  }
};
exports["default"] = _default;

/***/ }),

/***/ "./src/core/je/system/sql.js":
/*!***********************************!*\
  !*** ./src/core/je/system/sql.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildWhereSql = buildWhereSql;
exports.getFuncPermSql = getFuncPermSql;

var _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/regenerator/index.js"));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/asyncToGenerator.js"));

/**
 * 平台sql类.
 * @module JE/sql
 */

/**
  * 拼装whereSql
  * @param {Object} field 字段配置
  * @param {String} field.code 字段编码
  * @param {String} field.type 条件符 =/like/in...
  * @param {String} field.value 过滤条件
  * @param {String} [cn] 连接符 and/or 默认and
  * @return {String} whereSql 拼装好的sql
*/
// eslint-disable-next-line import/prefer-default-export
function buildWhereSql(field, cn) {
  var whereSql = '';
  cn = JE.value(cn, 'and');
  if (JE.isEmpty(field)) return whereSql;

  if (JE.isArray(field)) {
    var sqls = [];
    JE.each(field, function (f) {
      sqls.push(JE.buildWhereSql(f));
    });

    if (!JE.isEmpty(sqls)) {
      whereSql = " and (".concat(sqls.join(" ".concat(cn, " ")), ")");
    }
  } else {
    var value = JE.value(field.value, '');
    var type = JE.value(field.type, '=').toUpperCase().trim(); // 自定义sql

    if (type == 'IDIT') {
      return " 1=1 ".concat(JE.value(field.sql, ''));
    } // 普通sql
    // eslint-disable-next-line default-case


    switch (type) {
      case 'IN':
      case 'NOT IN':
        if (typeof value == 'string') {
          value = value.split(',');
        } // 解决当in里的值超过1000出错


        if (value.length >= 1000) {
          // eslint-disable-next-line radix
          var count = parseInt(value.length / 999);
          var yu = value.length % 999;
          count += yu > 0 ? 1 : 0;
          var _sqls = [];

          for (var i = 0; i < count; i++) {
            var array = [];

            if (value.length < 1000) {
              array = value;
            } else {
              array = value.splice(0, 999);
            }

            _sqls.push("".concat(field.code, " ").concat(type, " ('").concat(array.join("','"), "')"));
          }

          whereSql = "(".concat(_sqls.join(' or '), ")");
          return whereSql;
        }

        value = "('".concat(value.join("','"), "') ");
        break;

      case 'LIKE':
        if (field.before) {
          value = "'%".concat(value, "'");
        } else if (field.after) {
          value = "'".concat(value, "%'");
        } else {
          value = "'%".concat(value, "%'");
        }

        break;

      case 'LIKE%':
        value = "'".concat(value, "%'");
        break;

      case 'BETWEEN':
        value = "'".concat(value[0], "' and '").concat(value[1], "'");
        break;

      case 'IS':
        value = value == null ? 'NULL' : value;
        break;

      case 'IS NOT':
        value = value == null ? 'NULL' : value;
        break;

      case '=':
        value = JE.isNumber(value) ? value : "'".concat(value, "'");
        break;
    }

    whereSql = " ".concat(field.code, " ").concat(type, " ").concat(value);
  }

  return whereSql;
}
/**
 *获取功能权限sql
 * @param {string} funcCode 功能code
 * @param {string} funcId 功能Id
 */


function getFuncPermSql(_x) {
  return _getFuncPermSql.apply(this, arguments);
}

function _getFuncPermSql() {
  _getFuncPermSql = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee(funcCode) {
    var funcPerm, permInfo, currentUser, companyPerm, sqls, companySqls, userField, deptField, sqlVal, notPermSql, useCj, cjObj, flag, _flag, permSql;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            /* -----------------sql权限------------------*/
            funcPerm = {};
            permInfo = {};
            _context.next = 4;
            return JE.ajax({
              url: '/je/staticize/staticize/loadStaticize',
              params: {
                type: 'FUNCPERM',
                funcCode: funcCode,
                refresh: '0'
              },
              async: false
            });

          case 4:
            permInfo = _context.sent;

            if (!JE.isEmpty(permInfo)) {
              _context.next = 7;
              break;
            }

            return _context.abrupt("return");

          case 7:
            permInfo.seeUsers = permInfo.seeUserIds; // 可见用户id

            permInfo.seeDepts = permInfo.seeDeptIds; // 可见部门id

            permInfo.seeRoles = permInfo.seeRoleIds; // 可见角色id

            permInfo.seeSentrys = permInfo.seeSentryIds; // 可见岗位id

            permInfo.seePermSql = permInfo.permSql; // sql

            permInfo.otherPerm = permInfo.permConfig; // 其他数据权限

            permInfo.userField = permInfo.userField;
            permInfo.deptField = permInfo.deptField;
            permInfo.permJs = permInfo.permJs; // var funcPerm = appInfo.permInfo;

            currentUser = JE.getCurrentUser();
            companyPerm = funcPerm.companyPerm;
            sqls = [];
            companySqls = []; // 处理数据权限

            userField = 'SY_CREATEUSERID';
            deptField = 'SY_CREATEORGID';

            if (JE.isNotEmpty(permInfo.userField)) {
              userField = permInfo.userField;
            }

            if (JE.isNotEmpty(permInfo.deptField)) {
              deptField = permInfo.deptField;
            }

            permInfo.otherPerm = JE.value(permInfo.permConfig, []); // appInfo.permInfo.permSql = '';
            // 本人修改本人   赋值为权限信息， 在点击保存按钮做修改操作判断一下创建的ID SY_CREATEUSERID是否等于当前登录人

            permInfo.selfUpdate = permInfo.otherPerm.indexOf('SELF_UPDATE') != -1; // 本人删除本人   赋值为权限信息， 在点击保存按钮做删除操作判断一下创建的ID SY_CREATEUSERID是否等于当前登录人

            permInfo.selfDelete = permInfo.otherPerm.indexOf('SELF_DELETE', '') != -1;

            if (JE.isNotEmpty(permInfo.seePermSql)) {
              sqls.push(" (1=1 ".concat(permInfo.seePermSql, " ) "));
            }

            if (JE.isNotEmpty(permInfo.permJs)) {
              if (JE.isNotEmpty(JE.eval(permInfo.permJs)())) {
                sqlVal = JE.eval(permInfo.permJs);

                if (JE.isNotEmpty(sqlVal)) {
                  sqls.push(" (1=1 ".concat(sqlVal(), " ) "));
                }
              }
            } // 设定返回标识，该值为true的时候不处理sql的条件


            notPermSql = false;
            useCj = false;
            cjObj = {};

            if (JE.isNotEmpty(permInfo.useCjgls)) {
              useCj = true;
            } // 可见人员


            if (JE.isNotEmpty(permInfo.seeUsers) && permInfo.seeUsers.indexOf(currentUser.userId) != -1) {
              sqls.push(' 1=1 ');
              notPermSql = true;
            } // deptId	部门id   可见部门


            if (JE.isNotEmpty(permInfo.seeDepts) && permInfo.seeDepts.indexOf(currentUser.deptId) != -1) {
              sqls.push(' 1=1 ');
              notPermSql = true;
            } // 可见角色


            if (JE.isNotEmpty(permInfo.seeRoles)) {
              flag = false;
              JE.each(currentUser.roles, function (r) {
                JE.each(permInfo.seeRoles, function (seeRoleId) {
                  if (JE.isEmpty(seeRoleId)) return;

                  if (JE.isNotEmpty(r.baseRoleId) && r.baseRoleId == seeRoleId || r.roleId == seeRoleId) {
                    flag = true;
                    return false;
                  }
                });

                if (flag) {
                  return false;
                }
              });

              if (flag) {
                sqls.push(' 1=1 ');
                notPermSql = true;
              }
            } // sentryIds	岗位id 可见岗位


            if (JE.isNotEmpty(permInfo.seeSentrys)) {
              _flag = false;
              JE.each(JE.getCurrentUser().sentrys, function (sentry) {
                JE.each(permInfo.seeSentrys, function (seeSentryId) {
                  if (JE.isEmpty(seeSentryId)) return;

                  if (sentry.sentryId == seeSentryId) {
                    _flag = true;
                    return false;
                  }
                });

                if (_flag) {
                  return false;
                }
              });

              if (_flag) {
                sqls.push(' 1=1 ');
                notPermSql = true;
              }
            }

            if (!notPermSql && JE.isNotEmpty(permInfo.otherPerm)) {
              JE.each(permInfo.otherPerm, function (p) {
                var sql = ''; // eslint-disable-next-line default-case

                switch (p) {
                  case 'SELF_CREATE':
                    // 本人看本人
                    sql = " ".concat(userField, " = '{@USER_ID@}'");
                    break;

                  case 'LEAD_DEPT':
                    // 主管领导
                    sql = " ".concat(userField, " IN ('").concat(currentUser.branchInfo.zgUserIds.join("','"), "') ");
                    break;

                  case 'SELF_ZSDEPT':
                    // 直属领导
                    sql = " ".concat(userField, " IN ('").concat(currentUser.branchInfo.zsUserIds.join("','"), "') ");
                    break;

                  case 'SELF_FZRDEPT':
                    // 部门负责人
                    sql = " ".concat(userField, " IN ('").concat(currentUser.branchInfo.fzrUserIds.join("','"), "') ");
                    break;

                  case 'MONITOR_DEPT':
                    // 监管部门可见
                    sql = " ".concat(userField, " IN ('").concat(currentUser.branchInfo.jgUserIds.join("','"), "') ");
                    break;

                  case 'SELF_DEPT':
                    // 本部门可见
                    sql = " ".concat(deptField, " ='{@DEPT_ID@}' ");
                    break;

                  case 'WF_PREAPPROV':
                    // 待审批可见
                    sql = " SY_PREAPPROVUSERS like '%{@USER_ID@}%'";
                    break;

                  case 'WF_APPROVED':
                    // 审批后可见
                    sql = " SY_APPROVEDUSERS like '%{@USER_ID@}%'";
                    break;

                  case 'SELF_COMPANY':
                    // 公司内可见
                    // 拿到登录用户部门ID
                    sqls.push(" SY_JTGSID = '{@USER_JTGSID@}'");
                    break;

                  case 'MONITOR_COMPANY':
                    // 公司监管可见
                    var gsjgSqls = companyPerm.MONITOR_COMPANY;

                    if (JE.isNotEmpty(gsjgSqls)) {
                      sqls.push(gsjgSqls);
                    }

                    break;

                  case 'MONITOR_COMPANY_DEPT':
                    // 公司监管可见
                    var gsjgSql = companyPerm.MONITOR_COMPANY_DEPT;

                    if (JE.isNotEmpty(gsjgSql)) {
                      sqls.push(gsjgSql);
                    }

                    break;
                }

                if (!JE.isEmpty(sql)) {
                  sqls.push(sql);
                }
              });
            } // 处理数据权限的覆盖

            /* if (JE.isNotEmpty(permInfo.querySql)) {
              // 覆盖sql
              if (permInfo.sqlOverwrite) {
                appInfo.whereSql = permInfo.querySql;
              } else {
                appInfo.whereSql += ` ${permInfo.querySql}`;
              }
            } */


            permSql = '';

            if (!JE.isEmpty(sqls)) {
              permSql += " and (".concat(sqls.join(' or '), ")");
            }

            permSql = JE.toXT(permSql);
            return _context.abrupt("return", permSql);

          case 42:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _getFuncPermSql.apply(this, arguments);
}

/***/ }),

/***/ "./src/core/je/system/system.js":
/*!**************************************!*\
  !*** ./src/core/je/system/system.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/defineProperty.js"));

var _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/regenerator/index.js"));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/asyncToGenerator.js"));

var _des = __webpack_require__(/*! ./des */ "./src/core/je/system/des.js");

var _config = _interopRequireDefault(__webpack_require__(/*! ./config */ "./src/core/je/system/config.js"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * 系统工具类.
 * @module JE/system
 */
var _default = {
  /**
   * 插件信息
   * @param {String} code 系统插件编码
   * @returns {Object} 插件信息
   */
  getPluginInfo: function getPluginInfo(code) {
    return _config["default"].pages[code];
  },

  /**
   *  注册角标提醒
   * @param {*} fn 回调函数
   */
  registBadge: function registBadge(fn) {
    window.addEventListener("badgerefresh", function (target) {
      var badges = target.detail.badges || [];
      var refreshList = target.detail.refreshList || [];
      fn && fn(badges, refreshList);
    });
  },

  /**
   * 加密
   * @param {String} str 加密字符串
   * @return {String}
   */
  DES: function DES(str) {
    var sysConfig = JE.getSystemConfig();

    if (sysConfig.JE_SYS_ENCRYPT != "1") {
      return str;
    }

    var key1 = "PCAT1";
    var key2 = "PCAT2";
    var key3 = "PCAT3";

    if (JE.isNotEmpty(sysConfig.JE_SYS_ENCRYPT_KEY1)) {
      key1 = sysConfig.JE_SYS_ENCRYPT_KEY1;
    }

    if (JE.isNotEmpty(sysConfig.JE_SYS_ENCRYPT_KEY2)) {
      key2 = sysConfig.JE_SYS_ENCRYPT_KEY2;
    }

    if (JE.isNotEmpty(sysConfig.JE_SYS_ENCRYPT_KEY3)) {
      key3 = sysConfig.JE_SYS_ENCRYPT_KEY3;
    }

    if (JE.isObject(str) || JE.isElement(str)) {
      var obj = JE.clone(str);
      var reg = "abcdefghigklmnopqrstuvwxyz";
      var keys = []; // 加密的字段

      var fields = ["whereSql", "orderSql", "tableCode"];

      if (JE.isNotEmpty(sysConfig.JE_SYS_ENCRYPT_FIELD)) {
        fields = JE.split(sysConfig.JE_SYS_ENCRYPT_FIELD, ",");
      }

      JE.each(fields, function (field) {
        var key;

        while (!key || keys.indexOf(key) != -1) {
          var index = JE.random(23);
          key = reg.substring(index, index + 1);
        }

        keys.push(key); // form表单

        if (JE.isElement(obj) && obj.nodeName == "FORM") {
          var form = obj;

          if (form[field]) {
            // 增加表单项
            var hiddenItem = document.createElement("input");
            hiddenItem.setAttribute("type", "hidden");
            hiddenItem.setAttribute("value", JE.DES(form[field].value));
            hiddenItem.setAttribute("name", key);
            form[field].setAttribute("disable", "disable");
            form.appendChild(hiddenItem);
          }
        } else if (obj.hasOwnProperty(field)) {
          obj[key] = JE.DES(obj[field]);
          delete obj[field];
        }
      }); // 将参数进行浅拷贝，最后返回给AJAX调用时候取的是新的obj对象

      return {
        code: "params-keys",
        value: keys.join(","),
        data: obj,
        _dessuccess: true
      };
    }

    return (0, _des.strEncode)(str, key1, key2, key3);
  },

  /**
   * 获得服务器地址
   * @returns {String}
   */
  getServerPath: function getServerPath() {
    var serverPath = window.ServerPath || JE.getLSItem("ServerPath") || "";
    return normalizeServerPath(serverPath);
  },

  /**
   * 设置服务器地址
   * @param {String} url 服务器地址
   */
  setServerPath: function setServerPath(url) {
    JE.setLSItem("ServerPath", normalizeServerPath(url));
  },

  /**
   * 解析地址
   * @param {String} url url地址
   * @param {Object} params 参数
   * @returns {String}
   */
  buildURL: function buildURL(url) {
    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    // 外网链接参数自己拼装
    if (JE.isEmpty(url) || url.indexOf("http://") != -1 || url.indexOf("https://") != -1) {
      return url;
    }

    var server = JE.getServerPath() || "http://".concat(window.location.host);

    if (url.indexOf("/") == 0) {
      url = url.substring(1);
    }

    url = "".concat(server, "/").concat(url); // tooken

    params.authorization = JE.getLSItem("authorization");

    if (JE.isNotEmpty(params)) {
      var ps = [];
      JE.iterate(params, function (key, val) {
        ps.push("".concat(key, "=").concat(val));
      });
      url += (url.indexOf("?") == -1 ? "?" : "&") + ps.join("&");
    }

    return url;
  },

  /**
   * 获得文件路径
   * @param {String} url 文件路径
   * @param {String} type 文件类型
   * @param {String} docType 文件类型
   * @param {String} pkValue 主键
   * @returns {String} 格式化后的路径
   */
  getFileUrl: function getFileUrl(key) {
    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "down";
    var url = "".concat(JE.getUrlMaps("je.core.doc.new.document.".concat(type)), "?fileKey=").concat(key);
    return JE.buildURL(url);
    /* let config = {};
    if (JE.isString(_url)) {
      config = { url: _url };
    } else {
      config = _url;
    }
    config.type = config.type || 'PROJECT';
      const {
      url, type, docType, pkValue, beanTableCode,
    } = config;
      if (!url && !pkValue) {
      return url;
    }
    const actVals = [];
    if (JE.isNotEmpty(beanTableCode)) {
      actVals.push(`beanTableCode=${beanTableCode}`);
    }
    if (JE.isNotEmpty(type)) {
      actVals.push(`jeFileType=${type}`);
    }
    if (JE.isNotEmpty(docType)) {
      actVals.push(`type=${docType}`);
    }
    if (JE.isNotEmpty(pkValue)) {
      actVals.push(`pkValue=${pkValue}`);
    }
    if (JE.isNotEmpty(url)) {
      actVals.push(`path=${url}`);
    }
    const readUrl = JE.getUrlMaps('je.core.doc.document', 'doLoadFile');
    let fileAction = readUrl;
    if (actVals.length > 0) {
      fileAction = `${readUrl}?${actVals.join('&')}`;
    }
    return fileAction; */
  },

  /**
   * 初始化系统数据
   */
  initSysData: function () {
    var _initSysData = (0, _asyncToGenerator2["default"])(
    /*#__PURE__*/
    _regenerator["default"].mark(function _callee() {
      return _regenerator["default"].wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return JE.setSystemConfig();

            case 2:
              _context.next = 4;
              return JE.setCurrentUser();

            case 4:
              _context.next = 6;
              return JE.setUsers();

            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    function initSysData() {
      return _initSysData.apply(this, arguments);
    }

    return initSysData;
  }(),

  /**
   *设置系统变量，如果为空，初始化
   * @param {String} key 键
   * @param {String} val 值
   */
  setSystemConfig: function () {
    var _setSystemConfig = (0, _asyncToGenerator2["default"])(
    /*#__PURE__*/
    _regenerator["default"].mark(function _callee2(key, val) {
      var _key, obj, cfg;

      return _regenerator["default"].wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _key = "_system_config_";

              if (!JE.isEmpty(key)) {
                _context2.next = 8;
                break;
              }

              _context2.next = 4;
              return JE.ajax({
                url: JE.getUrlMaps("je.core.sys.config", "loadSysVariables"),
                async: false
              });

            case 4:
              obj = _context2.sent;
              JE.setLSItem(_key, JE.encode(obj.obj));
              _context2.next = 9;
              break;

            case 8:
              if (JE.isObject(key)) {
                JE.setLSItem(_key, JE.encode(key));
              } else {
                cfg = JE.getSystemConfig();
                cfg[key] = val;
                JE.setLSItem(_key, JE.encode(cfg));
              }

            case 9:
              delete JE.systemConfig;
              JE.fireServerAction("clearCache");

            case 11:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    function setSystemConfig(_x, _x2) {
      return _setSystemConfig.apply(this, arguments);
    }

    return setSystemConfig;
  }(),

  /**
   * 获取登录前需要的系统变量
   * @param key 以，分割的字符串
   * @return {Promise<void>}
   */
  getSysConfBeforeLogin: function getSysConfBeforeLogin(key) {
    if (!key) {
      return;
    }

    return new Promise(function (resolve) {
      var _key = "_system_config_";
      JE.ajax({
        url: "/je/product/paas/configuration/getSysConfigInfo",
        data: {
          key: key
        },
        async: false
      }).then(function (obj) {
        JE.setLSItem(_key, JE.encode(obj.obj));
        resolve();
      })["catch"](function (e) {
        var message = ["方法：【APP.system.getSysConfBeforeLogin】", "\u670D\u52A1\uFF1A\u3010".concat(JE.getServerPath(), "\u3011"), "链接：【/je/product/paas/configuration/getSysConfigInfo】", "\u53C2\u6570\uFF1A\u3010".concat(JE.encode(key), "\u3011"), "\u9519\u8BEF\u4FE1\u606F\uFF1A".concat(JSON.stringify(e))].join("\n");
        console.log(message);
        JE.logger(message, "error");
        resolve();
      });
    });
  },

  /**
   * 获取系统变量
   * @param {String} key 键
   * @returns {String}
   */
  getSystemConfig: function getSystemConfig(key) {
    var _key = "_system_config_";

    if (JE.isEmpty(JE.systemConfig)) {
      JE.systemConfig = JE.decode(JE.getLSItem(_key) || "{}");
    }

    return key ? JE.systemConfig[key] : JE.systemConfig;
  },

  /**
   *更新用户
   * @param {Object} user 用户数据
   */
  setCurrentUser: function () {
    var _setCurrentUser = (0, _asyncToGenerator2["default"])(
    /*#__PURE__*/
    _regenerator["default"].mark(function _callee3(user) {
      var key;
      return _regenerator["default"].wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              key = "_current_user_";
              delete JE.USER;

              if (!JE.isEmpty(user)) {
                _context3.next = 6;
                break;
              }

              _context3.next = 5;
              return JE.ajax({
                url: JE.getUrlMaps("je.core.rbac.user.getCurrentUserInfo"),
                async: false
              });

            case 5:
              user = _context3.sent;

            case 6:
              JE.setLSItem(key, JE.encode(user));
              JE.fireServerAction("clearCache");

            case 8:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    function setCurrentUser(_x3) {
      return _setCurrentUser.apply(this, arguments);
    }

    return setCurrentUser;
  }(),

  /**
   * 获取当前用户
   * @returns {Object} 当前用户信息
   */
  getCurrentUser: function getCurrentUser() {
    var key = "_current_user_";

    if (JE.isEmpty(JE.USER)) {
      JE.USER = JE.decode(JE.getLSItem(key) || "{}");
    }

    return JE.USER;
  },

  /**
   * 更新用户信息
   * @param {Object} [user] 用户信息,如果空，初始化数据
   * @param {Boolean} [all] 全部数据
   */
  setUsers: function () {
    var _setUsers = (0, _asyncToGenerator2["default"])(
    /*#__PURE__*/
    _regenerator["default"].mark(function _callee4(user, all) {
      var key, users, _users, _users2, _users3;

      return _regenerator["default"].wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              key = "_users_";

              if (!JE.isEmpty(user)) {
                _context4.next = 10;
                break;
              }

              _context4.next = 4;
              return JE.ajax({
                url: JE.getUrlMaps("je.core.rbac.user.loadUserInfo"),
                async: false
              });

            case 4:
              users = _context4.sent;
              _users = {};
              JE.each(users, function (item) {
                _users[item.USERID] = _users[item.USERCODE] = {
                  id: item.USERID,
                  code: item.USERCODE,
                  name: item.USERNAME,
                  photo: item.PHOTO,
                  photoUrl: item.PHOTOURL
                };
              });
              JE.setLSItem(key, JE.encode(_users));
              _context4.next = 11;
              break;

            case 10:
              if (user && all) {
                _users2 = {};
                JE.each(user, function (item) {
                  _users2[item.USERID] = _users2[item.USERCODE] = {
                    id: item.USERID,
                    code: item.USERCODE,
                    name: item.USERNAME,
                    photo: item.PHOTO,
                    photoUrl: item.PHOTOURL
                  };
                });
                JE.setLSItem(key, JE.encode(_users2));
              } else {
                _users3 = JE.getUsers();
                _users3[user.id] = _users3[user.code] = user;
                JE.setLSItem(key, JE.encode(_users3));
              }

            case 11:
              delete JE.USERS;
              JE.fireServerAction("clearCache");

            case 13:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));

    function setUsers(_x4, _x5) {
      return _setUsers.apply(this, arguments);
    }

    return setUsers;
  }(),

  /**
   * 获得用户信息
   * @param {String} key 用户id或者code
   * @returns {Object}
   */
  getUsers: function getUsers(key) {
    var _key = "_users_";

    if (!JE.USERS) {
      JE.USERS = JE.decode(JE.getLSItem(_key) || "{}");
    }

    return key ? JE.USERS[key] : JE.USERS;
  },

  /**
   * 清除缓存
   */
  clearCache: function clearCache() {
    delete JE.USER;
    delete JE.USERS;
    delete JE.systemConfig;
  },

  /**
   * 用户头像
   * @param {String} codeOrId 用户编码或ID,如果空，默认当前用户
   * @param {Boolean} [useHtml] 使用html模板
   * @param {Boolean} [text] 想要显示的名字文本
   * @returns {String}
   */
  getUserPhoto: function getUserPhoto(codeOrId, useHtml) {
    var text = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";

    if (JE.isBoolean(codeOrId)) {
      useHtml = codeOrId;
      codeOrId = "";
    }

    codeOrId = JE.value(codeOrId, JE.getCurrentUser().userId);
    var user = JE.getUsers(codeOrId) || {};
    var photo = user.photoUrl;

    if (!photo && user.photo) {
      // eslint-disable-next-line prefer-destructuring
      photo = JE.split(user.photo, "*")[1]; // PHOTOURL

      photo = photo.indexOf("data:image/") == 0 ? photo : JE.getFileUrl(photo);
    }

    if (useHtml) {
      if (JE.isNotEmpty(photo)) {
        return "<img class=\"je-user-photo photo-img\" src=\"".concat(photo, "\">");
      }

      var name = user.name || text || "";
      name = name.length > 2 ? name.substring(name.length - 2) : name;
      return "<div class=\"je-user-photo photo-text\">".concat(name, "</div>");
    }

    return photo;
  },

  /**
   * 获得功能操作数据的所有url
   *
   * @param {String} action 功能action路径
   * @return {Object} urls
   */
  getActionUrls: function getActionUrls(action) {
    // action = JE.value(action,'/je/dynaAction');
    action = JE.value(action, JE.getUrlMaps("je.core")); // return {
    //   load: action+'!load.action',
    //     save  : action+'!doSave.action',
    //     update  : action+'!doUpdate.action',
    //     copy : action+'!doCopy.action',
    //     remove  : action+'!doRemove.action',
    //     disable  : action+'!doDisable.action',
    //     updateList : action+'!doUpdateList.action',
    //     insertUpdateList : action+'!doInsertUpdateList.action'
    // };

    return {
      load: action + JE.getUrlMaps("load"),
      save: action + JE.getUrlMaps("save"),
      update: action + JE.getUrlMaps("update"),
      copy: action + JE.getUrlMaps("copy"),
      remove: action + JE.getUrlMaps("remove"),
      disable: action + JE.getUrlMaps("disable"),
      updateList: action + JE.getUrlMaps("updateList"),
      insertUpdateList: action + JE.getUrlMaps("insertUpdateList")
    };
  },

  /**
   * APKID
   * @returns {String}
   */
  getApkID: function getApkID() {
    return JE.getLSItem("apkId");
  },
  setApkID: function setApkID(apkId) {
    return JE.setLSItem("apkId", apkId);
  },
  getApkCode: function getApkCode() {
    return JE.getLSItem("apkCode");
  },
  setApkCode: function setApkCode(apkCode) {
    return JE.setLSItem("apkCode", apkCode);
  },
  getApkName: function getApkName() {
    return JE.getLSItem("apkName");
  },
  setApkName: function setApkName(apkName) {
    return JE.setLSItem("apkName", apkName);
  },

  /**
   * 获得版本号
   * @param {String} type 版本类型
   * @param {String} [app] appCode
   * @returns {String}
   */
  getVersion: function getVersion(type, app) {
    // 单个插件版本
    if (type == "app") {
      var apkCode = JE.getApkCode();
      var versions = JE.decode(JE.getLSItem("".concat(apkCode, "_app_versions")) || "{}");
      return app ? versions[app] : versions;
    } // 内部版本


    if (type == "inner") {
      return JE.getLSItem("version_inner");
    } // 平台依赖版本


    if (type == "je") {
      return JE.getLSItem("version_je");
    } // app版本


    return window.plus && window.plus.runtime.version;
  },

  /**
   * 设置版本号
   * @param {String} type 版本类型
   * @param {String} code 版本号
   * @param {String} [app] appCode
   */
  setVersion: function setVersion(type, code, app) {
    if (type == "app") {
      var apkCode = JE.getApkCode();
      var versions = JE.getVersion("app");

      if (JE.isObject(code)) {
        JE.iterate(code, function (key, val) {
          versions[key] = val;
        });
      } else {
        versions[app] = code;
      }

      JE.setLSItem("".concat(apkCode, "_app_versions"), JE.encode(versions));
    } else if (type == "inner") {
      JE.setLSItem("version_inner", code);
    } else if (type == "je") {
      JE.setLSItem("version_je", code);
    }
  },

  /**
   * 个推的客户端ID
   * @returns {String}
   */
  getCID: function getCID() {
    return JE.getLSItem("clientID") || (plus.push.getClientInfo() || {}).clientid;
  },

  /**
   * 系统日志
   * @example
   *    JE.logger('日志信息');
   *    JE.logger(['错误信息','错误信息2'],'error');
   * @param {String|Array} message 日志消息，如果是数组形式，将会以\n组成新的字符串
   * @param {String} [type] 日志类型 info,warning,error,debug
   * @param {Object} [params] 自定义参数
   * @returns {Promise}
   */
  logger: function logger(message) {
    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "info";
    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var log = {
      apkCode: JE.getApkCode(),
      // appid
      apkName: JE.getApkName(),
      // 应用名
      "package": JE.getPackageName(),
      // 包名
      server: JE.getServerPath(),
      // 服务地址
      jeVersion: JE.getVersion("je"),
      // 平台版本
      innerVersion: JE.getVersion("inner"),
      // 增量包版本
      apkVersion: JE.getVersion(),
      // 软件版本
      os: plus.os.name,
      // 操作
      model: plus.device.model,
      // 手机型号
      vendor: plus.device.vendor,
      // 手机厂商
      cid: JE.getCID(),
      // 客户端id
      time: new Date().getTime(),
      // 时间
      type: type // 日志类型 info,warning,error,debug

    }; // 用户信息

    var user = JE.getCurrentUser();

    if (JE.isNotEmpty(user)) {
      JE.apply(log, {
        userId: user.userId,
        // 用户id
        userName: user.username,
        // 用户名称
        userCode: user.userCode,
        // 用户编码
        zhId: user.zhId,
        // 租户id
        zhMc: user.zhMc,
        // 租户名称
        zhDs: user.zhDs // 租户数据源

      });
    } // 覆盖参数


    JE.apply(log, params); // 获取设备id

    var sendLog = new Promise(function (resolve) {
      if (plus.device.getInfo) {
        plus.device.getInfo({
          success: function success(deviceInfo) {
            resolve(deviceInfo.uuid);
          },
          fail: function fail() {
            resolve();
          }
        });
      } else {
        resolve(plus.device.uuid);
      }
    }); // 执行

    return sendLog.then(function (uuid) {
      log.cid = uuid || log.cid;

      if (message) {
        log.message = JE.isArray(message) ? message.join("\n") : message; // 输出错误日志

        if (type == "error") {
          JE.log(log.message);
        }

        return JE.ajax({
          url: "/je/product/app/logger/addLogger",
          params: log
        });
      }

      return new Promise(function (resolve) {
        resolve(log);
      });
    });
  },

  /**
   * 打开功能
   * @param {*} code 功能编码
   * @param {*} config 配置信息
   */
  showFunc: function showFunc(code, config) {
    var params = _objectSpread({
      code: code
    }, config);

    JE.fireServerAction("openapp", params);
  },

  /**
   * 退出登录
   */
  logout: function logout() {
    if (mui.os.plus) {
      plus.runtime.setBadgeNumber(-1);
      plus.push.clear();
      plus.webview.getLaunchWebview().evalJS("APP.start.logout()");
    }
  },

  /**
   * 启用系统配置
   * @param {WebView} webview 页面
   */
  enableConfig: function enableConfig(webview) {
    var file = JE.getPluginInfo("setting").js;
    plus.io.resolveLocalFileSystemURL(file, function () {
      webview && webview.setJsFile(file);
    });
  },

  /**
   * 转换字典编码
   * @param {String} dicCode 字典编码
   * @param {String} itemCode 项编码
   * @returns {String}
   */
  toDicText: function toDicText(dicCode, itemCode) {
    var obj = JE.getDicItems(dicCode, true);
    var item = JE.value(obj[itemCode], {
      text: ""
    });
    return item.text;
  },

  /**
   * 设置当前页的字典缓存----只限当前页面
   * @param {Object} dicList 字典数据
   */
  setDicCache: function setDicCache(dicList) {
    JE.dicListData = JE.dicListData || {};

    var _loop = function _loop(ddCode) {
      var items = dicList[ddCode];
      var obj = {};
      JE.each(items, function (item) {
        obj[item.code] = item;
      });
      JE.dicListData[ddCode] = {
        list: items,
        obj: obj
      };
    };

    for (var ddCode in dicList) {
      _loop(ddCode);
    }
  },

  /**
   * 返回当前页字典项集合----只限当前页面
   * @param {string} dicCode 字典编码
   * @param {boolean} [returnObj] 是否返回对象格式，默认返回数组
   * @return {Array/Object}
   */
  getDicItems: function getDicItems(dicCode, returnObj) {
    var dicInfo = JE.dicListData && JE.dicListData[dicCode] || {
      list: [],
      obj: {}
    };
    return returnObj ? dicInfo.obj : dicInfo.list;
  },

  /**
   * 转换默认值
   * @param {String} str 默认值，如果没有，返回原值
   * @param {Object} data 除了系统的默认值，也可以从给定的data数据中获得值
   * @return {String} str
   */
  toDefVal: function toDefVal(str, data) {
    if (!JE.isString(str)) return str;
    str = JE.value(str, "").trim();
    var val;
    var currentUser = JE.getCurrentUser();

    switch (str) {
      case "@USER_ID@":
        val = currentUser.userId;
        break;

      case "@USER_CODE@":
        val = currentUser.userCode;
        break;

      case "@USER_NAME@":
        val = currentUser.username;
        break;

      case "@USER_JTGSMC@":
        val = currentUser.jtgsMc;
        break;

      case "@USER_JTGSID@":
        val = currentUser.jtgsId;
        break;

      case "@DEPT_ID@":
        val = currentUser.deptId;
        break;

      case "@DEPT_CODE@":
        val = currentUser.deptCode;
        break;

      case "@DEPT_NAME@":
        val = currentUser.deptName;
        break;

      case "@DEPT_PATH@":
        val = currentUser.dept.path;
        break;
      // 登录部门路径

      case "@IS_MANAGER@":
        val = currentUser.isManager;
        break;

      case "@NOW_DATE@":
        val = JE.date().format("YYYY-MM-DD");
        break;

      case "@NOW_MONTH@":
        val = JE.date().format("YYYY-MM");
        break;

      case "@NOW_TIME@":
        val = JE.date().format("YYYY-MM-DD HH:mm:ss");
        break;
      // 公司监管查询sql值

      case "@COMPANY_QUERYIDS@":
        val = "'".concat(JE.value(currentUser.dept.jtjggsId, "").replaceAll(",", "','"), "'");
        break;
      // 监管部门sql值

      case "@USER_MONITORDEPT@":
        val = "'".concat(JE.value(currentUser.monitorDeptCode, "").replaceAll(",", "','"), "'");
        break;

      default:
        // 处理系统变量
        var re = /\@.*?\@/g;
        var res = str.match(re);

        if (!JE.isEmpty(res)) {
          var name = res[0].replaceAll("@", "");
          var vals = name.split(".");
          var type = vals[0]; // 对象模式处理

          if (vals.length > 1) {
            // 当前用户
            if (type == "USER") {
              val = currentUser;
            } // 循环拿对象属性


            for (var i = 1; i < vals.length; i++) {
              val = val[vals[i]];
            }
          } else {
            // 直接取系统变量
            val = JE.value(JE.getSystemConfig(name), "");
          }
        }

        break;
    }

    if (!JE.isEmpty(data) && val == undefined) {
      val = data[str];
    }

    val = val == undefined ? str : val;
    return val;
  },

  /**
   * 格式化数据模版
   * @param {String} tpl 数据模板
   * @param {Object} formatData 数据
   * @param {Object} [parentData] 父功能数据
   * @returns {String}
   */
  toXT: function toXT(str) {
    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    JE.each(str.match(/\{@.*?\@}/g), function (name) {
      var temp = name.replace("{", "").replace("}", "");
      str = str.replaceAll(name, JE.toDefVal(temp));
    });
    JE.each(str.match(/\{.*?\}/g), function (name) {
      var temp = name.replace("{", "").replace("}", ""); // str = str.replaceAll(_name, temp);

      if (data.hasOwnProperty(temp)) {
        str = str.replaceAll(name, data[temp]);
      }
    });
    return str; // if (JE.isEmpty(tpl)) return '';
    // // 数据
    // const data = JE.clone(JE.value(formatData, {}));
    // // 父功能数据，只有功能用，当tpl里有parent.fieldname时使用
    // if (JE.isNotEmpty(parentData)) {
    //   tpl = tpl.replaceAll('parent.', 'parent__');
    //   const tempData = {};
    //   JE.iterate(parentData, (key, val) => {
    //     tempData[`parent__${key}`] = val;
    //   });
    //   JE.apply(data, tempData);
    // }
    // // 系统变量
    // const re = /\{@.*?\@}/g;
    // let res = tpl.match(re);
    // JE.each(res, (name) => {
    //   // 去掉特殊符号.@等，替换成下划线_
    //   let temp = name.replaceAll('[.]', '_').replaceAll('@', '_');
    //   tpl = tpl.replaceAll(name, temp);
    //   // 转换默认值
    //   temp = temp.replace('{', '').replace('}', '');
    //   name = name.replace('{', '').replace('}', '');
    //   data[temp] = JE.toDefVal(name);
    // });
    // // eslint-disable-next-line no-undef
    // tpl = new Ext.XTemplate(tpl);
    // let str = tpl.apply(data);
    // // 处理无法解析的字符串
    // res = str.match(/\{.*?\}/g);
    // JE.each(res, (name) => {
    //   const temp = name.replace('{', '').replace('}', '');
    //   if (data.hasOwnProperty(temp)) {
    //     str = str.replaceAll(name, data[temp]);
    //   }
    // });
    // return str;
  },

  /**
   * 个推同步服务器角标
   * @param {Number} badge 角标数字
   */
  setGtBadge4IOS: function setGtBadge4IOS(badge) {
    if (mui.os.ios) {
      var GeTuiSdk = plus.ios.importClass("GeTuiSdk");
      GeTuiSdk.setBadge(badge);
    }
  },

  /**
   * 设置APP提醒数
   * @param {String} appCode 功能编码
   * @param {Number} badge 角标数字
   */
  setAppBadge: function setAppBadge(appCode, badge) {
    var home = plus.webview.getLaunchWebview();
    JE.fire(home, "DO_APP", {
      app: appCode,
      num: badge,
      type: "set_app_num"
    });
  },

  /**
   * 刷新软件角标提醒
   * @param {Object} badges 角标信息
   */
  refreshBadge: function refreshBadge(badges) {
    JE.fireServerAction("refreshBadge", badges);
    /* const updateApkBadge = (_badges) => {
      JE._apk_badge_num = 0;
      // 参与软件角标计算的app编码
      const apknum = JE.value(_badges.apknum, []);
      JE.iterate(_badges, (type, val) => {
        JE.iterate(val, (app, info) => {
          if (type == 'sql') {
            JE.setAppBadge(app, info);
            if (apknum.indexOf(app) != -1) {
              JE._apk_badge_num += JE.toNum(info);
            }
          } else if (type == 'fn') {
            const fn = JE.eval(info);
            fn((num) => {
              JE.setAppBadge(app, num);
              if (apknum.indexOf(app) != -1) {
                JE._apk_badge_num += JE.toNum(num);
                plus.runtime.setBadgeNumber(JE._apk_badge_num);
                JE.setGtBadge4IOS(JE._apk_badge_num);
              }
            });
          }
        });
      });
      plus.runtime.setBadgeNumber(JE._apk_badge_num);
      JE.setGtBadge4IOS(JE._apk_badge_num);
    };
    if (badges) {
      updateApkBadge(badges);
    } else {
      JE.ajax({
        // url:'/je/appAction!getApkBadge.action',
        url: JE.getUrlMaps('je.core.phone.app.getApkBadge'),
        errorAlert: false,
        params: {
          cid: JE.getPushInfo('clientid'),
          apkId: JE.getApkID(),
        },
        callback(success, obj) {
          if (success) {
            updateApkBadge(obj.badges);
          } else {
            JE.log('角标更新失败！');
          }
        },
      });
    } */
  }
};
/**
 * 格式化服务地址
 * @param url
 */

exports["default"] = _default;

function normalizeServerPath(url) {
  var hasLastPath = url.lastIndexOf("/") === url.length - 1;
  return hasLastPath ? url.substr(0, url.length - 1) : url;
}

/***/ }),

/***/ "./src/core/je/system/view.js":
/*!************************************!*\
  !*** ./src/core/je/system/view.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _winModal = _interopRequireDefault(__webpack_require__(/*! @/core/components/winModal */ "./src/core/components/winModal/index.vue"));

var _actionSheet = _interopRequireDefault(__webpack_require__(/*! @/core/components/actionSheet */ "./src/core/components/actionSheet/index.vue"));

var _winCRGroup = _interopRequireDefault(__webpack_require__(/*! @/core/components/winCRGroup */ "./src/core/components/winCRGroup/index.vue"));

var _treeUser = _interopRequireDefault(__webpack_require__(/*! @/core/components/treeUser */ "./src/core/components/treeUser/index.vue"));

var _imTreeUser = _interopRequireDefault(__webpack_require__(/*! @/core/components/imTreeUser */ "./src/core/components/imTreeUser/index.vue"));

/**
 * 页面组件类.
 * @module JE/view
 */
var _default = {
  /**
    * 各种弹出窗体
    * @example
    * JE.selectWin({type: 'searchList',lists:[],callback: (data)=>{}});
    * @param {Object} options 参数对象
    */
  selectWin: function selectWin(options) {
    var compt = null;

    if (options.type === 'list') {
      compt = _winModal["default"];
    } else if (options.type === 'tree' || options.type === 'user') {
      compt = _treeUser["default"];
    } // 创建构造器


    var Profile = Vue.extend(compt); // 组件的操作

    var MainInstance = Object.assign({}, compt);

    MainInstance.methods.dosureCb = function (data, pkName) {
      options.callback(data, pkName);
    }; // 创建 Profile 实例，并挂载到一个元素上。
    // 删除元素封装


    function removeElement(_element) {
      // 当div下还存在子节点时 循环继续
      while (_element.hasChildNodes()) {
        _element.removeChild(_element.firstChild);
      }

      _element.parentNode.removeChild(_element);
    } // 如果存在 弹窗  先清除掉


    if (document.getElementsByClassName('allModal')[0]) {
      removeElement(document.getElementsByClassName('allModal')[0]);
    } // 新建一个id为winEl的元素  用来挂载弹窗


    var _document = document,
        body = _document.body;
    var winel = document.createElement('div');
    winel.id = 'winEl';
    body.appendChild(winel);
    new Profile({
      // 给组件传递参数
      propsData: {
        cfg: options
      }
    }).$mount('#winEl');
  },
  selectWinIM: function selectWinIM(options) {
    var compt = null;

    if (options.type === 'list') {
      compt = _winModal["default"];
    } else if (options.type === 'tree' || options.type === 'user') {
      compt = _imTreeUser["default"];
    } // 创建构造器


    var Profile = Vue.extend(compt); // 组件的操作

    var MainInstance = Object.assign({}, compt);

    MainInstance.methods.dosureCb = function (data, pkName) {
      options.callback(data, pkName);
    }; // 创建 Profile 实例，并挂载到一个元素上。
    // 删除元素封装


    function removeElement(_element) {
      // 当div下还存在子节点时 循环继续
      while (_element.hasChildNodes()) {
        _element.removeChild(_element.firstChild);
      }

      _element.parentNode.removeChild(_element);
    } // 如果存在 弹窗  先清除掉


    if (document.getElementsByClassName('allModal')[0]) {
      removeElement(document.getElementsByClassName('allModal')[0]);
    } // 新建一个id为winEl的元素  用来挂载弹窗


    var _document2 = document,
        body = _document2.body;
    var winel = document.createElement('div');
    winel.id = 'winEl';
    body.appendChild(winel);
    new Profile({
      // 给组件传递参数
      propsData: {
        cfg: options
      }
    }).$mount('#winEl');
  },

  /**
    * 操作按钮提示框
    * @example
    *     JE.actionSheet('选择图片',function(e){
    *         //var index = e.index;//按钮的索引
    *     },[{title:"拍照或录像"},{title:"选取现有的"}]);
    * @param {String} title 标题
    * @param {Function} fn  关闭提示框后的回调方法
    * @param {Array} btnArray 按钮信息  [{title:"拍照或录像"},{title:"选取现有的"}]
    */
  actionSheet: function actionSheet(title, fn, btnArray) {
    var _this = this;

    btnArray = JE.value(btnArray, []);
    this.each(btnArray, function (btn, index) {
      if (_this.isString(btn)) {
        btnArray[index] = {
          title: btn
        };
      }
    });

    var newfn = function newfn(e) {
      if (e.index >= 0) {
        JE.playAudio4Btn();
      }

      if (fn) {
        fn(e);
      }
    };

    function removeElement(_element) {
      // 当div下还存在子节点时 循环继续
      while (_element.hasChildNodes()) {
        _element.removeChild(_element.firstChild);
      }

      _element.parentNode.removeChild(_element);
    } // h5+


    if (mui.os.plus) {
      var conf = {
        cancel: '取消',
        buttons: btnArray
      };

      if (JE.isNotEmpty(title)) {
        conf.title = title;
      }

      plus.nativeUI.actionSheet(conf, newfn); // 页面
    } else {
      var compt = _actionSheet["default"]; // 创建构造器

      var Profile = Vue.extend(compt); // 组件的操作

      var MainInstance = Object.assign({}, compt);

      MainInstance.methods.cb = function (data) {
        newfn(data);
      }; // 创建 Profile 实例，并挂载到一个元素上。
      // 删除元素封装
      // 如果存在 弹窗  先清除掉


      if (document.getElementsByClassName('je-actionSheetModal')[0]) {
        removeElement(document.getElementsByClassName('je-actionSheetModal')[0]);
      } // 新建一个id为winEl的元素  用来挂载弹窗


      var _document3 = document,
          body = _document3.body;
      var winel = document.createElement('div');
      winel.id = 'winEl';
      body.appendChild(winel);
      this.each(btnArray, function (btn, index) {
        if (_this.isString(btn)) {
          btnArray[index] = {
            title: btn
          };
        }
      });
      new Profile({
        // 给组件传递参数
        propsData: {
          chooseList: [{
            title: '取消'
          }].concat(btnArray)
        }
      }).$mount('#winEl'); //   const sheetId = 'je-actionsheet';
      //   let sheet = JE.get(sheetId);
      //   if (!sheet) {
      //     sheet = document.createElement('div');
      //     sheet.setAttribute('id', sheetId);
      //     sheet.setAttribute('class', 'mui-popover mui-popover-action mui-popover-bottom');
      //     document.body.appendChild(sheet);
      //   }
      //   const btnHtml = [];
      //   btnArray.forEach((item, index) => {
      //     btnHtml.push(`
      //     <li class="mui-table-view-cell">
      //       <a href="javascript:void(0);" data-index="${index}">${item.title}</a>
      //     </li>
      //     `);
      //   });
      //   const tpl = `<ul class="mui-table-view">
      //   ${btnHtml.join('')}
      //     </ul>
      //     <ul class="mui-table-view">
      //     <li class="mui-table-view-cell">
      //     <a href="javascript:void(0);" data-index="0" ><b>取消</b></a>
      //     </li>
      //     </ul>`;
      //   sheet.innerHTML = tpl;
      //   JE.actionSheetFn = newfn;
      //   if (!JE.actionSheetEvent) {
      //     JE.actionSheetEvent = true;
      //     // eslint-disable-next-line func-names
      //     mui(`#${sheetId}`).on('tap', 'li>a', function () {
      //       const a = this;
      //       const index = a.getAttribute('data-index');
      //       // 关闭actionsheet
      //       mui(`#${sheetId}`).popover('toggle');
      //       if (JE.actionSheetFn) {
      //         JE.actionSheetFn({ index });
      //       }
      //     });
      //   }
      //   mui(`#${sheetId}`).popover('show');
    }
  },

  /**
   * 打开单选多选组件
   * @param {Object} options 配置项
   * @param {Boolean}  options.multiple 多选（默认单选）
   * @param {Array}    options.items 数据项(code,text)
   * @param {String}    options.value 默认值(code)
   * @param {Function} options.callback 回调函数(参数：obj={text:'a,b',code:'a,b'})
   */
  showCRGroup: function showCRGroup(options) {
    // 创建构造器
    var Profile = Vue.extend(_winCRGroup["default"]); // 组件的操作

    var MainInstance = Object.assign({}, _winCRGroup["default"]);

    MainInstance.methods.handleChoose = function (data) {
      options.callback(data);
    }; // 创建 Profile 实例，并挂载到一个元素上。
    // 删除元素封装


    function removeElement(_element) {
      // 当div下还存在子节点时 循环继续
      while (_element.hasChildNodes()) {
        _element.removeChild(_element.firstChild);
      }

      _element.parentNode.removeChild(_element);
    } // 如果存在 弹窗  先清除掉


    if (document.getElementsByClassName('winCRGroup')[0]) {
      removeElement(document.getElementsByClassName('winCRGroup')[0]);
    } // 新建一个id为winEl的元素  用来挂载弹窗


    var _document4 = document,
        body = _document4.body;
    var winel = document.createElement('div');
    winel.id = 'winEl';
    body.appendChild(winel);
    new Profile({
      // 给组件传递参数
      propsData: {
        options: options
      }
    }).$mount('#winEl');
    /* const type = options.multiple ? 'checkbox' : 'radio';
    const items = options.items || [];
    const itemHeight = 43;
    const maxCount = 10;
    const { value } = options;
    JE.crgroupFn = options.callback;
    const crgroupId = 'je-input-crgroup-items';
    let crgroup = JE.get(crgroupId);
    if (!crgroup) {
      crgroup = document.createElement('div');
      crgroup.setAttribute('id', crgroupId);
      crgroup.setAttribute('class', 'mui-popover mui-popover-action mui-popover-bottom');
      document.body.appendChild(crgroup);
    }
    const tpl = [
      '<ul class="mui-table-view mui-scroll-wrapper" style="height:{height}px;width: auto;max-height:{maxHeight}px;">',
      '<div class="mui-scroll">',
      '<tpl for="items">',
      '<li class="mui-table-view-cell mui-{parent.type} mui-left" style="text-align:left;">',
      '<input name="{parent.type}" value="{code}" data-text="{text}" type="{parent.type}" <tpl if="parent.value.split(\',\').indexOf(code) != -1">checked</tpl> >{text}',
      '</li>',
      '</tpl>',
      '</div>',
      '</ul>',
      '<tpl if="type==\'checkbox\'">',
      '<ul class="mui-table-view">',
      '<li class="mui-table-view-cell">',
      '<a href="javascript:void(0);" data-index="1"><b>确定</b></a>',
      //              '<tpl if="type==\'radio\'">',
      //                '<a href="javascript:void(0);" data-index="0"><b>取消</b></a>',
      //              '<tpl else>',
      //                '<a href="javascript:void(0);" data-index="0" style="display: inline-block;width: 50%;text-align: left;">取消</a>',
      //                '<a href="javascript:void(0);" data-index="1" style="display: inline-block;width: 50%;text-align: right;"><b>确定</b></a>',
      //              '</tpl>',
      '</li>',
      '</ul>',
      '</tpl>',
    ].join('');
    crgroup.innerHTML = JE.toXT(tpl, {
      items,
      height: items.length * itemHeight,
      maxHeight: maxCount * itemHeight,
      type,
      value,
    });
    // 超过最大数，启用滚动条
    if (items.length > maxCount) {
      // 阻尼系数
      const deceleration = mui.os.ios ? 0.003 : 0.0009;
      mui(`#${crgroupId} .mui-scroll-wrapper`).scroll({
        scrollX: true,
        bounce: false,
        indicators: false, // 是否显示滚动条
        deceleration,
      });
    }
    if (!JE.crgroupEvent) {
      JE.crgroupEvent = true;
      const okFn = (inputs) => {
        const val = []; const
          text = [];
        // eslint-disable-next-line func-names
        mui.each(inputs, function () {
          const input = this;
          if (input.checked) {
            val.push(input.getAttribute('value'));
            text.push(input.getAttribute('data-text'));
          }
        });
        if (JE.crgroupFn) {
          JE.crgroupFn({ value: val.join(','), text: text.join(',') });
        }
      };
      // eslint-disable-next-line func-names
      mui(`#${crgroupId}`).on('tap', 'li>a', function () {
        const a = this;
        const index = a.getAttribute('data-index');
        if (index == 1) {
          okFn(mui(`#${crgroupId} input`));
        }
        // 关闭
        mui(`#${crgroupId}`).popover('hide');
      });
      // eslint-disable-next-line func-names
      mui(`#${crgroupId}`).on('tap', '.mui-radio', function () {
        const radio = this.querySelector('input');
        radio.checked = true;
        okFn([radio]);
        // 关闭
        mui(`#${crgroupId}`).popover('hide');
      });
    }
      mui(`#${crgroupId}`).popover('show'); */
  },

  /**
   * 窗体
   * @param {Object} cfg 配置信息
   * @example
     参数说明：cfg = {
       title:'',
       callback:function(values){},
       items:[{
         label:'',
         name:'',
         value:'',
         emptyText:'',
         inputType:'',
         readonly:''
       }]
     }
   */
  win: function win(cfg) {
    // // JE.win({
    // //   title:'',
    // //   html:'',
    // //   width:100,
    // //   height:100,
    // //   callback:function(){},
    // //   items:[{
    // //     xtype:'rgroup,cgroup,gridsswin',
    // //     label:'',
    // //     configInfo:'funcCode,a,b,S'
    // //   }]
    // // })
    // const compt = Win;
    // // 创建构造器
    // const Profile = Vue.extend(compt);
    // // 组件的操作
    // const MainInstance = Object.assign({}, compt);
    // MainInstance.methods.cb = (data) => {
    //   cfg.callback(data);
    // };
    // // 创建 Profile 实例，并挂载到一个元素上。
    // // 删除元素封装
    // function removeElement(_element) {
    //   // 当div下还存在子节点时 循环继续
    //   while (_element.hasChildNodes()) {
    //     _element.removeChild(_element.firstChild);
    //   }
    //   _element.parentNode.removeChild(_element);
    // }
    // // 如果存在 弹窗  先清除掉
    // if (document.getElementsByClassName('allModal')[0]) {
    //   removeElement(document.getElementsByClassName('allModal')[0]);
    // }
    // // 新建一个id为winEl的元素  用来挂载弹窗
    // const { body } = document;
    // const winel = document.createElement('div');
    // winel.id = 'winEl';
    // body.appendChild(winel);
    // new Profile({
    //   // 给组件传递参数
    //   propsData: {
    //     config: cfg,
    //   },
    // }).$mount('#winEl');
    var winCls = 'je-ux-win';
    var win = JE.select(".".concat(winCls));

    if (!win) {
      win = document.createElement('div');
      win.setAttribute('class', "mui-popover mui-popover-action mui-popover-bottom ".concat(winCls));
      win.setAttribute('style', 'top: 43px;');
      win.innerHTML = ['<div class="mui-scroll-wrapper">', '<div class="mui-scroll">', '<div class="mui-card" style="margin: 0 6px;">', '<div class="mui-card-header header-blue">', '<div class="title"></div>', '<i class="mui-icon mui-icon-closeempty mui-pull-right closable-icon"></i>', '</div>', '<div class="mui-card-content mui-input-group">', '</div>', '<div class="mui-card-footer">', '<button class="mui-btn cancel je-audio-btn">取消</button>', '<button class="mui-btn mui-btn-blue ok je-audio-btn">确定</button>', '</div>', '</div>', '</div>', '</div>'].join('');
      document.body.appendChild(win);
      mui.plusReady(function () {
        mui('.mui-scroll-wrapper').scroll();
      }); // 取消

      mui(".".concat(winCls)).on('tap', '.mui-card-footer .cancel', function () {
        mui(win).popover('hide');
      }); // 取消

      mui(".".concat(winCls)).on('tap', '.mui-card-header .closable-icon', function () {
        mui(win).popover('hide');
      });
    } // 设置默认配置项


    JE.applyIf(cfg, {
      useButton: true
    }); // 是否启用按钮，不启用，则显示关闭按钮

    JE.getEl(win)[cfg.useButton ? 'removeClass' : 'addClass']('closable'); // body高

    var content = win.querySelector('.mui-card-content');
    content.style.height = cfg.bodyHeight > 0 ? "".concat(cfg.bodyHeight, "px") : 'auto'; // 确定

    mui(".".concat(winCls)).off('tap', '.mui-card-footer .ok');
    mui(".".concat(winCls)).on('tap', '.mui-card-footer .ok', function () {
      var doms = win.querySelectorAll('input');
      var obj = {};
      JE.each(doms, function (dom) {
        obj[dom.getAttribute('name')] = dom.value;
      });
      var flag = true;

      if (cfg.callback) {
        flag = cfg.callback(obj);
      }

      if (flag != false) {
        mui(win).popover('hide');
      }
    });
    var title = win.querySelector('.title');
    title.innerHTML = JE.value(cfg.title, '');
    content = win.querySelector('.mui-card-content');
    content.innerHTML = '';
    var tpl = ['<div class="mui-input-row">', '<tpl if="label"><label style="width: 40%">{label}</label></tpl>', '<input style="width: 60%" type="{inputType}" name="{name}" placeholder="{emptyText}" value="{value}">', '</div>'].join('');
    var htmls = [];
    JE.each(cfg.items, function (item) {
      item.inputType = JE.value(item.inputType, 'text');
      var html = JE.toXT(tpl, item);
      htmls.push(html);
    });
    content.innerHTML = htmls.join(''); // 处理自然的归岗弹框

    var doms = win.querySelectorAll('input');
    JE.each(doms, function (dom) {
      if (dom.name == 'startTime' || dom.name == 'endTime') {
        dom.readOnly = true;
        var dtPicker = new mui.DtPicker({
          type: 'datetime',
          // 设置日历初始视图模式
          // endDate: new Date(getYear(), (getMonth() - 1), getDay()), // 设置结束日期
          labels: ['年', '月', '日', '时', '分'] // 设置默认标签区域提示语

        });
        dom.addEventListener('tap', function (e) {
          e.preventDefault();
          dtPicker.show(function (_ref) {
            var value = _ref.value;
            dtPicker.hide();
            dom.value = value;
            console.log('val', value);
          });
        });
      }
    }); //   结束

    mui(win).popover('show');

    if (cfg.showFn) {
      cfg.showFn(win, content);
    }
  },

  /**
   *  查询选择
   * @param {Object} cfg 配置信息
   * @example
   *
    title : '',//标题
    type : 'list|tree|user',//类型
    configInfo : configInfo,//配置信息
    callback:function(selects){ return true;//如果返回false，不关闭},  //回调函数
    otherConfig ：[otherConfig],//辅助配置项
    value:[value],      //默认值
    valueType:['id|code|text'], //字段对应的取值字段,tree用
    whereSql : [whereSql],//过滤条件
    enableExp:[enableExp],//可选表达式，tree用
    enableTip:[info.enableTip],//可选表达式提示，tree用
    dics:['A,B,C'],//依赖字典，list用
    app:{ //查询选择app配置信息，如果没有，去后台查询，list用
      tableName:'',
      pkName:'',
      action:'',
      whereSql:'',
      orderSql:'',
      rednerer:'' | function,//格式化函数
      itemTpl:'',//数据模板，用于单独调用自定义使用
      searchs:'' | [{code:'',search:'like'}]
    }
   */
  selectWin1: function selectWin1(cfg) {
    var _this2 = this;

    cfg = cfg || {};
    var cfgs = JE.value(cfg.configInfo, '').split(',');
    var _code = cfgs[0]; // 配置编码

    if (JE.isEmpty(cfg.url) && JE.isEmpty(_code)) {
      JE.alert('编码不存在，请检查！');
      return;
    }

    cfg.type = JE.value(cfg.type, 'list'); // 如果是查询选择，没有app配置项，去后台查询

    if (cfg.type == 'list' && (JE.isEmpty(cfg.app) || cfg.app.info.appCode != _code)) {
      JE.ajax({
        // url:'/je/appAction!doInitList.action',
        url: JE.getUrlMaps('je.core.phone.app.doInitList'),
        params: {
          ddListCodes: cfg.dics || '',
          appCodes: _code,
          apkId: JE.getApkID()
        },
        callback: function callback(success, obj) {
          JE.setDicCache(obj.dics);
          var app = obj.apps[_code];

          if (app) {
            window.APP && window.APP.perm && window.APP.perm.sql(app, app.permInfo);
            cfg.app = app;
            JE.selectWin(cfg);
          } else {
            JE.alert("".concat(_code, "\u529F\u80FD\u4E0D\u5B58\u5728\uFF01"));
          }
        }
      });
      return;
    } // 人员选择器，默认换成人员字典


    if (cfg.type == 'user') {
      cfg.type = 'tree';
      cfgs[0] = _code = 'JE_CORE_DEPTUSER';
      cfgs[2] = (cfgs[2] || '').replaceAll('USERNAME', 'text').replaceAll('USERID', 'id').replaceAll('USERCODE', 'code');
      cfg.configInfo = cfgs.join(',');
    }

    var me = this; // 数据项模板

    me.selectwinItemTpl = ['<tpl for=".">', '<li class="mui-table-view-cell mui-checkbox mui-left <tpl if=\'!leaf\'>folder</tpl>" data-id="{id}">', '<input type="checkbox"  data-id="{id}"/>', '<div class="data-body">{bodyTpl}</div>', '<i class="mui-icon mui-icon-arrowright in"></i>', '</li>', '</tpl>'].join(''); // 数据项值模板

    me.selectwinItemValTpl = ['<li class="mui-table-view-cell" data-id="{id}">', '<div class="data-body">{bodyTpl}</div>', '<i class="mui-icon mui-icon-close remove"></i>', '</li>'].join('');
    var selectwinId = 'je-selectwin';
    var dataId = "".concat(selectwinId, "-data");
    var valId = "".concat(selectwinId, "-value");
    var selectwin = JE.get(selectwinId);

    if (!selectwin) {
      selectwin = document.createElement('div');
      selectwin.setAttribute('id', selectwinId);
      selectwin.setAttribute('class', 'mui-popover mui-popover-action mui-popover-bottom je-selectwin');
      document.body.appendChild(selectwin);
      var tpl = ['<div class="mui-card">', '<div class="mui-card-header header-blue">', //          '<a class="mui-icon mui-icon-undo je-audio-btn searchback" id="'+selectwinId+'-searchback"></a>',
      '<div class="mui-title">', '<div class="mui-input-row je-search-bar">', "<input id=\"".concat(selectwinId, "-searchinput\" type=\"search\" class=\"mui-input-clear\">"), '</div>', '</div>', "<div class=\"mui-checkbox checkall\"><input type=\"checkbox\" id=\"".concat(selectwinId, "-checkall\" /></div>"), "<a class=\"mui-icon mui-icon-closeempty je-audio-btn\" id=\"".concat(selectwinId, "-searchclear\" ></a>"), "<a class=\"mui-icon jeicon jeicon-search search-icon je-audio-btn\" id=\"".concat(selectwinId, "-searchbtn\" ></a>"), '</div>', '<div class="mui-card-content mui-slider">', '<div class="mui-slider-indicator mui-segmented-control mui-segmented-control-inverted">', "<a class=\"mui-control-item mui-active\" href=\"#".concat(dataId, "\">"), "\u5F85\u9009\u6570\u636E\uFF08<span id=\"".concat(dataId, "-totalnum\">0</span>\uFF09"), '</a>', "<a class=\"mui-control-item\" href=\"#".concat(valId, "\">"), "\u5DF2\u9009\u6570\u636E\uFF08<span id=\"".concat(dataId, "-selectnum\">0</span>\uFF09"), '</a>', '</div>', '<div class="mui-slider-group">', "<div id=\"".concat(dataId, "\" class=\"mui-slider-item mui-control-content mui-active\">"), '<div class="mui-segmented-control user-type">', '<a class="mui-control-item mui-active" data-code="JE_CORE_DEPTUSER">部门</a>', '<a class="mui-control-item" data-code="JE_CORE_VSENTRYUSER">岗位</a>', '<a class="mui-control-item" data-code="JE_CORE_VROLEUSER">角色</a>', '</div>', //              '<div class="tree-body">',
      '<div class="mui-scroll-wrapper">', '<div class="mui-scroll">', "<ul class=\"mui-table-view\" id=\"".concat(dataId, "-view\">"), '</ul>', "<p class=\"pagetext\" id=\"".concat(dataId, "-pagetext\"></p>"), '</div>', '</div>', "<div class=\"je-selectwin-tree-path\" id=\"".concat(dataId, "-treepath\" ></div>"), "<div id=\"".concat(dataId, "-treepath-up\" class=\"je-fixed-button je-audio-btn mui-icon mui-icon-undo treepath-up\"></div>"), "<div id=\"".concat(dataId, "-searchback\" class=\"je-fixed-button je-audio-btn mui-icon mui-icon-trash tree-searchback\"></div>"), //              '</div>',
      //              '<div class="indexed-body">',
      //              '</div>',
      '</div>', "<div id=\"".concat(valId, "\" class=\"mui-slider-item mui-control-content\">"), '<div class="mui-scroll-wrapper">', '<div class="mui-scroll">', "<ul class=\"mui-table-view\" id=\"".concat(valId, "-view\">"), '</ul>', '</div>', '</div>', "<div id=\"".concat(valId, "-clear\" class=\"je-fixed-button je-audio-btn mui-icon mui-icon-trash clear\"></div>"), '</div>', '</div>', '</div>', '<div class="mui-card-footer">', '<button class="mui-btn mui-btn-block cancell je-audio-btn" data-code="cancel">取消1111</button>', '<button class="mui-btn mui-btn-blue mui-btn-block ok je-audio-btn" data-code="ok">确定</button>', '</div>', '</div>'].join('');
      selectwin.innerHTML = tpl; //    mui('#'+selectwinId+'-searchinput').input();
      // 单击别处，让查询框失焦

      JE.on(selectwinId, 'tap', function (event) {
        JE.clearFocus(event.target);
      }); // 单击选择
      // eslint-disable-next-line func-names

      mui("#".concat(selectwinId)).on('tap', "#".concat(dataId, " .mui-table-view-cell"), function () {
        var dom = this;
        var id = dom.getAttribute('data-id');
        var checked = !dom.querySelector('input[type=checkbox]').checked;

        if (!me.selectwinCfg.multiple) {
          var item = JE.get("".concat(dataId, "-view")).querySelector('.mui-table-view-cell.select');

          if (item && item != dom) {
            item.classList.remove('select');
            item.querySelector('input[type=checkbox]').checked = false;
          }
        } // eslint-disable-next-line no-use-before-define


        doSelect(id, checked);
      }); // 全选
      // eslint-disable-next-line func-names

      mui("#".concat(selectwinId, " .mui-card-header .checkall")).on('change', 'input[type=checkbox]', function () {
        var checked = this.checked; // eslint-disable-next-line func-names

        mui("#".concat(dataId, "-view input[type=checkbox]")).each(function () {
          this.checked = checked;
          var id = this.getAttribute('data-id'); // eslint-disable-next-line no-use-before-define

          doSelect(id, checked);
        });
      }); // 删除多选数据
      // eslint-disable-next-line func-names

      mui("#".concat(valId)).on('tap', '.mui-table-view-cell .remove', function () {
        var btn = this;
        var item = btn.parentNode;
        var id = item.getAttribute('data-id'); // eslint-disable-next-line no-use-before-define

        doSelect(id, false, false);
      }); // 清空选中

      mui("#".concat(valId)).on('tap', "#".concat(valId, "-clear"), function () {
        var valueview = JE.get("".concat(valId, "-view"));
        valueview.innerHTML = '';
        me.selectwinCfg.selections = []; // eslint-disable-next-line no-use-before-define

        initSelectValue();
      }); // 关键字搜索

      var searchTask = JE.delayedTask(function () {
        var keyword = JE.get("".concat(selectwinId, "-searchinput")).value; // eslint-disable-next-line no-use-before-define

        doSearch(keyword);
      });
      JE.on("".concat(selectwinId, "-searchinput"), 'keyup', function (event) {
        if (event.keyCode == 13) {
          searchTask.delay(500); // const btn = JE.get(`${selectwinId}-searchbtn`);
          // mui.trigger(btn, 'tap');
        }
      }); // 解决搜索框值改变  就搜索的问题

      var oInput = document.querySelector("#".concat(selectwinId, "-searchinput"));

      oInput.oninput = function (e) {
        searchTask.delay(300);
      }; // 解决点击 搜索icon 不触发搜索事件的问题


      mui("#".concat(selectwinId)).on('tap', '.mui-card-header .search-icon', function () {
        var keyword = JE.get("".concat(selectwinId, "-searchinput")).value; // eslint-disable-next-line no-use-before-define

        doSearch(keyword);
      });
      mui("#".concat(selectwinId)).on('tap', '.mui-card-header .mui-icon-closeempty', function () {
        JE.get("".concat(selectwinId, "-searchinput")).value = ''; // eslint-disable-next-line no-use-before-define

        doSearch();
      }); // 树形加载子项
      // eslint-disable-next-line func-names

      mui("#".concat(selectwinId)).on('tap', "#".concat(dataId, " .mui-table-view-cell .in"), function (event) {
        event.stopPropagation();
        var dom = this.parentNode;
        var id = dom.getAttribute('data-id'); // eslint-disable-next-line no-use-before-define

        loadTree(id);
      }); // 树形路径
      // eslint-disable-next-line func-names

      mui("#".concat(selectwinId)).on('tap', '.je-selectwin-tree-path .item', function () {
        var btn = this;
        var id = btn.getAttribute('data-id'); // eslint-disable-next-line no-use-before-define

        loadTree(id);
      }); // eslint-disable-next-line func-names

      mui("#".concat(selectwinId)).on('tap', '.treepath-up', function () {
        var btn = this;
        var id = btn.getAttribute('data-id'); // eslint-disable-next-line no-use-before-define

        loadTree(id);
      }); // 列表下一页
      // eslint-disable-next-line func-names

      mui("#".concat(selectwinId)).on('tap', '.pagetext', function () {
        var p = this;

        if (p.classList.contains('text-disable')) {
          return;
        } // eslint-disable-next-line no-use-before-define


        loadPage(me.selectwinStore.page + 1);
      }); // 底部按钮
      // eslint-disable-next-line func-names

      mui("#".concat(selectwinId)).on('tap', '.mui-card-footer .mui-btn', function () {
        var a = this;
        var code = a.getAttribute('data-code');

        if (code == 'ok') {
          // eslint-disable-next-line no-use-before-define
          setValue();
        } else {
          // 关闭actionsheet
          mui("#".concat(selectwinId)).popover('hide');
        }
      }); // 人员过滤
      // eslint-disable-next-line func-names

      mui("#".concat(selectwinId)).on('tap', '.user-type.mui-segmented-control .mui-control-item', function () {
        var dom = this;
        var code = dom.getAttribute('data-code'); // eslint-disable-next-line no-use-before-define

        loadTree("ROOT_".concat(code));
      });
    } // 多选操作


    var doSelect = function doSelect(id, checked, noCascade) {
      var dataView = JE.get("".concat(dataId, "-view"));
      var valueView = JE.get("".concat(valId, "-view"));
      var selections = me.selectwinCfg.selections;
      var data = me.selectwinCfg.dataMap[id];
      var dom = dataView.querySelector(".mui-table-view-cell[data-id='".concat(id, "']"));
      var item = valueView.querySelector(".mui-table-view-cell[data-id='".concat(id, "']")); // 选中样式

      if (dom) {
        dom.classList[checked ? 'add' : 'remove']('select'); // 树形特殊处理

        if (['tree', 'user'].indexOf(me.selectwinCfg.type) != -1 && noCascade == false) {
          dom.querySelector('input[type=checkbox]').checked = false;
        }
      }

      if (checked) {
        if (item) {
          return;
        }

        var bodyHtml = dom.querySelector('.data-body').innerHTML;

        if (JE.isNotEmpty(data.bodyTpl4Path)) {
          bodyHtml = data.bodyTpl4Path;
        }

        var html = JE.toXT(me.selectwinItemValTpl, {
          id: id,
          bodyTpl: bodyHtml
        });

        if (me.selectwinCfg.multiple) {
          selections.push(id);
          valueView.innerHTML += html;
        } else {
          valueView.innerHTML = html;
          selections = [id];
        }
      } else if (item) {
        valueView.removeChild(item);
        var index = selections.indexOf(id);

        if (index != -1) {
          selections.splice(index, 1);
        }
      } // 树形级联。。。。。


      if (me.selectwinCfg.multiple && ['tree', 'user'].indexOf(me.selectwinCfg.type) != -1 && noCascade != false) {
        // eslint-disable-next-line no-shadow
        var cascadeNode = function cascadeNode(node, selectType, checked) {
          var vals = [];

          if (selectType == 'N') {
            return vals;
          }

          var nodes = [];

          if (selectType == 'D') {
            var parent = me.selectwinCfg.dataMap[node.parentId];

            while (parent && parent.id != 'ROOT') {
              nodes.push(parent);
              parent = me.selectwinCfg.dataMap[parent.parentId];
            }
          } else {
            selectType = 'T';
            nodes = node.children;
          }

          JE.each(nodes, function (n) {
            if (checked) {
              var chDom = valueView.querySelector(".mui-table-view-cell[data-id=\"".concat(n.id, "\"]"));

              if (!chDom) {
                var chHtml = JE.toXT(me.selectwinItemValTpl, {
                  id: n.id,
                  bodyTpl: n.bodyTpl4Path
                });
                vals.push(chHtml);
              }
            } else {
              vals.push(n.id);
            }

            if (selectType == 'T') {
              vals = vals.concat(cascadeNode(n, selectType, checked));
            }
          });
          return vals;
        }; // N(上下都不级联) | T(选父节点级联选中子节点) | D(选子节点级联选择父节点)


        var selectType = me.selectwinCfg.selectType;
        var vals = cascadeNode(data, selectType, checked);

        if (vals.length > 0) {
          if (checked) {
            valueView.innerHTML += vals.join('');
          } else {
            JE.each(vals, function (chid) {
              var chDom = valueView.querySelector(".mui-table-view-cell[data-id=\"".concat(chid, "\"]"));

              if (chDom) {
                valueView.removeChild(chDom);
              }
            });
          }
        }
      } // 更新选中数据数


      var count = valueView.querySelectorAll('.mui-table-view-cell').length;
      JE.get("".concat(dataId, "-selectnum")).innerHTML = count;
    }; // 表单赋值


    var setValue = function setValue(id) {
      var fn = me.selectwinCfg.callback;

      if (fn) {
        var datas = [];
        var ids = [];
        var disableSels = []; // eslint-disable-next-line no-shadow

        var _cfg = me.selectwinCfg;

        if (id) {
          ids = [id];
        } else {
          var doms = JE.get("".concat(valId, "-view")).querySelectorAll('.mui-table-view-cell');
          var _ids = [];
          JE.each(doms, function (dom) {
            // eslint-disable-next-line no-shadow
            var id = dom.getAttribute('data-id');
            var _id = id.split('_')[0]; // 剔除重复的数据

            if (_ids.indexOf(_id) == -1) {
              ids.push(id);

              _ids.push(_id);
            }
          });
        } // eslint-disable-next-line no-shadow


        JE.each(ids, function (id) {
          var data = me.selectwinCfg.dataMap[id];

          if (data) {
            if (['tree', 'user'].indexOf(me.selectwinCfg.type) != -1) {
              var _flag = true;
              var exp = _cfg.enableExp;

              if (JE.isNotEmpty(exp)) {
                // 根据树形字典项可选表达式处理
                // 格式化数据
                _flag = JE.value(JE.eval(JE.toXT(exp, data), "\u53EF\u9009\u8868\u8FBE\u5F0F\u9519\u8BEF\uFF1A".concat(exp)), false);
              } else if (data.disabled == '1') {
                // 根据字典项的disabled
                _flag = false;
              }

              if (_flag) {
                datas.push(data);
              } else {
                disableSels.push(id);
              }
            } else {
              datas.push(data);
            }
          }
        }); // 无效数据提示

        if (disableSels.length > 0) {
          JE.confirm(JE.value(_cfg.enableTip, '选中的数据无效，请重新选择...'), function (e) {
            if (e.index == 1) {
              // eslint-disable-next-line no-shadow
              JE.each(disableSels, function (id) {
                doSelect(id, false, false);
              });
            }
          }, '', ['取消', '智能剔除无效数据']);
          return;
        } // 格式化数据


        if (['tree', 'user'].indexOf(me.selectwinCfg.type) != -1) {
          JE.each(datas, function (data) {
            // eslint-disable-next-line prefer-destructuring
            data.id = data.id.split('_')[0];
            JE.applyIf(data, data.bean);
          });
        }

        var flag = fn(datas, me.selectwinCfg.pkName);

        if (flag == false) {
          return;
        }
      } // 关闭actionsheet


      mui("#".concat(selectwinId)).popover('hide');
    }; // 初始化值,只能根据主键值初始选中


    var initValue = function initValue() {
      // eslint-disable-next-line no-shadow
      var cfg = me.selectwinCfg;
      var value = cfg.value;
      var type = cfg.type;
      var pkName = cfg.pkName; // eslint-disable-next-line no-shadow

      var cfgs = (cfg.configInfo || '').split(',');
      var fs = JE.isNotEmpty(cfgs[1]) ? cfgs[1].split('~') : [];
      var rs = JE.isNotEmpty(cfgs[2]) ? cfgs[2].split('~') : [];

      if (fs.length != rs.length) {
        return;
      }

      var _pkName = ''; // 表单对应的主键值字段名

      JE.each(rs, function (name, index) {
        if (name == pkName) {
          _pkName = fs[index]; // 如果是表单，但是没有对应的主键字段，自动生成，用于下次初始化值用：一般用于查询界面
          // eslint-disable-next-line no-shadow

          var _type = document.documentElement.getAttribute('data-type');

          if (['form', 'search'].indexOf(_type) != -1 && window.APP && window.APP.form) {
            // 添加默认字段
            var field = window.APP.form.getFields(_pkName);

            if (!field) {
              var form = JE.select('.je-form');
              var dom = document.createElement('input');
              dom.setAttribute('type', 'hidden');
              dom.setAttribute('class', 'je-submit-field');
              dom.setAttribute('data-name', _pkName);
              form.appendChild(dom);

              window.APP.form._createField({
                name: _pkName,
                xtype: 'textfield',
                dom: dom,
                options: {}
              });
            }

            value = window.APP.form.getValues(_pkName);
          }

          return false;
        }
      }); // 如果值为空或者没有对应的主键字段，取消默认选中

      if (JE.isEmpty(value) || JE.isEmpty(_pkName)) {
        return;
      } // 更新选中数据


      if (['tree', 'user'].indexOf(type) != -1) {
        var valueType = pkName; // eslint-disable-next-line no-unused-vars

        var dicCode = ''; // 人员

        if (me.selectwinCfg.type == 'user') {
          dicCode = JE.get(dataId).querySelector('.user-type .mui-active').getAttribute('data-code');
        } // 查询节点


        JE.ajax({
          // url:'/dd/treeAction!findAsyncNodes.action',
          url: JE.getUrlMaps('je.core.dd.tree.findAsyncNodes'),
          params: {
            type: valueType || 'code',
            value: value,
            strData: JE.encode(me.selectwinCfg.treeConfig.dicCfgList)
          },
          callback: function callback(success, obj) {
            var htmls = [];
            JE.each(obj, function (node) {
              var _node = node,
                  id = _node.id;

              if (!me.selectwinCfg.dataMap[id]) {
                node.bodyTpl = node.text;
                me.selectwinCfg.dataMap[id] = node;
              }

              node = me.selectwinCfg.dataMap[id];
              var itemHtml = JE.toXT(me.selectwinItemValTpl, {
                id: id,
                bodyTpl: node.bodyTpl
              });
              htmls.push(itemHtml);
              me.selectwinCfg.selections.push(id);
            }); // 插入数据

            JE.get("".concat(valId, "-view")).innerHTML = htmls.join(''); // eslint-disable-next-line no-use-before-define

            initSelectValue();
          }
        });
        /* JE.each(value.split(','),function(val){
          for(var key in dataMap){
            node = dataMap[key];
            val = valueType == 'id' && JE.isNotEmpty(dicCode)?val+'_'+dicCode : val;
            if(node && node[valueType] == val){
              var itemHtml = JE.toXT(me.selectwinItemValTpl,{id:key,bodyTpl:node.bodyTpl4Path});
              html += itemHtml;
              me.selectwinCfg.selections.push(key);
              break;
            }
          }
        });
        //插入数据
        JE.get(valId+'-view').innerHTML = html;
        initSelectValue(); */
      } else {
        var app = me.selectwinCfg.app;
        var whereSql = " and ".concat(pkName, " in ('").concat(value.replaceAll(',', "','"), "')");
        JE.ajax({
          // url:JE.value(app.action,'/je/dynaAction')+'!load.action',
          // url:JE.value(app.action,JE.getUrlMaps('je.core')),
          url: JE.value(JE.replaceOldUrl(app.action), JE.getUrlMaps('je.core')) + JE.getUrlMaps('method.load'),
          params: {
            tableCode: app.tableName,
            limit: -1,
            whereSql: whereSql,
            orderSql: app.orderSql
          },
          callback: function callback(success, obj) {
            var dataview = JE.get("".concat(valId, "-view")); // 填充数据

            var html = '';

            if (JE.isNotEmpty(obj.rows)) {
              if (app.renderer || app.itemTpl) {
                JE.each(obj.rows, function (row) {
                  var bodyTpl = JE.isEmpty(app.itemTpl) ? app.renderer(row) : app.itemTpl;
                  var id = row[pkName];
                  me.selectwinCfg.dataMap[id] = row;
                  bodyTpl = JE.toXT(bodyTpl, row);
                  var itemHtml = JE.toXT(me.selectwinItemValTpl, {
                    id: id,
                    bodyTpl: bodyTpl
                  });
                  html += itemHtml;
                  me.selectwinCfg.selections.push(id);
                });
              }
            } // 插入数据


            dataview.innerHTML = html; // eslint-disable-next-line no-use-before-define

            initSelectValue();
          }
        });
      }
    }; // 初始选择数据


    var initSelectValue = function initSelectValue() {
      // 更新选中数据
      var valDoms = JE.get(valId).querySelectorAll('.mui-table-view-cell');
      var vals = [];
      JE.each(valDoms, function (dom) {
        var id = dom.getAttribute('data-id');
        vals.push(id);
      });
      var dataCheckbox = [];

      if (vals.length > 0) {
        dataCheckbox = JE.get(dataId).querySelectorAll('input[type=checkbox]');
      } else {
        dataCheckbox = JE.get(dataId).querySelectorAll('input[type=checkbox]:checked');
      }

      JE.each(dataCheckbox, function (checkbox) {
        var id = checkbox.getAttribute('data-id');
        checkbox.checked = vals.indexOf(id) != -1;
        checkbox.parentNode.classList[checkbox.checked ? 'add' : 'remove']('select');
      }); // 更新选中数据数

      JE.get("".concat(dataId, "-selectnum")).innerHTML = vals.length;
    }; // 查询


    var doSearch = function doSearch(keyword) {
      if (['tree', 'user'].indexOf(me.selectwinCfg.type) != -1) {
        me.selectwinTreeInfo.keyword = keyword;
        var rootId = 'ROOT';
        var dicInfo = me.selectwinCfg.treeConfig.dicCfgList[0];

        if (me.selectwinCfg.type == 'user') {
          var active = JE.get(dataId).querySelector('.user-type .mui-active');
          rootId = "ROOT_".concat(active.getAttribute('data-code'));
        } else if (dicInfo && JE.isNotEmpty(dicInfo.nodeInfo)) {
          rootId = "ROOT_".concat(dicInfo.nodeInfo);
        }

        if (JE.isEmpty(keyword)) {
          // eslint-disable-next-line no-use-before-define
          loadTree(rootId);
        } else if (!me.selectwinCfg.async) {
          var nodes = [];
          JE.each(me.selectwinCfg.dataMap, function (item) {
            if (item.id.indexOf('ROOT') != 0 && item.text.indexOf(keyword) != -1) {
              var cloneItem = JE.clone(item);
              cloneItem.bodyTpl = cloneItem.bodyTpl4Path;
              nodes.push(cloneItem);
            }
          });
          var view = JE.get(''.concat(dataId, '-view'));
          var path = JE.get(''.concat(dataId, '-treepath'));

          if (JE.isNotEmpty(nodes)) {
            var html = JE.toXT(me.selectwinItemTpl, nodes);
            view.innerHTML = html;
            path.innerHTML = '请从查询结果中选择数据';
          } else {
            view.innerHTML = '';
            path.innerHTML = '没有符合条件的数据';
          }

          initSelectValue();
        } else {
          // 查询节点
          JE.ajax({
            // url:'/dd/treeAction!findAsyncNodes.action',
            url: me.selectwinCfg.url || JE.getUrlMaps('je.core.dd.tree.findAsyncNodes'),
            params: {
              type: 'liketext',
              value: keyword,
              strData: JE.encode([dicInfo])
            },
            callback: function callback(success, obj) {
              var nodes = [];
              JE.each(obj, function (node) {
                if (!me.selectwinCfg.dataMap[node.id]) {
                  node.bodyTpl = node.text;
                  me.selectwinCfg.dataMap[node.id] = node;
                }

                nodes.push(me.selectwinCfg.dataMap[node.id]);
              });
              var view = JE.get("".concat(dataId, "-view"));
              var path = JE.get("".concat(dataId, "-treepath"));

              if (JE.isNotEmpty(nodes)) {
                var _html = JE.toXT(me.selectwinItemTpl, nodes);

                view.innerHTML = _html;
                path.innerHTML = '请从查询结果中选择数据';
              } else {
                view.innerHTML = '';
                path.innerHTML = '没有符合条件的数据';
              }

              initSelectValue();
            }
          });
        }

        JE.get("".concat(dataId, "-treepath-up")).style.display = 'none';
      } else {
        var searchSql = '';
        var searchs = me.selectwinCfg.app.info.searchs;

        if (JE.isEmpty(searchs)) {
          JE.msg('没有配置查询项');
        }

        if (JE.isNotEmpty(keyword)) {
          var keySqls = [];
          searchs = JE.isString(searchs) ? searchs.split(',') : searchs;
          JE.each(searchs, function (s) {
            if (JE.isString(s)) {
              s = {
                code: s,
                search: 'like'
              };
            }

            var type = JE.value(s.search, 'no');

            if (type != 'no') {
              keySqls.push(JE.buildWhereSql({
                code: s.code,
                value: keyword,
                type: type
              }));
            }
          });

          if (keySqls.length > 0) {
            searchSql = " and (".concat(keySqls.join(' OR '), ")");
          }
        }

        me.selectwinCfg.searchSql = searchSql; // eslint-disable-next-line no-use-before-define

        loadPage(1);
      }

      if (me.selectwinCfg.multiple) {
        mui("#".concat(selectwinId, " .mui-slider")).slider().gotoItem(0);
      }

      var searchclear = JE.get("".concat(selectwinId, "-searchclear"));
      searchclear.style.display = JE.isEmpty(keyword) ? 'none' : 'inherit';
    };
    /**
     * 初始化树形节点数据
     * @param {Object} node
     */


    var buildNodeMap = function buildNodeMap(node) {
      me.selectwinCfg.dataMap[node.id] = node; // 同步数据

      if (!me.selectwinCfg.async) {
        node.loaded = true;
      }

      var parentId = node.id;
      var children = node.children || [];
      me.selectwinCfg.counts.ROOT += children.length;

      if (JE.isNotEmpty(node.nodeInfo)) {
        me.selectwinCfg.counts["ROOT_".concat(node.nodeInfo)] = me.selectwinCfg.counts["ROOT_".concat(node.nodeInfo)] || 0;
        me.selectwinCfg.counts["ROOT_".concat(node.nodeInfo)] += children.length;
      }

      JE.each(children, function (item) {
        item.parentId = parentId;
        item.path = (JE.isEmpty(node.path) ? '' : "".concat(node.path, "/")) + item.text; // 路径

        JE.each(['id', 'code', 'text'], function (key) {
          var name = "".concat(key, "_");
          item[name] = (JE.isEmpty(node.name) ? '' : "".concat(node.name, "/")) + item[key];
        });
        item.bodyTpl = item.text;
        item.bodyTpl4Path = "".concat(item.text, "<p class=\"tree-node-path\">").concat(item.path, "</p>");
        buildNodeMap(item);
      });
    }; // 加载树形数据
    // eslint-disable-next-line no-shadow


    var loadTree = function loadTree(id, cfg) {
      var dataMap = me.selectwinCfg.dataMap;
      cfg = cfg || {}; // 初始化数据

      if (JE.isEmpty(dataMap) && id == 'ROOT') {
        var dicInfo = me.selectwinCfg.treeConfig.dicCfgList[0];
        id = JE.isEmpty(dicInfo.nodeInfo) ? 'ROOT' : "ROOT_".concat(dicInfo.nodeInfo);
        var root = {
          id: id,
          nodeInfo: dicInfo.nodeInfo,
          children: [],
          text: '全部'
        };
        me.selectwinCfg.dataMap = dataMap = {};
        me.selectwinCfg.dataMap[id] = root;
        me.selectwinCfg.counts = {
          ROOT: 0
        };
        me.selectwinCfg.counts[id] = 0;
      }

      var node = dataMap[id];

      if (JE.isEmpty(node)) {
        return;
      } // 树形配置信息


      var treeCfg = me.selectwinCfg.treeConfig;

      if (node.loaded) {
        if (cfg.buildView != false) {
          // eslint-disable-next-line no-use-before-define
          buildTreeView(node);
        }

        if (cfg.callback) {
          cfg.callback();
        }
      } else {
        // 加载数据
        var params = treeCfg.params;

        if (id.split('_')[0] != 'ROOT') {
          var nodeId = id.split('_')[0]; // 修改rootid

          var strData = JE.decode(params.strData);
          JE.each(strData, function (item) {
            if (JE.isEmpty(item.nodeInfo) || item.nodeInfo == node.nodeInfo) {
              item.rootId = nodeId;
              item.isRoot = '0';
              strData = [item];
              return false;
            }
          });
          params.strData = JE.encode(strData);
        }

        JE.ajax({
          url: treeCfg.url,
          params: params,
          callback: function callback(success, obj) {
            node.children = obj;
            node.loaded = true;
            buildNodeMap(node);

            if (cfg.buildView != false) {
              // eslint-disable-next-line no-use-before-define
              buildTreeView(node);
            }

            if (cfg.callback) {
              cfg.callback();
            }
          }
        });
      }
    };

    var buildTreeView = function buildTreeView(node) {
      var data = node;

      if (JE.isEmpty(data.children)) {
        return;
      }

      var _node2 = node,
          id = _node2.id;
      var dataMap = me.selectwinCfg.dataMap;
      var _data = data,
          nodeInfo = _data.nodeInfo;
      var parentId = data.parentId || '';
      console.log(data.children);
      var html = JE.toXT(me.selectwinItemTpl, data.children);
      var dataview = JE.get(dataId);
      var view = dataview.querySelector('.mui-table-view');
      var path = dataview.querySelector('.je-selectwin-tree-path');
      view.innerHTML = html;
      var parent = [];

      if (JE.isNotEmpty(parentId)) {
        var _tpl = "<span class='item' data-id='{id}'>{text}</span>";
        parent = [];

        if (JE.isNotEmpty(data.text)) {
          parent.push(data.text);
        }

        var rootId = 'ROOT';

        while (dataMap[data.parentId]) {
          data = dataMap[data.parentId];

          if (!data || data.id.split('_')[0] == 'ROOT') {
            rootId = data.id;
            break;
          }

          parent.unshift(JE.toXT(_tpl, data));
        }

        var displayCount = 3;
        var _parent = parent,
            length = _parent.length;

        if (length > displayCount) {
          parent = parent.slice(length - displayCount, length);
          parent.unshift('...');
        }

        if (length > 0) {
          parent.unshift(JE.toXT(_tpl, {
            id: rootId,
            text: '全部'
          }));
        }
      }

      path.innerHTML = parent.join(' > ');
      JE.get("".concat(selectwinId, "-checkall")).checked = false;
      initSelectValue();
      var up = JE.get("".concat(dataId, "-treepath-up"));

      if (id.split('_')[0] == 'ROOT') {
        up.setAttribute('data-id', '');
        up.style.display = 'none';
      } else {
        node = me.selectwinCfg.dataMap[id];
        up.setAttribute('data-id', node.parentId);
        up.style.display = 'inherit';
      }

      me.selectwinPullRefresh.scrollTo(0, 0);
      JE.get("".concat(dataId, "-totalnum")).innerHTML = me.selectwinCfg.counts[JE.isEmpty(nodeInfo) ? 'ROOT' : "ROOT_".concat(nodeInfo)];
    }; // 加载列表数据


    var loadPage = function loadPage(page, _callback) {
      // eslint-disable-next-line no-shadow
      var cfg = me.selectwinCfg;
      var app = cfg.app.info;
      var whereSql = app.whereSql + cfg.searchSql + cfg.whereSql;
      whereSql = JE.toXT(whereSql);
      JE.showWaiting('加载中...');
      me.selectwinStore.loadPage(page, {
        params: {
          whereSql: whereSql
        },
        callback: function callback(obj, store) {
          var dataview = JE.get(dataId).querySelector('.mui-table-view');
          var pagetext = JE.get(dataId).querySelector('.pagetext'); // 关闭等待提示

          JE.closeWaiting(); // 填充数据

          var datas = obj.rows;
          var html = '';

          if (JE.isNotEmpty(datas)) {
            if (app.renderer || app.itemTpl) {
              var num = store.start + 1; // 序号

              var data = [];
              JE.each(datas, function (row, index) {
                var id = row[store.idName];
                var bodyTpl = JE.isEmpty(app.itemTpl) ? app.renderer(row) : app.itemTpl;
                bodyTpl = bodyTpl.replaceAll('{#}', index + num);
                data.push({
                  id: id,
                  bodyTpl: JE.toXT(bodyTpl, row)
                });
              });
              html = JE.toXT(me.selectwinItemTpl, data);
            }
          }

          me.selectwinCfg.dataMap = store.dataMap; // 插入数据

          if (store.page == 1) {
            dataview.innerHTML = html;
          } else {
            dataview.innerHTML += html;
          } // 重置总条数，总页数


          JE.get("".concat(dataId, "-totalnum")).innerHTML = store.totalCount; // JE.getEl(pagetext)[store.page >= store.totalPage ? 'addClass' : 'removeClass']('text-disable');
          // pagetext.innerHTML = `第${store.page}页/共${store.totalPage}页`;
          // pagetext.style.display = store.totalPage > 1 ? '' : 'none';

          if (_callback) {
            _callback();
          }

          if (store.totalCount < store.pageSize || store.totalPage == store.page) {
            // 禁用上拉
            me.selectwinPullRefresh.disablePullupToRefresh();
          } else {
            // 启用上拉
            me.selectwinPullRefresh.enablePullupToRefresh();
          }

          JE.get("".concat(selectwinId, "-checkall")).checked = false;
          initSelectValue();
        }
      });
    }; // 初始化


    me.selectwinCfg = cfg;
    me.selectwinCfg.dataMap = {};
    me.selectwinCfg.selections = [];
    me.selectwinCfg.whereSql = JE.value(cfg.whereSql, '');
    me.selectwinCfg.multiple = ['M_', 'M'].indexOf(cfgs[3]) != -1;
    me.selectwinCfg.async = ['M_', 'S_'].indexOf(cfgs[3]) != -1; // 是否异步
    // 下拉刷新

    me.selectwinPullRefresh = mui("#".concat(dataId, " .mui-scroll-wrapper"), selectwin).pullRefresh4HTML({
      down: {
        callback: function callback() {
          var self = this;
          loadPage(1, function () {
            self.endPulldownToRefresh();
          });
        }
      },
      up: {
        contentinit: '',
        contentdown: '',
        callback: function callback() {
          var self = this;
          loadPage(me.selectwinStore.page + 1, function () {
            self.endPullupToRefresh();
          });
        }
      }
    });
    me.selectwinPullRefresh.enablePulldown = cfg.type == 'list';
    cfg.type != 'list' && me.selectwinPullRefresh.disablePullupToRefresh();
    me.selectwinPullRefresh.scrollTo(0, 0, 500); // 500毫秒滚动到顶
    // 候选列表滚动条

    mui("#".concat(valId, " .mui-scroll-wrapper"), selectwin).scroll({
      bounce: false,
      indicators: true,
      // 是否显示滚动条
      deceleration: mui.os.ios ? 0.003 : 0.0009
    });
    var slider = mui("#".concat(selectwinId, " .mui-slider")).slider({
      scrollTime: 0,
      bounce: false,
      // 是否启用回弹
      bounceTime: 500 // 回弹动画时间

    });
    slider.gotoItem(0); // 单选不滑动

    if (!me.selectwinCfg.multiple) {
      slider.destroy();
    }

    var sswinEl = JE.getEl(selectwinId);
    sswinEl[me.selectwinCfg.multiple ? 'addClass' : 'removeClass']('multiple');
    sswinEl[cfg.type == 'list' ? 'addClass' : 'removeClass']('list');
    sswinEl[cfg.type != 'list' ? 'addClass' : 'removeClass']('tree');
    sswinEl[cfg.type == 'user' ? 'addClass' : 'removeClass']('user'); // 人员选择器
    // 清空数据

    JE.get("".concat(valId, "-view")).innerHTML = '';
    JE.get("".concat(dataId, "-view")).innerHTML = '';
    JE.get("".concat(dataId, "-treepath")).innerHTML = '';
    JE.get("".concat(dataId, "-treepath-up")).style.display = 'none';
    JE.get("".concat(dataId, "-searchback")).style.display = 'none';
    JE.get("".concat(selectwinId, "-searchinput")).value = '';
    JE.get("".concat(selectwinId, "-searchinput")).setAttribute('placeholder', cfg.title || '输入关键字查询');
    JE.get("".concat(selectwinId, "-searchinput")).blur();
    JE.get("".concat(selectwinId, "-searchclear")).style.display = 'none'; // 辅助配置项

    if (JE.isNotEmpty(cfg.otherConfig)) {
      var otherConfig = JE.isString(cfg.otherConfig) ? JE.decode(cfg.otherConfig) : cfg.otherConfig; // 主键

      if (JE.isNotEmpty(otherConfig.pkName)) {
        me.selectwinCfg.pkName = otherConfig.pkName;
      }
    } // 请求数据


    if (['tree', 'user'].indexOf(cfg.type) != -1) {
      me.selectwinTreeInfo = {
        keyword: ''
      };
      me.selectwinCfg.pkName = JE.value(me.selectwinCfg.pkName, 'code'); // 主键

      me.selectwinCfg.selectType = JE.value(cfgs[4], 'T'); // N(上下都不级联) | T(选父节点级联选中子节点) | D(选子节点级联选择父节点) | A(上下全部级联)
      // 根节点过滤

      var rootId = ''; // JE.toXT(JE.value(otherConfig.rootId,''),me.formatData,me.parentData);
      // url取值

      if (JE.isEmpty(rootId) && (_code.split('/').length > 1 || _code.split('\\').length > 1)) {
        // url
        rootId = '__url';
      } // 查询选择的树形默认异步操作


      var ddList = [{
        // eslint-disable-next-line max-len
        ddCode: _code,
        ddName: '',
        async: me.selectwinCfg.async,
        whereSql: me.selectwinCfg.whereSql,
        orderSql: '',
        parentSql: '',
        rootId: rootId,
        nodeInfo: _code,
        params: me.selectwinCfg.params || {},
        initParams: {},
        moreRoot: false,
        queryField: '',
        nodeField: '',
        formatValue: ''
      }]; // var url = '/dd/treeAction!loadTree.action',

      var url = JE.getUrlMaps('je.core.dd.tree.loadTree');
      var params = {
        node: 'ROOT',
        onlyItem: true,
        excludes: 'checked',
        strData: JE.encode(ddList)
      };

      if (cfg.type == 'user') {
        // url = 'rbac/userAction!loadAppUser.action';
        url = JE.getUrlMaps('je.core.rbac.user.loadAppUser');
        params = {
          whereSql: me.selectwinCfg.whereSql
        };
        ddList = [];
        mui("#".concat(dataId, " .user-type .mui-control-item")).each(function (index) {
          var dom = _this2;
          var code = dom.getAttribute('data-code');

          if (index == 0) {
            if (!dom.classList.contains('mui-active')) {
              dom.classList.add('mui-active');
            }
          } else if (dom.classList.contains('mui-active')) {
            dom.classList.remove('mui-active');
          }

          var obj = {
            // eslint-disable-next-line max-len
            ddCode: code,
            ddName: '',
            async: false,
            whereSql: me.selectwinCfg.whereSql,
            orderSql: '',
            parentSql: '',
            rootId: rootId,
            nodeInfo: code,
            params: me.selectwinCfg.params || {},
            initParams: {},
            moreRoot: false,
            queryField: '',
            nodeField: '',
            formatValue: ''
          };
          ddList.push(obj);
        });
      }

      var dicCfg = {};
      JE.each(ddList, function (item) {
        dicCfg[item.ddCode] = item;
      }); // 树形配置信息

      me.selectwinCfg.treeConfig = {
        params: Ext.apply(params, me.selectwinCfg.params || {}),
        url: me.selectwinCfg.url || url,
        dicCfg: dicCfg,
        dicCfgList: ddList
      };
      loadTree('ROOT', {
        callback: function callback() {
          initValue();
        }
      });
    } else {
      var app = me.selectwinCfg.app.info;
      app.whereSql = JE.value(app.whereSql, '');
      app.orderSql = JE.value(app.orderSql, '');
      app.renderer = JE.isString(app.renderer) ? JE.eval(app.renderer) : app.renderer;
      app.itemTpl = JE.value(app.itemTpl, '');
      me.selectwinCfg.pkName = JE.value(me.selectwinCfg.pkName, app.pkName);
      me.selectwinCfg.searchSql = '';
      me.selectwinStore = JE.createStore({
        idName: me.selectwinCfg.pkName,
        // url:JE.value(app.action,'/je/dynaAction')+'!load.action',
        url: JE.value(JE.replaceOldUrl(app.action), JE.getUrlMaps('je.core')) + JE.getUrlMaps('method.load'),
        // url:JE.value(app.action,JE.getUrlMaps('je.core.load')),
        params: {
          tableCode: app.tableName,
          orderSql: app.orderSql
        }
      });
      loadPage(1);
      initValue();
    }

    mui("#".concat(selectwinId)).popover('show');
  }
};
exports["default"] = _default;

/***/ }),

/***/ "./src/core/je/util/Cache.js":
/*!***********************************!*\
  !*** ./src/core/je/util/Cache.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
// 页面缓存
window.__cache__ = window.__cache__ || {};
/**
 * 构建缓存key
 * @param {String} key 键
 * @param {String} type 类型
 * @returns {String}
 */

var _versionKey = function _versionKey(key, type) {
  return "".concat(key).concat(type ? "_".concat(type) : '', "_").concat(JE.getApkCode());
};
/**
 * 设置缓存
 * @param {*} key 缓存键
 * @param {*} val 缓存值
 * @param {*} [type] 缓存类型
 */


var _setCache = function _setCache(key, val, type) {
  key = _versionKey(key, type);

  if (JE.isEmpty(val)) {
    _clearCache(key, type);
  } else if (window.plus) {
    JE.setLSItem(key, val);
  } else {
    window.__cache__[key] = val;
  }
};
/**
 * 获取缓存
 * @param {*} key 缓存键
 * @param {*} [type] 缓存类型
 * @returns {*} 缓存值
 */


var _getCache = function _getCache(key, type) {
  key = _versionKey(key, type);

  if (window.plus) {
    return JE.getLSItem(key);
  }

  return window.__cache__[key];
};
/**
 * 删除缓存
 * @param {*} key 缓存键
 * @param {*} [type] 缓存类型
 */


var _clearCache = function _clearCache(key, type) {
  key = _versionKey(key, type);

  if (window.plus) {
    JE.setLSItem(key);
  }

  delete window.__cache__[key];
};

var _default = {
  /**
   * 设置缓存
   * @param {*} key 缓存键
   * @param {*} val 缓存值
   * @param {*} [type] 缓存类型
   */
  setCache: function setCache(key, val, type) {
    _setCache(key, val, type);
  },

  /**
   * 获取缓存
   * @param {*} key 缓存键
   * @param {*} [type] 缓存类型
   * @returns {*} 缓存值
   */
  getCache: function getCache(key, type) {
    return _getCache(key, type);
  },

  /**
   * 删除缓存
   * @param {*} key 缓存键
   * @param {*} [type] 缓存类型
   */
  clearCatch: function clearCatch(key, type) {
    _clearCache(key, type);
  }
};
exports["default"] = _default;

/***/ }),

/***/ "./src/core/je/util/ajax.js":
/*!**********************************!*\
  !*** ./src/core/je/util/ajax.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetch = fetch;
exports.ajax = ajax;

var _axios = _interopRequireDefault(__webpack_require__(/*! axios */ "./node_modules/_axios@0.18.1@axios/index.js"));

var _qs = _interopRequireDefault(__webpack_require__(/*! qs */ "./node_modules/_qs@6.7.0@qs/lib/index.js"));

/**
 * Ajax类.
 * @module JE/ajax
 */
// 从Example分支开发代码
// 从p-蒜瓣云合并
_axios["default"].interceptors.request.use(function (config) {
  config.baseURL = config.serverPath || JE.getServerPath();
  config.method = config.method.toLowerCase(); // 请求头

  config.headers = JE.apply({
    'Platform-Agent': 'AppleWebKit/537.36 (KHTML, like Gecko)',
    'X-Requested-With': 'XMLHttpRequest',
    'Content-Type': config.method === 'post' ? 'application/x-www-form-urlencoded; charset=UTF-8' : 'application/json; charset=UTF-8',
    authorization: JE.getLSItem('authorization') || ''
  }, config.headers || {}); // 参数加密

  var info = JE.DES(config.method == 'post' ? config.data : config.params);

  if (info && info._dessuccess) {
    config.headers[info.code] = info.value; // 修复参数加密后修改原对象的bug 此处本来能在入参的时候处理好请求参数，但有可能在后续的操作当中继续取get请求当中的params，所以做不同的赋值

    if (config.method == 'post') {
      config.data = info.data;
    } else {
      config.params = info.data;
    }
  } // 设置请求参数


  if (config.method == 'post') {
    if (!config.upload) {
      config.data = _qs["default"].stringify(config.data);
    }

    delete config.params;
  } else {
    delete config.data;
  }

  return config;
}, function (error) {
  if (error.response) {
    switch (error.response.status) {
      case 401:
        break;

      case 500:
        error.message = '请求500';
        break;

      default:
        error.message = "\u8FDE\u63A5\u9519\u8BEF".concat(error.response.status);
    }
  }

  console.log(error); // eslint-disable-next-line prefer-promise-reject-errors

  return Promise.reject({
    code: '-100',
    message: '网络异常请稍后再试！'
  });
}); // 响应拦截器即异常处理


_axios["default"].interceptors.response.use(function (response) {
  var data = response.data,
      status = response.status;

  if (status === 200) {
    if (data !== null) {
      if (data.success === false) {
        // 用户失效
        if (data.code == 'UNKOWN_LOGINUSER') {
          JE.msg('用户失效，请重新登录！');
          JE.setLSItem('authorization');
          JE.logout();
        }
      }
    }
  }

  return response;
}, function (error) {
  if (error && error.response) {
    switch (error.response.status) {
      case 401:
        error.message = '未授权，请重新登录';
        break;

      case 403:
        error.message = '拒绝访问';
        break;

      case 404:
        error.message = '链接不存在';
        break;

      default:
        error.message = "\u8FDE\u63A5\u9519\u8BEF".concat(error.response.status);
    }
  } else {
    error.message = '连接到服务器失败';
  }

  return Promise.reject(error.response || error);
});
/**
 * ajax请求
 * @param {String} url 请求链接
 * @param {String} params 请求参数
 * @param {Object} [config] axios配置项
 * @returns {Promise}
 */


function fetch(url, params) {
  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  JE.applyIf(config, {
    method: 'post',
    withCredentials: true,
    responseType: 'json',
    timeout: 10000,
    url: url,
    params: params,
    data: params
  }); // 增加页面调试参数

  return !(window.plus && mui.os.ios) // || config.upload || window._ajax_debug
  ? new Promise(function (resolve, reject) {
    (0, _axios["default"])(config).then(function (_ref) {
      var status = _ref.status,
          data = _ref.data;

      if (status === 200) {
        resolve(data);
      } else {
        reject(data);
      }
    })["catch"](function (error) {
      reject(error);
    });
  }) : muiFetch(url, params, config);
} // 错误提示


var errorMsg = function errorMsg(type, msg) {
  switch (type) {
    case 'timeout':
      msg = '数据请求超时，请重试!';
      break;

    case 'abort':
      msg = '服务器请求中断，请检查网络！';
      break;

    case 'parsererror':
      msg = 'JSON数据解析出错，请检查!';
      msg = '数据出错了，请联系管理员！';
      break;

    case '404':
      msg = '请求链接错误，请检查！';
      break;

    default:
      msg = msg || '请求出错，请联系管理员！';
  }

  return msg;
};
/**
 * mui ajax
 * @param {String} url 请求链接
 * @param {String} params 参数
 * @param {Object} config 配置项
 * @returns {Promise}
 */


var muiFetch = function muiFetch(url, params, config) {
  var server = JE.getServerPath() || "http://".concat(window.location.host);

  if (url && url.indexOf('http') != 0) {
    // 请求链接
    url = server + url;
  } // 请求类型


  config.type = (config.type || config.method || 'post').toLowerCase(); // 请求头

  config.headers = JE.apply({
    'Platform-Agent': 'AppleWebKit/537.36 (KHTML, like Gecko)',
    'X-Requested-With': 'XMLHttpRequest',
    authorization: JE.getLSItem('authorization') || ''
  }, config.headers || {}); // 请求参数加密

  config.data = JE.isNotEmpty(params) && params || config.data || config.params || {}; // 删除请求中的无效数据

  config.data = removeInvalidData(config.data);
  delete config.params;
  var info = JE.DES(config.data);

  if (info && info._dessuccess) {
    config.headers[info.code] = info.value; // 修复参数加密后修改原对象的bug 此处本来能在入参的时候处理好请求参数，但有可能在后续的操作当中继续取get请求当中的params，所以做不同的赋值

    config.data = info.data;
  } // 其他参数


  config = JE.apply({
    dataType: config.responseType || 'json',
    // 服务器返回json格式数据
    type: 'post',
    // HTTP请求类型
    timeout: 30000,
    // 0表示永不超时
    crossDomain: true,
    contentType: config.type === 'post' ? 'application/x-www-form-urlencoded; charset=UTF-8' : 'application/json; charset=UTF-8'
  }, config);
  return new Promise(function (resolve, reject) {
    mui.plusReady(function () {
      config.success = function (data) {
        JE.closeWaiting();
        resolve(data);

        if (data.success && data.success == false && data.code == 'UNKOWN_LOGINUSER') {
          JE.msg('用户失效，请重新登录！');
          JE.setLSItem('authorization');
          JE.logout();
        }
      };

      config.error = function (xhr, type, errorThrown) {
        JE.closeWaiting(); // 异常处理；

        var msg = errorMsg(type, errorThrown && errorThrown.message);
        var data = {
          type: type,
          msg: msg,
          success: false
        }; //iOS 审核禁止提醒
        // mui.toast(msg);

        reject(data);
      };

      mui.ajax(url, config);
    });
  });
};
/**
 * ajax请求，适配老代码
 * @example
 *   //普通异步请求
 *   JE.ajax({url:'',params:{},callback:function(success,data){}});
 *   //Promise
 *   JE.ajax({url:'',params:{}}).then((data)=>{});
 *   //同步请求
 *   await JE.ajax({url:'',params:{},async:false});
 *
 * @param {Object} config 配置信息
 * @param {String} config.url 请求链接
 * @param {Object} config.params 请求的参数
 * @param {Boolean} [config.async] 异步
 * @param {Function} config.callback 回调函数
 * @returns {Object}
 */


function ajax(config) {
  config = config || {}; // 回调函数

  var callbackFn = config.callback;
  var successFn = config.success;
  var errorFn = config.error;
  delete config.callback;
  delete config.success;
  delete config.error; // 同步，需要增加await

  if (config.async === false || JE.isEmpty(callbackFn) && JE.isEmpty(successFn) && JE.isEmpty(errorFn)) {
    return fetch(config.url, config.params, config);
  } // 异步


  return fetch(config.url, config.params, config).then(function (data) {
    successFn && successFn(data);
    callbackFn && callbackFn(true, data);
  })["catch"](function (data) {
    errorFn && errorFn(data);
    callbackFn && callbackFn(false, data);
  });
}
/**
 * 删除请求中无效的数据
 */


function removeInvalidData(data) {
  var retData = {};

  if (JE.isObject(data)) {
    (Object.keys(data) || []).forEach(function (key) {
      var val = data[key];

      if (val) {
        retData[key] = val;
      }
    });
    return retData;
  } else {
    return data;
  }
}

/***/ }),

/***/ "./src/core/je/util/array.js":
/*!***********************************!*\
  !*** ./src/core/je/util/array.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

/**
 * @Author : ZiQin Zhai
 * @Date : 2019/11/11 16:36
 * @Version : 1.0
 * @Last Modifined by : ZiQin Zhai
 * @Last Modifined time : 2019/11/11 16:36
 * @Description 数组相关的助手函数
 * */
var _default = {
  /**
   * 数组去重
   * @param arr
   * @return {*}
   */
  unique: function unique(arr) {
    if (!Array.isArray(arr)) {
      console.error("\u4F20\u5165\u7684\u53C2\u6570\u4E0D\u662F\u4E00\u4E2A\u6570\u7EC4\u7C7B\u578B,\u3010".concat(Object.prototype.toString.call(arr), "\u3011"));
      return;
    }

    var res = new Map();
    return arr.filter(function (a) {
      return !res.has(a) && res.set(a, 1);
    });
  }
};
exports["default"] = _default;

/***/ }),

/***/ "./src/core/je/util/date.js":
/*!**********************************!*\
  !*** ./src/core/je/util/date.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.date = date;
exports.dateFormat = dateFormat;
exports.dateParse = dateParse;
exports.dateClearTime = dateClearTime;
exports.dateFormat4Msg = dateFormat4Msg;
exports.dateFormat4Time = dateFormat4Time;
exports.parseExtDateFormat = parseExtDateFormat;

var _dayjs = _interopRequireDefault(__webpack_require__(/*! dayjs */ "./node_modules/_dayjs@1.8.18@dayjs/dayjs.min.js"));

__webpack_require__(/*! dayjs/locale/zh-cn */ "./node_modules/_dayjs@1.8.18@dayjs/locale/zh-cn.js");

var _relativeTime = _interopRequireDefault(__webpack_require__(/*! dayjs/plugin/relativeTime */ "./node_modules/_dayjs@1.8.18@dayjs/plugin/relativeTime.js"));

/**
 * date时间操作类,依赖dayjs类库
 * @module JE/date
 */
// 设置时间
_dayjs["default"].locale('zh-cn');

_dayjs["default"].extend(_relativeTime["default"]);
/**
 * 日期对象操作
 * @example
 *  JE.date('2018-01-01').toDate();
 *  JE.date(new Date()).format('YYYY-MM-DD');
 *  //更多方法参考dayjs的API
 * @returns {Object} dayjs
 */


function date() {
  return _dayjs["default"].apply(void 0, arguments);
}
/**
 *  格式化时间
 * @param {Date} date 时间
 * @param {String} format 格式化字符串，默认YYYY-MM-DD HH:mm:ss
 * @returns {String}
 */
// eslint-disable-next-line no-shadow


function dateFormat(date) {
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'YYYY-MM-DD HH:mm:ss';
  return JE.date(date).format(format);
}
/**
 *  解析时间
 * @param {String} dateStr 时间字符串
 * @param {String} format 格式化字符串，默认YYYY-MM-DD HH:mm:ss
 * @returns {String}
 */


function dateParse(dateStr) {
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'YYYY-MM-DD HH:mm:ss';
  return JE.date(dateStr, format).toDate();
}
/**
 * 清空时分秒
 * @param {Date} date 时间
 * @returns {Date}
 */
// eslint-disable-next-line no-shadow


function dateClearTime(date) {
  return JE.date(date).hour(0).minute(0).second(0).toDate();
}
/**
 * 获得日期距离今天的信息
 * @param {Date/String} date 时间
 * @param {String} [formatStr] 格式化字符串，默认YYYY-MM-DD HH:mm:ss
 * @return {String} 格式化好的时间
 */
// eslint-disable-next-line no-shadow


function dateFormat4Msg(date, formatStr) {
  if (JE.isEmpty(date)) {
    return '';
  }

  var today = JE.date();
  var formatDate = JE.date(date, formatStr);
  var diff = formatDate.diff(today, 'days'); // 相差天数

  var week = today.day(); // 星期

  var msg = '';
  var absNum = Math.abs(diff);

  if (absNum < 1) {
    // 当天的日期显示小时
    msg = diff > 0 ? formatDate.toNow() : formatDate.fromNow();
  } else if (week - absNum > 0) {
    // 本周的日期显示本周
    msg = formatDate.format('ddd');
  } else if (formatDate.format('YYYY') == today.format('YYYY')) {
    // 本年的显示月和日
    msg = formatDate.format('MM-DD');
  } else {
    // 完整时间
    msg = formatDate.format('YYYY-MM-DD');
  }

  return msg;
}
/**
 * 时间显示
 * @param {Date/String} date 时间
 * @param {String} [formatStr] 格式化字符串，默认YYYY-MM-DD HH:mm:ss
 * @param {Boolean} [time] 显示时：分
 * @return {String} 格式化好的时间
 */
// eslint-disable-next-line no-shadow


function dateFormat4Time(date, time) {
  if (JE.isEmpty(date)) {
    return '';
  }

  var today = JE.date();
  var formatDate = JE.date(date);
  var curYear = JE.date().year();
  var curMonth = JE.date().month() + 1;
  var curDay = JE.date().date();
  var curDate = "".concat(curYear, "-").concat(curMonth, "-").concat(curDay);
  var time24 = JE.date("".concat(curDate, " 00:00"));
  var diff1 = formatDate.diff(today, 'day'); // 相差天数

  var diff2 = time24.diff(today, 'hour'); // 今天的相差小时数

  var diff3 = formatDate.diff(today, 'hour'); // 相差小时数

  var week = today.day(); // 星期

  var msg = '';
  var absNum = Math.abs(diff1);
  var absHour = Math.abs(diff2); // 当天从零点开始到目前的小时数

  var absrelHour = Math.abs(diff3); // 相差小时

  if (time) {
    if (absrelHour <= absHour) {
      // 当天的日期显示 时：分
      msg = formatDate.format('HH:mm');
    } else if (absrelHour > absHour && absrelHour - absHour < 24) {
      // 昨天的日期显示昨天
      msg = "\u6628\u5929 ".concat(formatDate.format('HH:mm'));
    } else if (week - absNum > 0) {
      // 本周的日期显示本周
      msg = "".concat(formatDate.format('dddd'), " ").concat(formatDate.format('HH:mm'));
    } else if (formatDate.format('YYYY') == today.format('YYYY')) {
      // 本年的显示月和日
      msg = "".concat(formatDate.format('MM-DD'), " ").concat(formatDate.format('HH:mm'));
    } else {
      // 完整时间
      msg = "".concat(formatDate.format('YYYY-MM-DD'), " ").concat(formatDate.format('HH:mm'));
    }
  }

  if (!time) {
    if (absrelHour < absHour) {
      // 当天的日期显示 时：分
      msg = formatDate.format('HH:mm');
    } else if (absrelHour > absHour && absrelHour - absHour < 24) {
      // 昨天的日期显示昨天
      msg = '昨天';
    } else if (week - absNum > 0) {
      // 本周的日期显示本周
      msg = formatDate.format('dddd');
    } else if (formatDate.format('YYYY') == today.format('YYYY')) {
      // 本年的显示月和日
      msg = formatDate.format('MM-DD');
    } else {
      // 完整时间
      msg = formatDate.format('YYYY-MM-DD');
    }
  } // 列表：
  // 当天：时：分
  // 昨天：昨天，时：分
  // 本周：周几，时：分
  // 当前：月 - 日，时：分
  // 更早：年 - 月 - 日，时：分


  return msg;
}
/**
 * Ext的日期字符串转成通用的
 * @param {String} str ext的Date格式化字符串
 * @returns {String} 通用的Date格式化字符串
 */


function parseExtDateFormat(str) {
  return (str || '').replace('Y', 'YYYY') // 2010
  .replace('y', 'YY') // 10
  .replace('m', 'MM') // 01-12
  .replace('n', 'M') // 1-12
  .replace('d', 'DD') // 01-31
  .replace('j', 'D') // 1-31
  .replace('h', 'hh') // 01-12
  .replace('H', 'HH') // 01-24
  .replace('g', 'h') // 1-12
  .replace('G', 'H') // 1-24
  .replace('i', 'mm') // 00-59
  .replace('s', 'ss') // 00-59
  .replace('l', 'dddd') // Monday to Sunday
  .replace('N', 'e'); // 1-7
}

/***/ }),

/***/ "./src/core/je/util/pinyin.js":
/*!************************************!*\
  !*** ./src/core/je/util/pinyin.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = toPinYin;

/**
 * 拼音类.
 * @module JE/pinyin
 */

/**
  *字符串转拼音
  *@param {String} l1 转拼音的字符串
  *@param {String} type 拼音类型：py(小写简拼),PY(大写简拼),pinyin(小写全拼),PINYIN(大写全拼),PinYin(全拼首字母大写)
  *@return {String} 拼音字母
*/
function toPinYin(l1, type) {
  var pi = {
    a: "\u554A\u963F\u9515",
    ai: "\u57C3\u6328\u54CE\u5509\u54C0\u7691\u764C\u853C\u77EE\u827E\u788D\u7231\u9698\u8BF6\u6371\u55F3\u55CC\u5AD2\u7477\u66A7\u7839\u953F\u972D",
    an: "\u978D\u6C28\u5B89\u4FFA\u6309\u6697\u5CB8\u80FA\u6848\u8C19\u57EF\u63DE\u72B4\u5EB5\u6849\u94F5\u9E4C\u9878\u9EEF",
    ang: "\u80AE\u6602\u76CE",
    ao: "\u51F9\u6556\u71AC\u7FF1\u8884\u50B2\u5965\u61CA\u6FB3\u5773\u62D7\u55F7\u5662\u5C99\u5ED2\u9068\u5AAA\u9A9C\u8071\u87AF\u93CA\u9CCC\u93D6",
    ba: "\u82AD\u634C\u6252\u53ED\u5427\u7B06\u516B\u75A4\u5DF4\u62D4\u8DCB\u9776\u628A\u8019\u575D\u9738\u7F62\u7238\u8307\u83DD\u8406\u636D\u5C9C\u705E\u6777\u94AF\u7C91\u9C85\u9B43",
    bai: "\u767D\u67CF\u767E\u6446\u4F70\u8D25\u62DC\u7A17\u859C\u63B0\u97B4",
    ban: "\u6591\u73ED\u642C\u6273\u822C\u9881\u677F\u7248\u626E\u62CC\u4F34\u74E3\u534A\u529E\u7ECA\u962A\u5742\u8C73\u94A3\u7622\u764D\u8228",
    bang: "\u90A6\u5E2E\u6886\u699C\u8180\u7ED1\u68D2\u78C5\u868C\u9551\u508D\u8C24\u84A1\u8783",
    bao: "\u82DE\u80DE\u5305\u8912\u96F9\u4FDD\u5821\u9971\u5B9D\u62B1\u62A5\u66B4\u8C79\u9C8D\u7206\u52F9\u8446\u5B80\u5B62\u7172\u9E28\u8913\u8DB5\u9F85",
    bo: "\u5265\u8584\u73BB\u83E0\u64AD\u62E8\u94B5\u6CE2\u535A\u52C3\u640F\u94C2\u7B94\u4F2F\u5E1B\u8236\u8116\u818A\u6E24\u6CCA\u9A73\u4EB3\u8543\u5575\u997D\u6A97\u64D8\u7934\u94B9\u9E41\u7C38\u8DDB",
    bei: "\u676F\u7891\u60B2\u5351\u5317\u8F88\u80CC\u8D1D\u94A1\u500D\u72C8\u5907\u60EB\u7119\u88AB\u5B5B\u9642\u90B6\u57E4\u84D3\u5457\u602B\u6096\u789A\u9E4E\u8919\u943E",
    ben: "\u5954\u82EF\u672C\u7B28\u755A\u574C\u951B",
    beng: "\u5D29\u7EF7\u752D\u6CF5\u8E66\u8FF8\u552A\u5623\u750F",
    bi: "\u903C\u9F3B\u6BD4\u9119\u7B14\u5F7C\u78A7\u84D6\u853D\u6BD5\u6BD9\u6BD6\u5E01\u5E87\u75F9\u95ED\u655D\u5F0A\u5FC5\u8F9F\u58C1\u81C2\u907F\u965B\u5315\u4EF3\u4FFE\u8298\u835C\u8378\u5421\u54D4\u72F4\u5EB3\u610E\u6ED7\u6FDE\u5F3C\u59A3\u5A62\u5B16\u74A7\u8D32\u7540\u94CB\u79D5\u88E8\u7B5A\u7B85\u7BE6\u822D\u895E\u8DF8\u9AC0",
    bian: "\u97AD\u8FB9\u7F16\u8D2C\u6241\u4FBF\u53D8\u535E\u8FA8\u8FA9\u8FAB\u904D\u533E\u5F01\u82C4\u5FED\u6C74\u7F0F\u7178\u782D\u78A5\u7A39\u7A86\u8759\u7B3E\u9CCA",
    biao: "\u6807\u5F6A\u8198\u8868\u5A4A\u9AA0\u98D1\u98D9\u98DA\u706C\u9556\u9573\u762D\u88F1\u9CD4",
    bie: "\u9CD6\u618B\u522B\u762A\u8E69\u9CD8",
    bin: "\u5F6C\u658C\u6FD2\u6EE8\u5BBE\u6448\u50A7\u6D5C\u7F24\u73A2\u6BA1\u8191\u9554\u9ACC\u9B13",
    bing: "\u5175\u51B0\u67C4\u4E19\u79C9\u997C\u70B3\u75C5\u5E76\u7980\u90B4\u6452\u7EE0\u678B\u69DF\u71F9",
    bu: "\u6355\u535C\u54FA\u8865\u57E0\u4E0D\u5E03\u6B65\u7C3F\u90E8\u6016\u62CA\u535F\u900B\u74FF\u6661\u949A\u91AD",
    ca: "\u64E6\u5693\u7924",
    cai: "\u731C\u88C1\u6750\u624D\u8D22\u776C\u8E29\u91C7\u5F69\u83DC\u8521",
    can: "\u9910\u53C2\u8695\u6B8B\u60ED\u60E8\u707F\u9A96\u74A8\u7CB2\u9EEA",
    cang: "\u82CD\u8231\u4ED3\u6CA7\u85CF\u4F27",
    cao: "\u64CD\u7CD9\u69FD\u66F9\u8349\u8279\u5608\u6F15\u87AC\u825A",
    ce: "\u5395\u7B56\u4FA7\u518C\u6D4B\u5202\u5E3B\u607B",
    ceng: "\u5C42\u8E6D\u564C",
    cha: "\u63D2\u53C9\u832C\u8336\u67E5\u78B4\u643D\u5BDF\u5C94\u5DEE\u8BE7\u7339\u9987\u6C4A\u59F9\u6748\u6942\u69CE\u6AAB\u9497\u9538\u9572\u8869",
    chai: "\u62C6\u67F4\u8C7A\u4FAA\u8308\u7625\u867F\u9F87",
    chan: "\u6400\u63BA\u8749\u998B\u8C17\u7F20\u94F2\u4EA7\u9610\u98A4\u5181\u8C04\u8C36\u8487\u5EDB\u5FCF\u6F7A\u6FB6\u5B71\u7FBC\u5A75\u5B17\u9AA3\u89C7\u7985\u9561\u88E3\u87FE\u8E94",
    chang: "\u660C\u7316\u573A\u5C1D\u5E38\u957F\u507F\u80A0\u5382\u655E\u7545\u5531\u5021\u4F25\u9B2F\u82CC\u83D6\u5F9C\u6005\u60DD\u960A\u5A3C\u5AE6\u6636\u6C05\u9CB3",
    chao: "\u8D85\u6284\u949E\u671D\u5632\u6F6E\u5DE2\u5435\u7092\u600A\u7EC9\u6641\u8016",
    che: "\u8F66\u626F\u64A4\u63A3\u5F7B\u6F88\u577C\u5C6E\u7817",
    chen: "\u90F4\u81E3\u8FB0\u5C18\u6668\u5FF1\u6C89\u9648\u8D81\u886C\u79F0\u8C0C\u62BB\u55D4\u5BB8\u741B\u6987\u809C\u80C2\u789C\u9F80",
    cheng: "\u6491\u57CE\u6A59\u6210\u5448\u4E58\u7A0B\u60E9\u6F84\u8BDA\u627F\u901E\u9A8B\u79E4\u57D5\u5D4A\u5FB5\u6D48\u67A8\u67FD\u6A18\u665F\u584D\u77A0\u94D6\u88CE\u86CF\u9172",
    chi: "\u5403\u75F4\u6301\u5319\u6C60\u8FDF\u5F1B\u9A70\u803B\u9F7F\u4F88\u5C3A\u8D64\u7FC5\u65A5\u70BD\u50BA\u5880\u82AA\u830C\u640B\u53F1\u54E7\u557B\u55E4\u5F73\u996C\u6CB2\u5AB8\u6555\u80DD\u7719\u7735\u9E31\u761B\u892B\u86A9\u87AD\u7B1E\u7BEA\u8C49\u8E05\u8E1F\u9B51",
    chong: "\u5145\u51B2\u866B\u5D07\u5BA0\u833A\u5FE1\u61A7\u94F3\u825F",
    chou: "\u62BD\u916C\u7574\u8E0C\u7A20\u6101\u7B79\u4EC7\u7EF8\u7785\u4E11\u4FE6\u5733\u5E31\u60C6\u6EB4\u59AF\u7633\u96E0\u9C8B",
    chu: "\u81ED\u521D\u51FA\u6A71\u53A8\u8E87\u9504\u96CF\u6EC1\u9664\u695A\u7840\u50A8\u77D7\u6410\u89E6\u5904\u4E8D\u520D\u61B7\u7ECC\u6775\u696E\u6A17\u870D\u8E70\u9EDC",
    chuan: "\u63E3\u5DDD\u7A7F\u693D\u4F20\u8239\u5598\u4E32\u63BE\u821B\u60F4\u9044\u5DDB\u6C1A\u948F\u9569\u8221",
    chuang: "\u75AE\u7A97\u5E62\u5E8A\u95EF\u521B\u6006",
    chui: "\u5439\u708A\u6376\u9524\u5782\u9672\u68F0\u69CC",
    chun: "\u6625\u693F\u9187\u5507\u6DF3\u7EAF\u8822\u4FC3\u83BC\u6C8C\u80AB\u6710\u9E51\u877D",
    chuo: "\u6233\u7EF0\u851F\u8FB6\u8F8D\u955E\u8E14\u9F8A",
    ci: "\u75B5\u8328\u78C1\u96CC\u8F9E\u6148\u74F7\u8BCD\u6B64\u523A\u8D50\u6B21\u8360\u5472\u5D6F\u9E5A\u8785\u7CCD\u8D91",
    cong: "\u806A\u8471\u56F1\u5306\u4ECE\u4E1B\u506C\u82C1\u6DD9\u9AA2\u742E\u7481\u679E",
    cu: "\u51D1\u7C97\u918B\u7C07\u731D\u6B82\u8E59",
    cuan: "\u8E7F\u7BE1\u7A9C\u6C46\u64BA\u6615\u7228",
    cui: "\u6467\u5D14\u50AC\u8106\u7601\u7CB9\u6DEC\u7FE0\u8403\u60B4\u7480\u69B1\u96B9",
    cun: "\u6751\u5B58\u5BF8\u78CB\u5FD6\u76B4",
    cuo: "\u64AE\u6413\u63AA\u632B\u9519\u539D\u811E\u9509\u77EC\u75E4\u9E7E\u8E49\u8E9C",
    da: "\u642D\u8FBE\u7B54\u7629\u6253\u5927\u8037\u54D2\u55D2\u601B\u59B2\u75B8\u8921\u7B2A\u977C\u9791",
    dai: "\u5446\u6B79\u50A3\u6234\u5E26\u6B86\u4EE3\u8D37\u888B\u5F85\u902E\u6020\u57ED\u7519\u5454\u5CB1\u8FE8\u902F\u9A80\u7ED0\u73B3\u9EDB",
    dan: "\u803D\u62C5\u4E39\u5355\u90F8\u63B8\u80C6\u65E6\u6C2E\u4F46\u60EE\u6DE1\u8BDE\u5F39\u86CB\u4EBB\u510B\u5369\u840F\u5556\u6FB9\u6A90\u6B9A\u8D55\u7708\u7605\u8043\u7BAA",
    dang: "\u5F53\u6321\u515A\u8361\u6863\u8C20\u51FC\u83EA\u5B95\u7800\u94DB\u88C6",
    dao: "\u5200\u6363\u8E48\u5012\u5C9B\u7977\u5BFC\u5230\u7A3B\u60BC\u9053\u76D7\u53E8\u5541\u5FC9\u6D2E\u6C18\u7118\u5FD1\u7E9B",
    de: "\u5FB7\u5F97\u7684\u951D",
    deng: "\u8E6C\u706F\u767B\u7B49\u77AA\u51F3\u9093\u5654\u5D9D\u6225\u78F4\u956B\u7C26",
    di: "\u5824\u4F4E\u6EF4\u8FEA\u654C\u7B1B\u72C4\u6DA4\u7FDF\u5AE1\u62B5\u5E95\u5730\u8482\u7B2C\u5E1D\u5F1F\u9012\u7F14\u6C10\u7C74\u8BCB\u8C1B\u90B8\u577B\u839C\u837B\u5600\u5A23\u67E2\u68E3\u89CC\u7825\u78B2\u7747\u955D\u7F9D\u9AB6",
    dian: "\u98A0\u6382\u6EC7\u7898\u70B9\u5178\u975B\u57AB\u7535\u4F43\u7538\u5E97\u60E6\u5960\u6DC0\u6BBF\u4E36\u963D\u576B\u57DD\u5DC5\u73B7\u765C\u766B\u7C1F\u8E2E",
    diao: "\u7889\u53FC\u96D5\u51CB\u5201\u6389\u540A\u9493\u8C03\u8F7A\u94DE\u8729\u7C9C\u8C82",
    die: "\u8DCC\u7239\u789F\u8776\u8FED\u8C0D\u53E0\u4F5A\u57A4\u581E\u63F2\u558B\u6E2B\u8F76\u7252\u74DE\u8936\u800B\u8E40\u9CBD\u9CCE",
    ding: "\u4E01\u76EF\u53EE\u9489\u9876\u9F0E\u952D\u5B9A\u8BA2\u4E22\u4EC3\u5576\u738E\u815A\u7887\u753A\u94E4\u7594\u8035\u914A",
    dong: "\u4E1C\u51AC\u8463\u61C2\u52A8\u680B\u4F97\u606B\u51BB\u6D1E\u578C\u549A\u5CBD\u5CD2\u5902\u6C21\u80E8\u80F4\u7850\u9E2B",
    dou: "\u515C\u6296\u6597\u9661\u8C46\u9017\u75D8\u8538\u94AD\u7AA6\u7AAC\u86AA\u7BFC\u9161",
    du: "\u90FD\u7763\u6BD2\u728A\u72EC\u8BFB\u5835\u7779\u8D4C\u675C\u9540\u809A\u5EA6\u6E21\u5992\u828F\u561F\u6E0E\u691F\u6A50\u724D\u8839\u7B03\u9AD1\u9EE9",
    duan: "\u7AEF\u77ED\u953B\u6BB5\u65AD\u7F0E\u5F56\u6934\u7145\u7C16",
    dui: "\u5806\u5151\u961F\u5BF9\u603C\u619D\u7893",
    dun: "\u58A9\u5428\u8E72\u6566\u987F\u56E4\u949D\u76FE\u9041\u7096\u7818\u7905\u76F9\u9566\u8DB8",
    duo: "\u6387\u54C6\u591A\u593A\u579B\u8EB2\u6735\u8DFA\u8235\u5241\u60F0\u5815\u5484\u54DA\u7F0D\u67C1\u94CE\u88F0\u8E31",
    e: "\u86FE\u5CE8\u9E45\u4FC4\u989D\u8BB9\u5A25\u6076\u5384\u627C\u904F\u9102\u997F\u5669\u8C14\u57A9\u57AD\u82CA\u83AA\u843C\u5443\u6115\u5C59\u5A40\u8F6D\u66F7\u816D\u786A\u9507\u9537\u9E57\u989A\u9CC4",
    en: "\u6069\u84BD\u6441\u5514\u55EF",
    er: "\u800C\u513F\u8033\u5C14\u9975\u6D31\u4E8C\u8D30\u8FE9\u73E5\u94D2\u9E38\u9C95",
    fa: "\u53D1\u7F5A\u7B4F\u4F10\u4E4F\u9600\u6CD5\u73D0\u57A1\u781D",
    fan: "\u85E9\u5E06\u756A\u7FFB\u6A0A\u77FE\u9492\u7E41\u51E1\u70E6\u53CD\u8FD4\u8303\u8D29\u72AF\u996D\u6CDB\u8629\u5E61\u72AD\u68B5\u6535\u71D4\u7548\u8E6F",
    fang: "\u574A\u82B3\u65B9\u80AA\u623F\u9632\u59A8\u4EFF\u8BBF\u7EBA\u653E\u531A\u90A1\u5F77\u94AB\u822B\u9C82",
    fei: "\u83F2\u975E\u5561\u98DE\u80A5\u532A\u8BFD\u5420\u80BA\u5E9F\u6CB8\u8D39\u82BE\u72D2\u60B1\u6DDD\u5983\u7ECB\u7EEF\u69A7\u8153\u6590\u6249\u7953\u7829\u9544\u75F1\u871A\u7BDA\u7FE1\u970F\u9CB1",
    fen: "\u82AC\u915A\u5429\u6C1B\u5206\u7EB7\u575F\u711A\u6C7E\u7C89\u594B\u4EFD\u5FFF\u6124\u7CAA\u507E\u7035\u68FC\u610D\u9CBC\u9F22",
    feng: "\u4E30\u5C01\u67AB\u8702\u5CF0\u950B\u98CE\u75AF\u70FD\u9022\u51AF\u7F1D\u8BBD\u5949\u51E4\u4FF8\u9146\u8451\u6CA3\u781C",
    fu: "\u4F5B\u5426\u592B\u6577\u80A4\u5B75\u6276\u62C2\u8F90\u5E45\u6C1F\u7B26\u4F0F\u4FD8\u670D\u6D6E\u6DAA\u798F\u88B1\u5F17\u752B\u629A\u8F85\u4FEF\u91DC\u65A7\u812F\u8151\u5E9C\u8150\u8D74\u526F\u8986\u8D4B\u590D\u5085\u4ED8\u961C\u7236\u8179\u8D1F\u5BCC\u8BA3\u9644\u5987\u7F1A\u5490\u5310\u51EB\u90DB\u8299\u82FB\u832F\u83A9\u83D4\u544B\u5E5E\u6ECF\u8274\u5B5A\u9A78\u7EC2\u6874\u8D59\u9EFB\u9EFC\u7F58\u7A03\u99A5\u864D\u86A8\u8709\u8760\u876E\u9EB8\u8DBA\u8DD7\u9CC6",
    ga: "\u5676\u560E\u86E4\u5C2C\u5477\u5C15\u5C1C\u65EE\u9486",
    gai: "\u8BE5\u6539\u6982\u9499\u76D6\u6E89\u4E10\u9654\u5793\u6224\u8D45\u80F2",
    gan: "\u5E72\u7518\u6746\u67D1\u7AFF\u809D\u8D76\u611F\u79C6\u6562\u8D63\u5769\u82F7\u5C34\u64C0\u6CD4\u6DE6\u6F89\u7EC0\u6A44\u65F0\u77F8\u75B3\u9150",
    gang: "\u5188\u521A\u94A2\u7F38\u809B\u7EB2\u5C97\u6E2F\u6206\u7F61\u9883\u7B7B",
    gong: "\u6760\u5DE5\u653B\u529F\u606D\u9F9A\u4F9B\u8EAC\u516C\u5BAB\u5F13\u5DE9\u6C5E\u62F1\u8D21\u5171\u857B\u5EFE\u54A3\u73D9\u80B1\u86A3\u86E9\u89E5",
    gao: "\u7BD9\u768B\u9AD8\u818F\u7F94\u7CD5\u641E\u9550\u7A3F\u544A\u777E\u8BF0\u90DC\u84BF\u85C1\u7F1F\u69D4\u69C1\u6772\u9506",
    ge: "\u54E5\u6B4C\u6401\u6208\u9E3D\u80F3\u7599\u5272\u9769\u845B\u683C\u9601\u9694\u94EC\u4E2A\u5404\u9B32\u4EE1\u54FF\u5865\u55DD\u7EA5\u643F\u8188\u784C\u94EA\u9549\u88BC\u988C\u867C\u8238\u9ABC\u9AC2",
    gei: "\u7ED9",
    gen: "\u6839\u8DDF\u4E98\u831B\u54CF\u826E",
    geng: "\u8015\u66F4\u5E9A\u7FB9\u57C2\u803F\u6897\u54FD\u8D53\u9CA0",
    gou: "\u94A9\u52FE\u6C9F\u82DF\u72D7\u57A2\u6784\u8D2D\u591F\u4F5D\u8BDF\u5CA3\u9058\u5ABE\u7F11\u89CF\u5F40\u9E32\u7B31\u7BDD\u97B2",
    gu: "\u8F9C\u83C7\u5495\u7B8D\u4F30\u6CBD\u5B64\u59D1\u9F13\u53E4\u86CA\u9AA8\u8C37\u80A1\u6545\u987E\u56FA\u96C7\u560F\u8BC2\u83F0\u54CC\u5D2E\u6C69\u688F\u8F71\u726F\u727F\u80CD\u81CC\u6BC2\u77BD\u7F5F\u94B4\u9522\u74E0\u9E2A\u9E44\u75FC\u86C4\u9164\u89DA\u9CB4\u9AB0\u9E58",
    gua: "\u522E\u74DC\u5250\u5BE1\u6302\u8902\u5366\u8BD6\u5471\u681D\u9E39",
    guai: "\u4E56\u62D0\u602A\u54D9",
    guan: "\u68FA\u5173\u5B98\u51A0\u89C2\u7BA1\u9986\u7F50\u60EF\u704C\u8D2F\u500C\u839E\u63BC\u6DAB\u76E5\u9E73\u9CCF",
    guang: "\u5149\u5E7F\u901B\u72B7\u6844\u80F1\u7592",
    gui: "\u7470\u89C4\u572D\u7845\u5F52\u9F9F\u95FA\u8F68\u9B3C\u8BE1\u7678\u6842\u67DC\u8DEA\u8D35\u523D\u5326\u523F\u5E8B\u5B84\u59AB\u6867\u7085\u6677\u7688\u7C0B\u9C91\u9CDC",
    gun: "\u8F8A\u6EDA\u68CD\u4E28\u886E\u7EF2\u78D9\u9CA7",
    guo: "\u9505\u90ED\u56FD\u679C\u88F9\u8FC7\u9998\u8803\u57DA\u63B4\u5459\u56D7\u5E3C\u5D1E\u7313\u6901\u8662\u951E\u8052\u872E\u873E\u8748",
    ha: "\u54C8",
    hai: "\u9AB8\u5B69\u6D77\u6C26\u4EA5\u5BB3\u9A87\u54B4\u55E8\u988F\u91A2",
    han: "\u9163\u61A8\u90AF\u97E9\u542B\u6DB5\u5BD2\u51FD\u558A\u7F55\u7FF0\u64BC\u634D\u65F1\u61BE\u608D\u710A\u6C57\u6C49\u9097\u83E1\u6496\u961A\u701A\u6657\u7113\u9894\u86B6\u9F3E",
    hen: "\u592F\u75D5\u5F88\u72E0\u6068",
    hang: "\u676D\u822A\u6C86\u7ED7\u73E9\u6841",
    hao: "\u58D5\u568E\u8C6A\u6BEB\u90DD\u597D\u8017\u53F7\u6D69\u8585\u55E5\u5686\u6FE0\u704F\u660A\u7693\u98A2\u869D",
    he: "\u5475\u559D\u8377\u83CF\u6838\u79BE\u548C\u4F55\u5408\u76D2\u8C89\u9602\u6CB3\u6DB8\u8D6B\u8910\u9E64\u8D3A\u8BC3\u52BE\u58D1\u85FF\u55D1\u55EC\u9616\u76CD\u86B5\u7FEE",
    hei: "\u563F\u9ED1",
    heng: "\u54FC\u4EA8\u6A2A\u8861\u6052\u8A07\u8605",
    hong: "\u8F70\u54C4\u70D8\u8679\u9E3F\u6D2A\u5B8F\u5F18\u7EA2\u9EC9\u8BA7\u836D\u85A8\u95F3\u6CD3",
    hou: "\u5589\u4FAF\u7334\u543C\u539A\u5019\u540E\u5820\u5F8C\u9005\u760A\u7BCC\u7CC7\u9C8E\u9ABA",
    hu: "\u547C\u4E4E\u5FFD\u745A\u58F6\u846B\u80E1\u8774\u72D0\u7CCA\u6E56\u5F27\u864E\u552C\u62A4\u4E92\u6CAA\u6237\u51B1\u553F\u56EB\u5CB5\u7322\u6019\u60DA\u6D52\u6EF9\u7425\u69F2\u8F77\u89F3\u70C0\u7173\u623D\u6248\u795C\u9E55\u9E71\u7B0F\u9190\u659B",
    hua: "\u82B1\u54D7\u534E\u733E\u6ED1\u753B\u5212\u5316\u8BDD\u5290\u6D4D\u9A85\u6866\u94E7\u7A1E",
    huai: "\u69D0\u5F8A\u6000\u6DEE\u574F\u8FD8\u8E1D",
    huan: "\u6B22\u73AF\u6853\u7F13\u6362\u60A3\u5524\u75EA\u8C62\u7115\u6DA3\u5BA6\u5E7B\u90C7\u5942\u57B8\u64D0\u571C\u6D39\u6D63\u6F36\u5BF0\u902D\u7F33\u953E\u9CA9\u9B1F",
    huang: "\u8352\u614C\u9EC4\u78FA\u8757\u7C27\u7687\u51F0\u60F6\u714C\u6643\u5E4C\u604D\u8C0E\u968D\u5FA8\u6E5F\u6F62\u9051\u749C\u8093\u7640\u87E5\u7BC1\u9CC7",
    hui: "\u7070\u6325\u8F89\u5FBD\u6062\u86D4\u56DE\u6BC1\u6094\u6167\u5349\u60E0\u6666\u8D3F\u79FD\u4F1A\u70E9\u6C47\u8BB3\u8BF2\u7ED8\u8BD9\u8334\u835F\u8559\u54D5\u5599\u96B3\u6D04\u5F57\u7F0B\u73F2\u6656\u605A\u867A\u87EA\u9EBE",
    hun: "\u8364\u660F\u5A5A\u9B42\u6D51\u6DF7\u8BE8\u9984\u960D\u6EB7\u7F17",
    huo: "\u8C41\u6D3B\u4F19\u706B\u83B7\u6216\u60D1\u970D\u8D27\u7978\u6509\u56AF\u5925\u94AC\u952A\u956C\u8020\u8816",
    ji: "\u51FB\u573E\u57FA\u673A\u7578\u7A3D\u79EF\u7B95\u808C\u9965\u8FF9\u6FC0\u8BA5\u9E21\u59EC\u7EE9\u7F09\u5409\u6781\u68D8\u8F91\u7C4D\u96C6\u53CA\u6025\u75BE\u6C72\u5373\u5AC9\u7EA7\u6324\u51E0\u810A\u5DF1\u84DF\u6280\u5180\u5B63\u4F0E\u796D\u5242\u60B8\u6D4E\u5BC4\u5BC2\u8BA1\u8BB0\u65E2\u5FCC\u9645\u5993\u7EE7\u7EAA\u5C45\u4E0C\u4E69\u525E\u4F76\u4F74\u8114\u58BC\u82A8\u82B0\u8401\u84BA\u857A\u638E\u53FD\u54AD\u54DC\u5527\u5C8C\u5D74\u6D0E\u5F50\u5C50\u9AA5\u757F\u7391\u696B\u6B9B\u621F\u6222\u8D4D\u89CA\u7284\u9F51\u77F6\u7F81\u5D47\u7A37\u7620\u7635\u866E\u7B08\u7B04\u66A8\u8DFB\u8DFD\u9701\u9C9A\u9CAB\u9AFB\u9E82",
    jia: "\u5609\u67B7\u5939\u4F73\u5BB6\u52A0\u835A\u988A\u8D3E\u7532\u94BE\u5047\u7A3C\u4EF7\u67B6\u9A7E\u5AC1\u4F3D\u90CF\u62EE\u5CAC\u6D43\u8FE6\u73C8\u621B\u80DB\u605D\u94D7\u9553\u75C2\u86F1\u7B33\u8888\u8DCF",
    jian: "\u6B7C\u76D1\u575A\u5C16\u7B3A\u95F4\u714E\u517C\u80A9\u8270\u5978\u7F04\u8327\u68C0\u67EC\u78B1\u7877\u62E3\u6361\u7B80\u4FED\u526A\u51CF\u8350\u69DB\u9274\u8DF5\u8D31\u89C1\u952E\u7BAD\u4EF6\u5065\u8230\u5251\u996F\u6E10\u6E85\u6DA7\u5EFA\u50ED\u8C0F\u8C2B\u83C5\u84B9\u641B\u56DD\u6E54\u8E47\u8B07\u7F23\u67A7\u67D9\u6957\u620B\u622C\u726E\u728D\u6BFD\u8171\u7751\u950F\u9E63\u88E5\u7B15\u7BB4\u7FE6\u8DBC\u8E3A\u9CA3\u97AF",
    jiang: "\u50F5\u59DC\u5C06\u6D46\u6C5F\u7586\u848B\u6868\u5956\u8BB2\u5320\u9171\u964D\u8333\u6D1A\u7EDB\u7F30\u729F\u7913\u8029\u7CE8\u8C47",
    jiao: "\u8549\u6912\u7901\u7126\u80F6\u4EA4\u90CA\u6D47\u9A84\u5A07\u56BC\u6405\u94F0\u77EB\u4FA5\u811A\u72E1\u89D2\u997A\u7F34\u7EDE\u527F\u6559\u9175\u8F7F\u8F83\u53EB\u4F7C\u50EC\u832D\u6322\u564D\u5CE4\u5FBC\u59E3\u7E9F\u656B\u768E\u9E6A\u86DF\u91AE\u8DE4\u9C9B",
    jie: "\u7A96\u63ED\u63A5\u7686\u79F8\u8857\u9636\u622A\u52AB\u8282\u6854\u6770\u6377\u776B\u7AED\u6D01\u7ED3\u89E3\u59D0\u6212\u85C9\u82A5\u754C\u501F\u4ECB\u75A5\u8BEB\u5C4A\u5048\u8BA6\u8BD8\u5588\u55DF\u736C\u5A55\u5B51\u6840\u7352\u78A3\u9534\u7596\u88B7\u9889\u86A7\u7FAF\u9C92\u9AB1\u9AEB",
    jin: "\u5DFE\u7B4B\u65A4\u91D1\u4ECA\u6D25\u895F\u7D27\u9526\u4EC5\u8C28\u8FDB\u9773\u664B\u7981\u8FD1\u70EC\u6D78\u5C3D\u537A\u8369\u5807\u5664\u9991\u5ED1\u5997\u7F19\u747E\u69FF\u8D46\u89D0\u9485\u9513\u887F\u77DC",
    jing: "\u52B2\u8346\u5162\u830E\u775B\u6676\u9CB8\u4EAC\u60CA\u7CBE\u7CB3\u7ECF\u4E95\u8B66\u666F\u9888\u9759\u5883\u656C\u955C\u5F84\u75C9\u9756\u7ADF\u7ADE\u51C0\u522D\u5106\u9631\u83C1\u734D\u61AC\u6CFE\u8FF3\u5F2A\u5A67\u80BC\u80EB\u8148\u65CC",
    jiong: "\u70AF\u7A98\u5182\u8FE5\u6243",
    jiu: "\u63EA\u7A76\u7EA0\u7396\u97ED\u4E45\u7078\u4E5D\u9152\u53A9\u6551\u65E7\u81FC\u8205\u548E\u5C31\u759A\u50E6\u557E\u9604\u67E9\u6855\u9E6B\u8D73\u9B0F",
    ju: "\u97A0\u62D8\u72D9\u75BD\u9A79\u83CA\u5C40\u5480\u77E9\u4E3E\u6CAE\u805A\u62D2\u636E\u5DE8\u5177\u8DDD\u8E1E\u952F\u4FF1\u53E5\u60E7\u70AC\u5267\u5028\u8BB5\u82E3\u82F4\u8392\u63AC\u907D\u5C66\u741A\u67B8\u6910\u6998\u6989\u6A58\u728B\u98D3\u949C\u9514\u7AAD\u88FE\u8D84\u91B5\u8E3D\u9F83\u96CE\u97AB",
    juan: "\u6350\u9E43\u5A1F\u5026\u7737\u5377\u7EE2\u9104\u72F7\u6D93\u684A\u8832\u9529\u954C\u96BD",
    jue: "\u6485\u652B\u6289\u6398\u5014\u7235\u89C9\u51B3\u8BC0\u7EDD\u53A5\u5282\u8C32\u77CD\u8568\u5658\u5D1B\u7357\u5B53\u73CF\u6877\u6A5B\u721D\u9562\u8E76\u89D6",
    jun: "\u5747\u83CC\u94A7\u519B\u541B\u5CFB\u4FCA\u7AE3\u6D5A\u90E1\u9A8F\u6343\u72FB\u76B2\u7B60\u9E87",
    ka: "\u5580\u5496\u5361\u4F67\u5494\u80E9",
    ke: "\u54AF\u5777\u82DB\u67EF\u68F5\u78D5\u9897\u79D1\u58F3\u54B3\u53EF\u6E34\u514B\u523B\u5BA2\u8BFE\u5CA2\u606A\u6E98\u9A92\u7F02\u73C2\u8F72\u6C2A\u778C\u94B6\u75B4\u7AA0\u874C\u9AC1",
    kai: "\u5F00\u63E9\u6977\u51EF\u6168\u5240\u57B2\u8488\u5FFE\u607A\u94E0\u950E",
    kan: "\u520A\u582A\u52D8\u574E\u780D\u770B\u4F83\u51F5\u83B0\u83B6\u6221\u9F9B\u77B0",
    kang: "\u5EB7\u6177\u7CE0\u625B\u6297\u4EA2\u7095\u5751\u4F09\u95F6\u94AA",
    kao: "\u8003\u62F7\u70E4\u9760\u5C3B\u6832\u7292\u94D0",
    ken: "\u80AF\u5543\u57A6\u6073\u57A0\u88C9\u9880",
    keng: "\u542D\u5FD0\u94FF",
    kong: "\u7A7A\u6050\u5B54\u63A7\u5025\u5D06\u7B9C",
    kou: "\u62A0\u53E3\u6263\u5BC7\u82A4\u853B\u53E9\u770D\u7B58",
    ku: "\u67AF\u54ED\u7A9F\u82E6\u9177\u5E93\u88E4\u5233\u5800\u55BE\u7ED4\u9AB7",
    kua: "\u5938\u57AE\u630E\u8DE8\u80EF\u4F89",
    kuai: "\u5757\u7B77\u4FA9\u5FEB\u84AF\u90D0\u8489\u72EF\u810D",
    kuan: "\u5BBD\u6B3E\u9ACB",
    kuang: "\u5321\u7B50\u72C2\u6846\u77FF\u7736\u65F7\u51B5\u8BD3\u8BF3\u909D\u5739\u593C\u54D0\u7EA9\u8D36",
    kui: "\u4E8F\u76D4\u5CBF\u7AA5\u8475\u594E\u9B41\u5080\u9988\u6127\u6E83\u9997\u532E\u5914\u9697\u63C6\u55B9\u559F\u609D\u6126\u9615\u9035\u668C\u777D\u8069\u8770\u7BD1\u81FE\u8DEC",
    kun: "\u5764\u6606\u6346\u56F0\u6083\u9603\u7428\u951F\u918C\u9CB2\u9AE1",
    kuo: "\u62EC\u6269\u5ED3\u9614\u86DE",
    la: "\u5783\u62C9\u5587\u8721\u814A\u8FA3\u5566\u524C\u647A\u908B\u65EF\u782C\u760C",
    lai: "\u83B1\u6765\u8D56\u5D03\u5F95\u6D9E\u6FD1\u8D49\u7750\u94FC\u765E\u7C41",
    lan: "\u84DD\u5A6A\u680F\u62E6\u7BEE\u9611\u5170\u6F9C\u8C30\u63FD\u89C8\u61D2\u7F06\u70C2\u6EE5\u5549\u5C9A\u61D4\u6F24\u6984\u6593\u7F71\u9567\u8934",
    lang: "\u7405\u6994\u72FC\u5ECA\u90CE\u6717\u6D6A\u83A8\u8497\u5577\u9606\u9512\u7A02\u8782",
    lao: "\u635E\u52B3\u7262\u8001\u4F6C\u59E5\u916A\u70D9\u6D9D\u5520\u5D02\u6833\u94D1\u94F9\u75E8\u91AA",
    le: "\u52D2\u4E50\u808B\u4EC2\u53FB\u561E\u6CD0\u9CD3",
    lei: "\u96F7\u956D\u857E\u78CA\u7D2F\u5121\u5792\u64C2\u7C7B\u6CEA\u7FB8\u8BD4\u837D\u54A7\u6F2F\u5AD8\u7F27\u6A91\u8012\u9179",
    ling: "\u68F1\u51B7\u62CE\u73B2\u83F1\u96F6\u9F84\u94C3\u4F36\u7F9A\u51CC\u7075\u9675\u5CAD\u9886\u53E6\u4EE4\u9143\u5844\u82D3\u5464\u56F9\u6CE0\u7EEB\u67C3\u68C2\u74F4\u8046\u86C9\u7FCE\u9CAE",
    leng: "\u695E\u6123",
    li: "\u5398\u68A8\u7281\u9ECE\u7BF1\u72F8\u79BB\u6F13\u7406\u674E\u91CC\u9CA4\u793C\u8389\u8354\u540F\u6817\u4E3D\u5389\u52B1\u783E\u5386\u5229\u5088\u4F8B\u4FD0\u75E2\u7ACB\u7C92\u6CA5\u96B6\u529B\u7483\u54E9\u4FEA\u4FDA\u90E6\u575C\u82C8\u8385\u84E0\u85DC\u6369\u5456\u5533\u55B1\u7301\u6EA7\u6FA7\u9026\u5A0C\u5AE0\u9A8A\u7F21\u73DE\u67A5\u680E\u8F79\u623E\u783A\u8A48\u7F79\u9502\u9E42\u75A0\u75AC\u86CE\u870A\u8821\u7B20\u7BE5\u7C9D\u91B4\u8DDE\u96F3\u9CA1\u9CE2\u9EE7",
    lian: "\u4FE9\u8054\u83B2\u8FDE\u9570\u5EC9\u601C\u6D9F\u5E18\u655B\u8138\u94FE\u604B\u70BC\u7EC3\u631B\u8539\u5941\u6F4B\u6FC2\u5A08\u740F\u695D\u6B93\u81C1\u81A6\u88E2\u880A\u9CA2",
    liang: "\u7CAE\u51C9\u6881\u7CB1\u826F\u4E24\u8F86\u91CF\u667E\u4EAE\u8C05\u589A\u690B\u8E09\u9753\u9B49",
    liao: "\u64A9\u804A\u50DA\u7597\u71CE\u5BE5\u8FBD\u6F66\u4E86\u6482\u9563\u5ED6\u6599\u84FC\u5C25\u5639\u7360\u5BEE\u7F2D\u948C\u9E69\u8022",
    lie: "\u5217\u88C2\u70C8\u52A3\u730E\u51BD\u57D2\u6D0C\u8D94\u8E90\u9B23",
    lin: "\u7433\u6797\u78F7\u9716\u4E34\u90BB\u9CDE\u6DCB\u51DB\u8D41\u541D\u853A\u5D99\u5EEA\u9074\u6AA9\u8F9A\u77B5\u7CBC\u8E8F\u9E9F",
    liu: "\u6E9C\u7409\u69B4\u786B\u998F\u7559\u5218\u7624\u6D41\u67F3\u516D\u62A1\u507B\u848C\u6CD6\u6D4F\u905B\u9A9D\u7EFA\u65D2\u7198\u950D\u954F\u9E68\u938F",
    "long": "\u9F99\u804B\u5499\u7B3C\u7ABF\u9686\u5784\u62E2\u9647\u5F04\u5785\u830F\u6CF7\u73D1\u680A\u80E7\u783B\u7643",
    lou: "\u697C\u5A04\u6402\u7BD3\u6F0F\u964B\u55BD\u5D5D\u9542\u7618\u8027\u877C\u9AC5",
    lu: "\u82A6\u5362\u9885\u5E90\u7089\u63B3\u5364\u864F\u9C81\u9E93\u788C\u9732\u8DEF\u8D42\u9E7F\u6F5E\u7984\u5F55\u9646\u622E\u5786\u6445\u64B8\u565C\u6CF8\u6E0C\u6F09\u7490\u680C\u6A79\u8F73\u8F82\u8F98\u6C07\u80EA\u9565\u9E2C\u9E6D\u7C0F\u823B\u9C88",
    lv: "\u9A74\u5415\u94DD\u4FA3\u65C5\u5C65\u5C61\u7F15\u8651\u6C2F\u5F8B\u7387\u6EE4\u7EFF\u634B\u95FE\u6988\u8182\u7A06\u891B",
    luan: "\u5CE6\u5B6A\u6EE6\u5375\u4E71\u683E\u9E3E\u92AE",
    lue: "\u63A0\u7565\u950A",
    lun: "\u8F6E\u4F26\u4ED1\u6CA6\u7EB6\u8BBA\u56F5",
    luo: "\u841D\u87BA\u7F57\u903B\u9523\u7BA9\u9AA1\u88F8\u843D\u6D1B\u9A86\u7EDC\u502E\u8366\u645E\u7321\u6CFA\u6924\u8136\u9559\u7630\u96D2",
    ma: "\u5988\u9EBB\u739B\u7801\u8682\u9A6C\u9A82\u561B\u5417\u551B\u72B8\u5B37\u6769\u9EBD",
    mai: "\u57CB\u4E70\u9EA6\u5356\u8FC8\u8109\u52A2\u836C\u54AA\u973E",
    man: "\u7792\u9992\u86EE\u6EE1\u8513\u66FC\u6162\u6F2B\u8C29\u5881\u5E54\u7F26\u71B3\u9558\u989F\u87A8\u9CD7\u9794",
    mang: "\u8292\u832B\u76F2\u5FD9\u83BD\u9099\u6F2D\u6726\u786D\u87D2",
    meng: "\u6C13\u840C\u8499\u6AAC\u76DF\u9530\u731B\u68A6\u5B5F\u52D0\u750D\u77A2\u61F5\u791E\u867B\u8722\u8813\u824B\u8268\u9EFE",
    miao: "\u732B\u82D7\u63CF\u7784\u85D0\u79D2\u6E3A\u5E99\u5999\u55B5\u9088\u7F08\u7F2A\u676A\u6DFC\u7707\u9E4B\u8731",
    mao: "\u8305\u951A\u6BDB\u77DB\u94C6\u536F\u8302\u5192\u5E3D\u8C8C\u8D38\u4F94\u88A4\u52D6\u8306\u5CC1\u7441\u6634\u7266\u8004\u65C4\u61CB\u7780\u86D1\u8765\u87CA\u9AE6",
    me: "\u4E48",
    mei: "\u73AB\u679A\u6885\u9176\u9709\u7164\u6CA1\u7709\u5A92\u9541\u6BCF\u7F8E\u6627\u5BD0\u59B9\u5A9A\u5776\u8393\u5D4B\u7338\u6D7C\u6E44\u6963\u9545\u9E5B\u8882\u9B45",
    men: "\u95E8\u95F7\u4EEC\u626A\u739F\u7116\u61D1\u9494",
    mi: "\u772F\u919A\u9761\u7CDC\u8FF7\u8C1C\u5F25\u7C73\u79D8\u89C5\u6CCC\u871C\u5BC6\u5E42\u8288\u5196\u8C27\u863C\u5627\u7315\u736F\u6C68\u5B93\u5F2D\u8112\u6549\u7CF8\u7E3B\u9E8B",
    mian: "\u68C9\u7720\u7EF5\u5195\u514D\u52C9\u5A29\u7F05\u9762\u6C94\u6E4E\u817C\u7704",
    mie: "\u8511\u706D\u54A9\u881B\u7BFE",
    min: "\u6C11\u62BF\u76BF\u654F\u60AF\u95FD\u82E0\u5CB7\u95F5\u6CEF\u73C9",
    ming: "\u660E\u879F\u9E23\u94ED\u540D\u547D\u51A5\u8317\u6E9F\u669D\u7791\u9169",
    miu: "\u8C2C",
    mo: "\u6478\u6479\u8611\u6A21\u819C\u78E8\u6469\u9B54\u62B9\u672B\u83AB\u58A8\u9ED8\u6CAB\u6F20\u5BDE\u964C\u8C1F\u8309\u84E6\u998D\u5AEB\u9546\u79E3\u763C\u8031\u87C6\u8C8A\u8C98",
    mou: "\u8C0B\u725F\u67D0\u53B6\u54DE\u5A7A\u7738\u936A",
    mu: "\u62C7\u7261\u4EA9\u59C6\u6BCD\u5893\u66AE\u5E55\u52DF\u6155\u6728\u76EE\u7766\u7267\u7A46\u4EEB\u82DC\u5452\u6C90\u6BEA\u94BC",
    na: "\u62FF\u54EA\u5450\u94A0\u90A3\u5A1C\u7EB3\u5185\u637A\u80AD\u954E\u8872\u7BAC",
    nai: "\u6C16\u4E43\u5976\u8010\u5948\u9F10\u827F\u8418\u67F0",
    nan: "\u5357\u7537\u96BE\u56CA\u5583\u56E1\u6960\u8169\u877B\u8D67",
    nao: "\u6320\u8111\u607C\u95F9\u5B6C\u57B4\u7331\u7459\u7847\u94D9\u86F2",
    ne: "\u6DD6\u5462\u8BB7",
    nei: "\u9981",
    nen: "\u5AE9\u80FD\u6798\u6041",
    ni: "\u59AE\u9713\u502A\u6CE5\u5C3C\u62DF\u4F60\u533F\u817B\u9006\u6EBA\u4F32\u576D\u730A\u6029\u6EE0\u6635\u65CE\u7962\u615D\u7768\u94CC\u9CB5",
    nian: "\u852B\u62C8\u5E74\u78BE\u64B5\u637B\u5FF5\u5EFF\u8F87\u9ECF\u9C87\u9CB6",
    niang: "\u5A18\u917F",
    niao: "\u9E1F\u5C3F\u8311\u5B32\u8132\u8885",
    nie: "\u634F\u8042\u5B7D\u556E\u954A\u954D\u6D85\u4E5C\u9667\u8616\u55EB\u8080\u989E\u81EC\u8E51",
    nin: "\u60A8\u67E0",
    ning: "\u72DE\u51DD\u5B81\u62E7\u6CDE\u4F5E\u84E5\u549B\u752F\u804D",
    niu: "\u725B\u626D\u94AE\u7EBD\u72C3\u5FF8\u599E\u86B4",
    nong: "\u8113\u6D53\u519C\u4FAC",
    nu: "\u5974\u52AA\u6012\u5476\u5E11\u5F29\u80EC\u5B65\u9A7D",
    nv: "\u5973\u6067\u9495\u8844",
    nuan: "\u6696",
    nuenue: "\u8650",
    nue: "\u759F\u8C11",
    nuo: "\u632A\u61E6\u7CEF\u8BFA\u50A9\u6426\u558F\u9518",
    ou: "\u54E6\u6B27\u9E25\u6BB4\u85D5\u5455\u5076\u6CA4\u6004\u74EF\u8026",
    pa: "\u556A\u8DB4\u722C\u5E15\u6015\u7436\u8469\u7B62",
    pai: "\u62CD\u6392\u724C\u5F98\u6E43\u6D3E\u4FF3\u848E",
    pan: "\u6500\u6F58\u76D8\u78D0\u76FC\u7554\u5224\u53DB\u723F\u6CEE\u88A2\u897B\u87E0\u8E52",
    pang: "\u4E53\u5E9E\u65C1\u802A\u80D6\u6EC2\u9004",
    pao: "\u629B\u5486\u5228\u70AE\u888D\u8DD1\u6CE1\u530F\u72CD\u5E96\u812C\u75B1",
    pei: "\u5478\u80DA\u57F9\u88F4\u8D54\u966A\u914D\u4F69\u6C9B\u638A\u8F94\u5E14\u6DE0\u65C6\u952B\u9185\u9708",
    pen: "\u55B7\u76C6\u6E53",
    peng: "\u7830\u62A8\u70F9\u6F8E\u5F6D\u84EC\u68DA\u787C\u7BF7\u81A8\u670B\u9E4F\u6367\u78B0\u576F\u580B\u562D\u6026\u87DB",
    pi: "\u7812\u9739\u6279\u62AB\u5288\u7435\u6BD7\u5564\u813E\u75B2\u76AE\u5339\u75DE\u50FB\u5C41\u8B6C\u4E15\u9674\u90B3\u90EB\u572E\u9F19\u64D7\u567C\u5E80\u5AB2\u7EB0\u6787\u7513\u7765\u7F74\u94CD\u75E6\u7656\u758B\u868D\u8C94",
    pian: "\u7BC7\u504F\u7247\u9A97\u8C1D\u9A88\u728F\u80FC\u890A\u7FE9\u8E41",
    piao: "\u98D8\u6F02\u74E2\u7968\u527D\u560C\u5AD6\u7F25\u6B8D\u779F\u87B5",
    pie: "\u6487\u77A5\u4E3F\u82E4\u6C15",
    pin: "\u62FC\u9891\u8D2B\u54C1\u8058\u62DA\u59D8\u5AD4\u6980\u725D\u98A6",
    ping: "\u4E52\u576A\u82F9\u840D\u5E73\u51ED\u74F6\u8BC4\u5C4F\u4FDC\u5A09\u67B0\u9C86",
    po: "\u5761\u6CFC\u9887\u5A46\u7834\u9B44\u8FEB\u7C95\u53F5\u9131\u6EA5\u73C0\u948B\u94B7\u76A4\u7B38",
    pou: "\u5256\u88D2\u8E23",
    pu: "\u6251\u94FA\u4EC6\u8386\u8461\u83E9\u84B2\u57D4\u6734\u5703\u666E\u6D66\u8C31\u66DD\u7011\u530D\u5657\u6FEE\u749E\u6C06\u9564\u9568\u8E7C",
    qi: "\u671F\u6B3A\u6816\u621A\u59BB\u4E03\u51C4\u6F06\u67D2\u6C8F\u5176\u68CB\u5947\u6B67\u7566\u5D0E\u8110\u9F50\u65D7\u7948\u7941\u9A91\u8D77\u5C82\u4E5E\u4F01\u542F\u5951\u780C\u5668\u6C14\u8FC4\u5F03\u6C7D\u6CE3\u8BAB\u4E9F\u4E93\u573B\u8291\u840B\u847A\u5601\u5C7A\u5C90\u6C54\u6DC7\u9A90\u7EEE\u742A\u7426\u675E\u6864\u69ED\u6B39\u797A\u61A9\u789B\u86F4\u871E\u7DA6\u7DAE\u8DBF\u8E4A\u9CCD\u9E92",
    qia: "\u6390\u6070\u6D3D\u845C",
    qian: "\u7275\u6266\u948E\u94C5\u5343\u8FC1\u7B7E\u4EDF\u8C26\u4E7E\u9ED4\u94B1\u94B3\u524D\u6F5C\u9063\u6D45\u8C34\u5811\u5D4C\u6B20\u6B49\u4F65\u9621\u828A\u82A1\u8368\u63AE\u5C8D\u60AD\u614A\u9A9E\u6434\u8930\u7F31\u6920\u80B7\u6106\u94A4\u8654\u7B9D",
    qiang: "\u67AA\u545B\u8154\u7F8C\u5899\u8537\u5F3A\u62A2\u5AF1\u6A2F\u6217\u709D\u9516\u9535\u956A\u8941\u8723\u7F9F\u8DEB\u8DC4",
    qiao: "\u6A47\u9539\u6572\u6084\u6865\u77A7\u4E54\u4FA8\u5DE7\u9798\u64AC\u7FD8\u5CED\u4FCF\u7A8D\u5281\u8BEE\u8C2F\u835E\u6100\u6194\u7F32\u6A35\u6BF3\u7857\u8DF7\u9792",
    qie: "\u5207\u8304\u4E14\u602F\u7A83\u90C4\u553C\u60EC\u59BE\u6308\u9532\u7BA7",
    qin: "\u94A6\u4FB5\u4EB2\u79E6\u7434\u52E4\u82B9\u64D2\u79BD\u5BDD\u6C81\u82A9\u84C1\u8572\u63FF\u5423\u55EA\u5659\u6EB1\u6A8E\u8793\u887E",
    qing: "\u9752\u8F7B\u6C22\u503E\u537F\u6E05\u64CE\u6674\u6C30\u60C5\u9877\u8BF7\u5E86\u5029\u82D8\u570A\u6AA0\u78EC\u873B\u7F44\u7B90\u8B26\u9CAD\u9EE5",
    qiong: "\u743C\u7A77\u909B\u8315\u7A79\u7B47\u928E",
    qiu: "\u79CB\u4E18\u90B1\u7403\u6C42\u56DA\u914B\u6CC5\u4FC5\u6C3D\u5DEF\u827D\u72B0\u6E6B\u9011\u9052\u6978\u8D47\u9E20\u866C\u86AF\u8764\u88D8\u7CD7\u9CC5\u9F3D",
    qu: "\u8D8B\u533A\u86C6\u66F2\u8EAF\u5C48\u9A71\u6E20\u53D6\u5A36\u9F8B\u8DA3\u53BB\u8BCE\u52AC\u8556\u8627\u5C96\u8862\u9612\u74A9\u89D1\u6C0D\u795B\u78F2\u766F\u86D0\u883C\u9EB4\u77BF\u9EE2",
    quan: "\u5708\u98A7\u6743\u919B\u6CC9\u5168\u75CA\u62F3\u72AC\u5238\u529D\u8BE0\u8343\u737E\u609B\u7EFB\u8F81\u754E\u94E8\u8737\u7B4C\u9B08",
    que: "\u7F3A\u7094\u7638\u5374\u9E4A\u69B7\u786E\u96C0\u9619\u60AB",
    qun: "\u88D9\u7FA4\u9021",
    ran: "\u7136\u71C3\u5189\u67D3\u82D2\u9AEF",
    rang: "\u74E4\u58E4\u6518\u56B7\u8BA9\u79B3\u7A70",
    rao: "\u9976\u6270\u7ED5\u835B\u5A06\u6861",
    ruo: "\u60F9\u82E5\u5F31",
    re: "\u70ED\u504C",
    ren: "\u58EC\u4EC1\u4EBA\u5FCD\u97E7\u4EFB\u8BA4\u5203\u598A\u7EAB\u4EDE\u834F\u845A\u996A\u8F6B\u7A14\u887D",
    reng: "\u6254\u4ECD",
    ri: "\u65E5",
    rong: "\u620E\u8338\u84C9\u8363\u878D\u7194\u6EB6\u5BB9\u7ED2\u5197\u5D58\u72E8\u7F1B\u6995\u877E",
    rou: "\u63C9\u67D4\u8089\u7CC5\u8E42\u97A3",
    ru: "\u8339\u8815\u5112\u5B7A\u5982\u8FB1\u4E73\u6C5D\u5165\u8925\u84D0\u85B7\u5685\u6D33\u6EBD\u6FE1\u94F7\u8966\u98A5",
    ruan: "\u8F6F\u962E\u670A",
    rui: "\u854A\u745E\u9510\u82AE\u8564\u777F\u868B",
    run: "\u95F0\u6DA6",
    sa: "\u6492\u6D12\u8428\u5345\u4EE8\u6332\u98D2",
    sai: "\u816E\u9CC3\u585E\u8D5B\u567B",
    san: "\u4E09\u53C1\u4F1E\u6563\u5F61\u9993\u6C35\u6BF5\u7CC1\u9730",
    sang: "\u6851\u55D3\u4E27\u6421\u78C9\u98A1",
    sao: "\u6414\u9A9A\u626B\u5AC2\u57FD\u81CA\u7619\u9CCB",
    se: "\u745F\u8272\u6DA9\u556C\u94E9\u94EF\u7A51",
    sen: "\u68EE",
    seng: "\u50E7",
    sha: "\u838E\u7802\u6740\u5239\u6C99\u7EB1\u50BB\u5565\u715E\u810E\u6B43\u75E7\u88DF\u970E\u9CA8",
    shai: "\u7B5B\u6652\u917E",
    shan: "\u73CA\u82EB\u6749\u5C71\u5220\u717D\u886B\u95EA\u9655\u64C5\u8D61\u81B3\u5584\u6C55\u6247\u7F2E\u5261\u8BAA\u912F\u57CF\u829F\u6F78\u59D7\u9A9F\u81BB\u9490\u759D\u87EE\u8222\u8DDA\u9CDD",
    shang: "\u5892\u4F24\u5546\u8D4F\u664C\u4E0A\u5C1A\u88F3\u57A7\u7EF1\u6B87\u71B5\u89DE",
    shao: "\u68A2\u634E\u7A0D\u70E7\u828D\u52FA\u97F6\u5C11\u54E8\u90B5\u7ECD\u52AD\u82D5\u6F72\u86F8\u7B24\u7B72\u8244",
    she: "\u5962\u8D4A\u86C7\u820C\u820D\u8D66\u6444\u5C04\u6151\u6D89\u793E\u8BBE\u538D\u4F58\u731E\u7572\u9E9D",
    shen: "\u7837\u7533\u547B\u4F38\u8EAB\u6DF1\u5A20\u7EC5\u795E\u6C88\u5BA1\u5A76\u751A\u80BE\u614E\u6E17\u8BDC\u8C02\u5432\u54C2\u6E16\u6939\u77E7\u8703",
    sheng: "\u58F0\u751F\u7525\u7272\u5347\u7EF3\u7701\u76DB\u5269\u80DC\u5723\u4E1E\u6E11\u5AB5\u771A\u7B19",
    shi: "\u5E08\u5931\u72EE\u65BD\u6E7F\u8BD7\u5C38\u8671\u5341\u77F3\u62FE\u65F6\u4EC0\u98DF\u8680\u5B9E\u8BC6\u53F2\u77E2\u4F7F\u5C4E\u9A76\u59CB\u5F0F\u793A\u58EB\u4E16\u67FF\u4E8B\u62ED\u8A93\u901D\u52BF\u662F\u55DC\u566C\u9002\u4ED5\u4F8D\u91CA\u9970\u6C0F\u5E02\u6043\u5BA4\u89C6\u8BD5\u8C25\u57D8\u83B3\u84CD\u5F11\u5511\u9963\u8F7C\u8006\u8D33\u70BB\u793B\u94C8\u94CA\u87AB\u8210\u7B6E\u8C55\u9CA5\u9CBA",
    shou: "\u6536\u624B\u9996\u5B88\u5BFF\u6388\u552E\u53D7\u7626\u517D\u624C\u72E9\u7EF6\u824F",
    shu: "\u852C\u67A2\u68B3\u6B8A\u6292\u8F93\u53D4\u8212\u6DD1\u758F\u4E66\u8D4E\u5B70\u719F\u85AF\u6691\u66D9\u7F72\u8700\u9ECD\u9F20\u5C5E\u672F\u8FF0\u6811\u675F\u620D\u7AD6\u5885\u5EB6\u6570\u6F31\u6055\u500F\u587E\u83FD\u5FC4\u6CAD\u6D91\u6F8D\u59DD\u7EBE\u6BF9\u8167\u6BB3\u956F\u79EB\u9E6C",
    shua: "\u5237\u800D\u5530\u6DAE",
    shuai: "\u6454\u8870\u7529\u5E05\u87C0",
    shuan: "\u6813\u62F4\u95E9",
    shuang: "\u971C\u53CC\u723D\u5B40",
    shui: "\u8C01\u6C34\u7761\u7A0E",
    shun: "\u542E\u77AC\u987A\u821C\u6042",
    shuo: "\u8BF4\u7855\u6714\u70C1\u84B4\u6420\u55CD\u6FEF\u5981\u69CA\u94C4",
    si: "\u65AF\u6495\u5636\u601D\u79C1\u53F8\u4E1D\u6B7B\u8086\u5BFA\u55E3\u56DB\u4F3A\u4F3C\u9972\u5DF3\u53AE\u4FDF\u5155\u83E5\u549D\u6C5C\u6CD7\u6F8C\u59D2\u9A77\u7F0C\u7940\u7960\u9536\u9E36\u801C\u86F3\u7B25",
    song: "\u677E\u8038\u6002\u9882\u9001\u5B8B\u8BBC\u8BF5\u51C7\u83D8\u5D27\u5D69\u5FEA\u609A\u6DDE\u7AE6",
    sou: "\u641C\u8258\u64DE\u55FD\u53DF\u55D6\u55FE\u998A\u6EB2\u98D5\u778D\u953C\u878B",
    su: "\u82CF\u9165\u4FD7\u7D20\u901F\u7C9F\u50F3\u5851\u6EAF\u5BBF\u8BC9\u8083\u5919\u8C21\u850C\u55C9\u612B\u7C0C\u89EB\u7A23",
    suan: "\u9178\u849C\u7B97",
    sui: "\u867D\u968B\u968F\u7EE5\u9AD3\u788E\u5C81\u7A57\u9042\u96A7\u795F\u84D1\u51AB\u8C07\u6FC9\u9083\u71E7\u772D\u7762",
    sun: "\u5B59\u635F\u7B0B\u836A\u72F2\u98E7\u69AB\u8DE3\u96BC",
    suo: "\u68AD\u5506\u7F29\u7410\u7D22\u9501\u6240\u5522\u55E6\u5A11\u686B\u7743\u7FA7",
    ta: "\u584C\u4ED6\u5B83\u5979\u5854\u736D\u631E\u8E4B\u8E0F\u95FC\u6EBB\u9062\u69BB\u6C93",
    tai: "\u80CE\u82D4\u62AC\u53F0\u6CF0\u915E\u592A\u6001\u6C70\u90B0\u85B9\u80BD\u70B1\u949B\u8DC6\u9C90",
    tan: "\u574D\u644A\u8D2A\u762B\u6EE9\u575B\u6A80\u75F0\u6F6D\u8C2D\u8C08\u5766\u6BEF\u8892\u78B3\u63A2\u53F9\u70AD\u90EF\u8548\u6619\u94BD\u952C\u8983",
    tang: "\u6C64\u5858\u642A\u5802\u68E0\u819B\u5510\u7CD6\u50A5\u9967\u6E8F\u746D\u94F4\u9557\u8025\u8797\u87B3\u7FB0\u91A3",
    thang: "\u5018\u8EBA\u6DCC",
    theng: "\u8D9F\u70EB",
    tao: "\u638F\u6D9B\u6ED4\u7EE6\u8404\u6843\u9003\u6DD8\u9676\u8BA8\u5957\u6311\u9F17\u5555\u97EC\u9955",
    te: "\u7279",
    teng: "\u85E4\u817E\u75BC\u8A8A\u6ED5",
    ti: "\u68AF\u5254\u8E22\u9511\u63D0\u9898\u8E44\u557C\u4F53\u66FF\u568F\u60D5\u6D95\u5243\u5C49\u8351\u608C\u9016\u7EE8\u7F07\u9E48\u88FC\u918D",
    tian: "\u5929\u6DFB\u586B\u7530\u751C\u606C\u8214\u8146\u63AD\u5FDD\u9617\u6B84\u754B\u94BF\u86BA",
    tiao: "\u6761\u8FE2\u773A\u8DF3\u4F7B\u7967\u94EB\u7A95\u9F86\u9CA6",
    tie: "\u8D34\u94C1\u5E16\u841C\u992E",
    ting: "\u5385\u542C\u70C3\u6C40\u5EF7\u505C\u4EAD\u5EAD\u633A\u8247\u839B\u8476\u5A77\u6883\u8713\u9706",
    tong: "\u901A\u6850\u916E\u77B3\u540C\u94DC\u5F64\u7AE5\u6876\u6345\u7B52\u7EDF\u75DB\u4F5F\u50EE\u4EDD\u833C\u55F5\u6078\u6F7C\u783C",
    tou: "\u5077\u6295\u5934\u900F\u4EA0",
    tu: "\u51F8\u79C3\u7A81\u56FE\u5F92\u9014\u6D82\u5C60\u571F\u5410\u5154\u580D\u837C\u83DF\u948D\u9174",
    tuan: "\u6E4D\u56E2\u7583",
    tui: "\u63A8\u9893\u817F\u8715\u892A\u9000\u5FD2\u717A",
    tun: "\u541E\u5C6F\u81C0\u9968\u66BE\u8C5A\u7A80",
    tuo: "\u62D6\u6258\u8131\u9E35\u9640\u9A6E\u9A7C\u692D\u59A5\u62D3\u553E\u4E47\u4F57\u5768\u5EB9\u6CB1\u67DD\u7823\u7BA8\u8204\u8DCE\u9F0D",
    wa: "\u6316\u54C7\u86D9\u6D3C\u5A03\u74E6\u889C\u4F64\u5A32\u817D",
    wai: "\u6B6A\u5916",
    wan: "\u8C4C\u5F2F\u6E7E\u73A9\u987D\u4E38\u70F7\u5B8C\u7897\u633D\u665A\u7696\u60CB\u5B9B\u5A49\u4E07\u8155\u525C\u8284\u82CB\u83C0\u7EA8\u7EFE\u742C\u8118\u7579\u873F\u7BA2",
    wang: "\u6C6A\u738B\u4EA1\u6789\u7F51\u5F80\u65FA\u671B\u5FD8\u5984\u7F54\u5C22\u60D8\u8F8B\u9B4D",
    wei: "\u5A01\u5DCD\u5FAE\u5371\u97E6\u8FDD\u6845\u56F4\u552F\u60DF\u4E3A\u6F4D\u7EF4\u82C7\u840E\u59D4\u4F1F\u4F2A\u5C3E\u7EAC\u672A\u851A\u5473\u754F\u80C3\u5582\u9B4F\u4F4D\u6E2D\u8C13\u5C09\u6170\u536B\u502D\u504E\u8BFF\u9688\u8473\u8587\u5E0F\u5E37\u5D34\u5D6C\u7325\u732C\u95F1\u6CA9\u6D27\u6DA0\u9036\u5A13\u73AE\u97EA\u8ECE\u709C\u7168\u71A8\u75FF\u8249\u9C94",
    wen: "\u761F\u6E29\u868A\u6587\u95FB\u7EB9\u543B\u7A33\u7D0A\u95EE\u520E\u6120\u960C\u6C76\u74BA\u97EB\u6B81\u96EF",
    weng: "\u55E1\u7FC1\u74EE\u84CA\u8579",
    wo: "\u631D\u8717\u6DA1\u7A9D\u6211\u65A1\u5367\u63E1\u6C83\u83B4\u5E44\u6E25\u674C\u809F\u9F8C",
    wu: "\u5DEB\u545C\u94A8\u4E4C\u6C61\u8BEC\u5C4B\u65E0\u829C\u68A7\u543E\u5434\u6BCB\u6B66\u4E94\u6342\u5348\u821E\u4F0D\u4FAE\u575E\u620A\u96FE\u6664\u7269\u52FF\u52A1\u609F\u8BEF\u5140\u4EF5\u9622\u90AC\u572C\u82B4\u5E91\u6003\u5FE4\u6D6F\u5BE4\u8FD5\u59A9\u9A9B\u727E\u7110\u9E49\u9E5C\u8708\u92C8\u9F2F",
    xi: "\u6614\u7199\u6790\u897F\u7852\u77FD\u6670\u563B\u5438\u9521\u727A\u7A00\u606F\u5E0C\u6089\u819D\u5915\u60DC\u7184\u70EF\u6EAA\u6C50\u7280\u6A84\u88AD\u5E2D\u4E60\u5AB3\u559C\u94E3\u6D17\u7CFB\u9699\u620F\u7EC6\u50D6\u516E\u96B0\u90D7\u831C\u8478\u84F0\u595A\u550F\u5F99\u9969\u960B\u6D60\u6DC5\u5C63\u5B09\u73BA\u6A28\u66E6\u89CB\u6B37\u71B9\u798A\u79A7\u94B8\u7699\u7A78\u8725\u87CB\u823E\u7FB2\u7C9E\u7FD5\u91AF\u9F37",
    xia: "\u778E\u867E\u5323\u971E\u8F96\u6687\u5CE1\u4FA0\u72ED\u4E0B\u53A6\u590F\u5413\u6380\u846D\u55C4\u72CE\u9050\u7455\u7856\u7615\u7F45\u9EE0",
    xian: "\u9528\u5148\u4ED9\u9C9C\u7EA4\u54B8\u8D24\u8854\u8237\u95F2\u6D8E\u5F26\u5ACC\u663E\u9669\u73B0\u732E\u53BF\u817A\u9985\u7FA1\u5BAA\u9677\u9650\u7EBF\u51BC\u85D3\u5C98\u7303\u66B9\u5A34\u6C19\u7946\u9E47\u75EB\u86AC\u7B45\u7C7C\u9170\u8DF9",
    xiang: "\u76F8\u53A2\u9576\u9999\u7BB1\u8944\u6E58\u4E61\u7FD4\u7965\u8BE6\u60F3\u54CD\u4EAB\u9879\u5DF7\u6A61\u50CF\u5411\u8C61\u8297\u8459\u9977\u5EA0\u9AA7\u7F03\u87D3\u9C9E\u98E8",
    xiao: "\u8427\u785D\u9704\u524A\u54EE\u56A3\u9500\u6D88\u5BB5\u6DC6\u6653\u5C0F\u5B5D\u6821\u8096\u5578\u7B11\u6548\u54D3\u54BB\u5D24\u6F47\u900D\u9A81\u7EE1\u67AD\u67B5\u7B71\u7BAB\u9B48",
    xie: "\u6954\u4E9B\u6B47\u874E\u978B\u534F\u631F\u643A\u90AA\u659C\u80C1\u8C10\u5199\u68B0\u5378\u87F9\u61C8\u6CC4\u6CFB\u8C22\u5C51\u5055\u4EB5\u52F0\u71EE\u85A4\u64B7\u5EE8\u7023\u9082\u7EC1\u7F2C\u69AD\u698D\u6B59\u8E9E",
    xin: "\u85AA\u82AF\u950C\u6B23\u8F9B\u65B0\u5FFB\u5FC3\u4FE1\u8845\u56DF\u99A8\u8398\u6B46\u94FD\u946B",
    xing: "\u661F\u8165\u7329\u60FA\u5174\u5211\u578B\u5F62\u90A2\u884C\u9192\u5E78\u674F\u6027\u59D3\u9649\u8347\u8365\u64E4\u60BB\u784E",
    xiong: "\u5144\u51F6\u80F8\u5308\u6C79\u96C4\u718A\u828E",
    xiu: "\u4F11\u4FEE\u7F9E\u673D\u55C5\u9508\u79C0\u8896\u7EE3\u83A0\u5CAB\u9990\u5EA5\u9E3A\u8C85\u9AF9",
    xu: "\u589F\u620C\u9700\u865A\u5618\u987B\u5F90\u8BB8\u84C4\u9157\u53D9\u65ED\u5E8F\u755C\u6064\u7D6E\u5A7F\u7EEA\u7EED\u8BB4\u8BE9\u5729\u84FF\u6035\u6D2B\u6E86\u987C\u6829\u7166\u7809\u76F1\u80E5\u7CC8\u9191",
    xuan: "\u8F69\u55A7\u5BA3\u60AC\u65CB\u7384\u9009\u7663\u7729\u7EDA\u5107\u8C16\u8431\u63CE\u9994\u6CEB\u6D35\u6E32\u6F29\u7487\u6966\u6684\u70AB\u714A\u78B9\u94C9\u955F\u75C3",
    xue: "\u9774\u859B\u5B66\u7A74\u96EA\u8840\u5671\u6CF6\u9CD5",
    xun: "\u52CB\u718F\u5FAA\u65EC\u8BE2\u5BFB\u9A6F\u5DE1\u6B89\u6C5B\u8BAD\u8BAF\u900A\u8FC5\u5DFD\u57D9\u8340\u85B0\u5CCB\u5F87\u6D54\u66DB\u7AA8\u91BA\u9C9F",
    ya: "\u538B\u62BC\u9E26\u9E2D\u5440\u4E2B\u82BD\u7259\u869C\u5D16\u8859\u6DAF\u96C5\u54D1\u4E9A\u8BB6\u4F22\u63E0\u5416\u5C88\u8FD3\u5A05\u740A\u6860\u6C29\u7811\u775A\u75D6",
    yan: "\u7109\u54BD\u9609\u70DF\u6DF9\u76D0\u4E25\u7814\u8712\u5CA9\u5EF6\u8A00\u989C\u960E\u708E\u6CBF\u5944\u63A9\u773C\u884D\u6F14\u8273\u5830\u71D5\u538C\u781A\u96C1\u5501\u5F66\u7130\u5BB4\u8C1A\u9A8C\u53A3\u9765\u8D5D\u4FE8\u5043\u5156\u8BA0\u8C33\u90FE\u9122\u82AB\u83F8\u5D26\u6079\u95EB\u960F\u6D07\u6E6E\u6EDF\u598D\u5AE3\u7430\u664F\u80ED\u814C\u7131\u7F68\u7B75\u917D\u9B47\u990D\u9F39",
    yang: "\u6B83\u592E\u9E2F\u79E7\u6768\u626C\u4F6F\u75A1\u7F8A\u6D0B\u9633\u6C27\u4EF0\u75D2\u517B\u6837\u6F3E\u5F89\u600F\u6CF1\u7080\u70CA\u6059\u86D8\u9785",
    yao: "\u9080\u8170\u5996\u7476\u6447\u5C27\u9065\u7A91\u8C23\u59DA\u54AC\u8200\u836F\u8981\u8000\u592D\u723B\u5406\u5D3E\u5FAD\u7039\u5E7A\u73E7\u6773\u66DC\u80B4\u9E5E\u7A88\u7E47\u9CD0",
    ye: "\u6930\u564E\u8036\u7237\u91CE\u51B6\u4E5F\u9875\u6396\u4E1A\u53F6\u66F3\u814B\u591C\u6DB2\u8C12\u90BA\u63F6\u9980\u6654\u70E8\u94D8",
    yi: "\u4E00\u58F9\u533B\u63D6\u94F1\u4F9D\u4F0A\u8863\u9890\u5937\u9057\u79FB\u4EEA\u80F0\u7591\u6C82\u5B9C\u59E8\u5F5D\u6905\u8681\u501A\u5DF2\u4E59\u77E3\u4EE5\u827A\u6291\u6613\u9091\u5C79\u4EBF\u5F79\u81C6\u9038\u8084\u75AB\u4EA6\u88D4\u610F\u6BC5\u5FC6\u4E49\u76CA\u6EA2\u8BE3\u8BAE\u8C0A\u8BD1\u5F02\u7FFC\u7FCC\u7ECE\u5208\u5293\u4F7E\u8BD2\u572A\u572F\u57F8\u61FF\u82E1\u858F\u5F08\u5955\u6339\u5F0B\u5453\u54A6\u54BF\u566B\u5CC4\u5DB7\u7317\u9974\u603F\u6021\u6092\u6F2A\u8FE4\u9A7F\u7F22\u6BAA\u8D3B\u65D6\u71A0\u9487\u9552\u9571\u75CD\u7617\u7654\u7FCA\u8864\u8734\u8223\u7FBF\u7FF3\u914F\u9EDF",
    yin: "\u8335\u836B\u56E0\u6BB7\u97F3\u9634\u59FB\u541F\u94F6\u6DEB\u5BC5\u996E\u5C39\u5F15\u9690\u5370\u80E4\u911E\u5819\u831A\u5591\u72FA\u5924\u6C24\u94DF\u763E\u8693\u972A\u9F88",
    ying: "\u82F1\u6A31\u5A74\u9E70\u5E94\u7F28\u83B9\u8424\u8425\u8367\u8747\u8FCE\u8D62\u76C8\u5F71\u9896\u786C\u6620\u5B34\u90E2\u8314\u83BA\u8426\u6484\u5624\u81BA\u6EE2\u6F46\u701B\u745B\u748E\u6979\u9E66\u763F\u988D\u7F42",
    yo: "\u54DF\u5537",
    yong: "\u62E5\u4F63\u81C3\u75C8\u5EB8\u96CD\u8E0A\u86F9\u548F\u6CF3\u6D8C\u6C38\u607F\u52C7\u7528\u4FD1\u58C5\u5889\u6175\u9095\u955B\u752C\u9CD9\u9954",
    you: "\u5E7D\u4F18\u60A0\u5FE7\u5C24\u7531\u90AE\u94C0\u72B9\u6CB9\u6E38\u9149\u6709\u53CB\u53F3\u4F51\u91C9\u8BF1\u53C8\u5E7C\u5363\u6538\u4F91\u83B8\u5466\u56FF\u5BA5\u67DA\u7337\u7256\u94D5\u75A3\u8763\u9C7F\u9EDD\u9F2C",
    yu: "\u8FC2\u6DE4\u4E8E\u76C2\u6986\u865E\u611A\u8206\u4F59\u4FDE\u903E\u9C7C\u6109\u6E1D\u6E14\u9685\u4E88\u5A31\u96E8\u4E0E\u5C7F\u79B9\u5B87\u8BED\u7FBD\u7389\u57DF\u828B\u90C1\u5401\u9047\u55BB\u5CEA\u5FA1\u6108\u6B32\u72F1\u80B2\u8A89\u6D74\u5BD3\u88D5\u9884\u8C6B\u9A6D\u79BA\u6BD3\u4F1B\u4FE3\u8C00\u8C15\u8438\u84E3\u63C4\u5581\u5704\u5709\u5D5B\u72F3\u996B\u5EBE\u9608\u59AA\u59A4\u7EA1\u745C\u6631\u89CE\u8174\u6B24\u65BC\u715C\u71E0\u807F\u94B0\u9E46\u7610\u7600\u7AB3\u8753\u7AFD\u8201\u96E9\u9F89",
    yuan: "\u9E33\u6E0A\u51A4\u5143\u57A3\u8881\u539F\u63F4\u8F95\u56ED\u5458\u5706\u733F\u6E90\u7F18\u8FDC\u82D1\u613F\u6028\u9662\u586C\u6C85\u5A9B\u7457\u6A7C\u7230\u7722\u9E22\u8788\u9F0B",
    yue: "\u66F0\u7EA6\u8D8A\u8DC3\u94A5\u5CB3\u7CA4\u6708\u60A6\u9605\u9FA0\u6A3E\u5216\u94BA",
    yun: "\u8018\u4E91\u90E7\u5300\u9668\u5141\u8FD0\u8574\u915D\u6655\u97F5\u5B55\u90D3\u82B8\u72C1\u607D\u7EAD\u6B92\u6600\u6C32",
    za: "\u531D\u7838\u6742\u62F6\u5482",
    zai: "\u683D\u54C9\u707E\u5BB0\u8F7D\u518D\u5728\u54B1\u5D3D\u753E",
    zan: "\u6512\u6682\u8D5E\u74D2\u661D\u7C2A\u7CCC\u8DB1\u933E",
    zang: "\u8D43\u810F\u846C\u5958\u6215\u81E7",
    zao: "\u906D\u7CDF\u51FF\u85FB\u67A3\u65E9\u6FA1\u86A4\u8E81\u566A\u9020\u7682\u7076\u71E5\u5523\u7F2B",
    ze: "\u8D23\u62E9\u5219\u6CFD\u4EC4\u8D5C\u5567\u8FEE\u6603\u7B2E\u7BA6\u8234",
    zei: "\u8D3C",
    zen: "\u600E\u8C2E",
    zeng: "\u589E\u618E\u66FE\u8D60\u7F2F\u7511\u7F7E\u9503",
    zha: "\u624E\u55B3\u6E23\u672D\u8F67\u94E1\u95F8\u7728\u6805\u69A8\u548B\u4E4D\u70B8\u8BC8\u63F8\u5412\u54A4\u54F3\u600D\u781F\u75C4\u86B1\u9F44",
    zhai: "\u6458\u658B\u5B85\u7A84\u503A\u5BE8\u7826",
    zhan: "\u77BB\u6BE1\u8A79\u7C98\u6CBE\u76CF\u65A9\u8F97\u5D2D\u5C55\u8638\u6808\u5360\u6218\u7AD9\u6E5B\u7EFD\u8C35\u640C\u65C3",
    zhang: "\u6A1F\u7AE0\u5F70\u6F33\u5F20\u638C\u6DA8\u6756\u4E08\u5E10\u8D26\u4ED7\u80C0\u7634\u969C\u4EC9\u9123\u5E5B\u5D82\u7350\u5ADC\u748B\u87D1",
    zhao: "\u62DB\u662D\u627E\u6CBC\u8D75\u7167\u7F69\u5146\u8087\u53EC\u722A\u8BCF\u68F9\u948A\u7B0A",
    zhe: "\u906E\u6298\u54F2\u86F0\u8F99\u8005\u9517\u8517\u8FD9\u6D59\u8C2A\u966C\u67D8\u8F84\u78D4\u9E67\u891A\u8707\u8D6D",
    zhen: "\u73CD\u659F\u771F\u7504\u7827\u81FB\u8D1E\u9488\u4FA6\u6795\u75B9\u8BCA\u9707\u632F\u9547\u9635\u7F1C\u6862\u699B\u8F78\u8D48\u80D7\u6715\u796F\u755B\u9E29",
    zheng: "\u84B8\u6323\u7741\u5F81\u72F0\u4E89\u6014\u6574\u62EF\u6B63\u653F\u5E27\u75C7\u90D1\u8BC1\u8BE4\u5CE5\u94B2\u94EE\u7B5D",
    zhi: "\u829D\u679D\u652F\u5431\u8718\u77E5\u80A2\u8102\u6C41\u4E4B\u7EC7\u804C\u76F4\u690D\u6B96\u6267\u503C\u4F84\u5740\u6307\u6B62\u8DBE\u53EA\u65E8\u7EB8\u5FD7\u631A\u63B7\u81F3\u81F4\u7F6E\u5E1C\u5CD9\u5236\u667A\u79E9\u7A1A\u8D28\u7099\u75D4\u6EDE\u6CBB\u7A92\u536E\u965F\u90C5\u57F4\u82B7\u646D\u5E19\u5FEE\u5F58\u54AB\u9A98\u6809\u67B3\u6800\u684E\u8F75\u8F7E\u6534\u8D3D\u81A3\u7949\u7957\u9EF9\u96C9\u9E37\u75E3\u86ED\u7D77\u916F\u8DD6\u8E2C\u8E2F\u8C78\u89EF",
    zhong: "\u4E2D\u76C5\u5FE0\u949F\u8877\u7EC8\u79CD\u80BF\u91CD\u4EF2\u4F17\u51A2\u953A\u87BD\u8202\u822F\u8E35",
    zhou: "\u821F\u5468\u5DDE\u6D32\u8BCC\u7CA5\u8F74\u8098\u5E1A\u5492\u76B1\u5B99\u663C\u9AA4\u5544\u7740\u501C\u8BF9\u836E\u9B3B\u7EA3\u80C4\u78A1\u7C40\u8233\u914E\u9CB7",
    zhu: "\u73E0\u682A\u86DB\u6731\u732A\u8BF8\u8BDB\u9010\u7AF9\u70DB\u716E\u62C4\u77A9\u5631\u4E3B\u8457\u67F1\u52A9\u86C0\u8D2E\u94F8\u7B51\u4F4F\u6CE8\u795D\u9A7B\u4F2B\u4F8F\u90BE\u82CE\u8331\u6D19\u6E1A\u6F74\u9A7A\u677C\u69E0\u6A65\u70B7\u94E2\u75B0\u7603\u86B0\u7AFA\u7BB8\u7FE5\u8E85\u9E88",
    zhua: "\u6293",
    zhuai: "\u62FD",
    zhuan: "\u4E13\u7816\u8F6C\u64B0\u8D5A\u7BC6\u629F\u556D\u989B",
    zhuang: "\u6869\u5E84\u88C5\u5986\u649E\u58EE\u72B6\u4E2C",
    zhui: "\u690E\u9525\u8FFD\u8D58\u5760\u7F00\u8411\u9A93\u7F12",
    zhun: "\u8C06\u51C6",
    zhuo: "\u6349\u62D9\u5353\u684C\u7422\u8301\u914C\u707C\u6D4A\u502C\u8BFC\u5EF4\u855E\u64E2\u555C\u6D5E\u6DBF\u6753\u712F\u799A\u65AB",
    zi: "\u5179\u54A8\u8D44\u59FF\u6ECB\u6DC4\u5B5C\u7D2B\u4ED4\u7C7D\u6ED3\u5B50\u81EA\u6E0D\u5B57\u8C18\u5D6B\u59CA\u5B73\u7F01\u6893\u8F8E\u8D40\u6063\u7726\u9531\u79ED\u8014\u7B2B\u7CA2\u89DC\u8A3E\u9CBB\u9AED",
    zong: "\u9B03\u68D5\u8E2A\u5B97\u7EFC\u603B\u7EB5\u8159\u7CBD",
    zou: "\u90B9\u8D70\u594F\u63CD\u9139\u9CB0",
    zu: "\u79DF\u8DB3\u5352\u65CF\u7956\u8BC5\u963B\u7EC4\u4FCE\u83F9\u5550\u5F82\u9A75\u8E74",
    zuan: "\u94BB\u7E82\u6525\u7F35",
    zui: "\u5634\u9189\u6700\u7F6A",
    zun: "\u5C0A\u9075\u6499\u6A3D\u9CDF",
    zuo: "\u6628\u5DE6\u4F50\u67DE\u505A\u4F5C\u5750\u5EA7\u961D\u963C\u80D9\u795A\u9162",
    cou: "\u85AE\u6971\u8F8F\u8160",
    nang: "\u652E\u54DD\u56D4\u9995\u66E9",
    o: "\u5594",
    dia: "\u55F2",
    chuai: "\u562C\u81AA\u8E39",
    cen: "\u5C91\u6D94",
    diu: "\u94E5",
    nou: "\u8028",
    fou: "\u7F36",
    bia: "\u9ADF"
  };
  var l2 = l1.length;
  var I1 = '';
  var reg = new RegExp('[a-zA-Z0-9\- ]');

  for (var i = 0; i < l2; i++) {
    var val = l1.substr(i, 1);
    var name = ''; // 搜索字符

    for (var p in pi) {
      if (pi[p].indexOf(val) !== -1) {
        name = p;
        break;
      }
    }

    if (reg.test(val) || name.length === 0) {
      I1 += val;
    } else if (name.length > 0) {
      switch (type) {
        // ----------首字母
        case 'PY':
          // 大写
          name = name.substr(0, 1).toUpperCase();
          break;

        case 'py':
          // 小写
          name = name.substr(0, 1);
          break;
        // -----------全文

        case 'PINYIN':
          // 大小
          name = name.toUpperCase();
          break;

        case 'pinyin':
          // 小写
          break;

        default:
          // PinYin 首字母大写
          var first = name.substr(0, 1).toUpperCase();
          var spare = name.substr(1, name.length);
          name = first + spare;
          break;
      }

      I1 += name;
    }
  }

  I1 = I1.replace(/ /g, '-');

  while (I1.indexOf('--') > 0) {
    I1 = I1.replace('--', '-');
  }

  return I1;
}

/***/ }),

/***/ "./src/core/je/util/uploader.js":
/*!**************************************!*\
  !*** ./src/core/je/util/uploader.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.retFile = retFile;
exports.compress = compress;
exports.upload = upload;
exports.uploadFile = uploadFile;

var _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/regenerator/index.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/createClass.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/defineProperty.js"));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/asyncToGenerator.js"));

var _exifJs = _interopRequireDefault(__webpack_require__(/*! exif-js */ "./node_modules/_exif-js@2.3.0@exif-js/exif.js"));

/**
 * 返回的文件格式
 * @return {{path: *, name: never, id: *}}
 */
function retFile(_ref) {
  var path = _ref.path,
      name = _ref.name,
      id = _ref.id;
  return {
    path: path,
    name: name,
    id: id
  };
}
/**
 * 链接转文件
 * @param {String} dataurl base64
 * @return {Blob}
 */


function dataURItoBlob(dataurl) {
  // dataurl是base64格式
  var arr = dataurl.split(',');
  var mime = arr[0].match(/:(.*?);/)[1];
  var bstr = atob(arr[1]);
  var n = bstr.length;
  var u8arr = new Uint8Array(n);

  while (n--) {
    u8arr[n] = bstr.charCodeAt(n);
  }

  return new Blob([u8arr], {
    type: mime
  });
} // 压缩


function _compress(image, tags) {
  var orientation = tags.Orientation;
  var MAX_WH = 800;

  if (image.height > MAX_WH) {
    // 宽度等比例缩放 *=
    image.width *= MAX_WH / image.height;
    image.height = MAX_WH;
  }

  if (image.width > MAX_WH) {
    // 宽度等比例缩放 *=
    image.height *= MAX_WH / image.width;
    image.width = MAX_WH;
  } // 压缩


  var quality = 0.4;
  var cvs = document.createElement('canvas');
  var width = cvs.width = image.width;
  var height = cvs.height = image.height;

  if ([5, 6, 7, 8].indexOf(orientation) > -1) {
    cvs.width = height;
    cvs.height = width;
  } else {
    cvs.width = width;
    cvs.height = height;
  }

  var context = cvs.getContext('2d');
  context.fillStyle = '#fff';
  context.fillRect(0, 0, cvs.width, cvs.height);

  switch (orientation) {
    case 2:
      context.transform(-1, 0, 0, 1, width, 0);
      break;

    case 3:
      context.transform(-1, 0, 0, -1, width, height);
      break;

    case 4:
      context.transform(1, 0, 0, -1, 0, height);
      break;

    case 5:
      context.transform(0, 1, 1, 0, 0, 0);
      break;

    case 6:
      context.transform(0, 1, -1, 0, height, 0);
      break;

    case 7:
      context.transform(0, -1, -1, 0, height, width);
      break;

    case 8:
      context.transform(0, -1, 1, 0, 0, width);
      break;

    default:
      context.transform(1, 0, 0, 1, 0, 0);
  }

  context.drawImage(image, 0, 0, image.width, image.height);
  var base64Url = cvs.toDataURL('image/jpeg', quality);
  var blob = dataURItoBlob(base64Url);
  return {
    file: new File([blob], image.alt, {
      type: blob.type
    }),
    priviewUrl: base64Url
  };
}
/**
 * 压缩图片
 * @param {*} file 文件
 */


function compress(file) {
  return new Promise(function (resolve, reject) {
    var reader = new FileReader();
    reader.readAsDataURL(file); // eslint-disable-next-line func-names

    reader.onloadend = function () {
      var dataURL = this.result; // 图片的src，base64格式

      var image = new Image();
      image.alt = file.name; // eslint-disable-next-line func-names

      image.onload = function () {
        // 获取识别结果
        // eslint-disable-next-line func-names
        _exifJs["default"].getData(image, function () {
          var tags = _exifJs["default"].getAllTags(this);

          resolve(_compress(image, tags));
        });
      };

      image.src = dataURL;
    };
  });
}
/**
 * 上传
 * @param {file} file 文件
 * @param {Object} options 上传参数
 * @returns {*}
 */


function upload(_x, _x2) {
  return _upload.apply(this, arguments);
} // eslint-disable-next-line import/prefer-default-export


function _upload() {
  _upload = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee(compressFile, options) {
    var uploading, params, file, formData;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            uploading = options.uploading, params = options.params;
            file = compressFile.file;
            formData = new FormData();
            formData.append('files', file, file.name);
            JE.each(params, function (val, key) {
              formData.append(key, val);
            });
            return _context.abrupt("return", JE.ajax({
              url: JE.getUrlMaps('je.core.doc.new.document', 'file'),
              params: formData,
              contentType: 'multipart/form-data',
              upload: true,
              // 添加上传进度监听事件
              onUploadProgress: function onUploadProgress(e) {
                var completeProgress = "".concat(e.loaded / e.total * 100 | 0, "%");
                uploading && uploading(compressFile, completeProgress);
              }
            }));

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _upload.apply(this, arguments);
}

function uploadFile(options) {
  var callback = options.callback,
      path = options.path;
  var files = path;

  if (JE.isEmpty(files)) {
    new UploadUtil({
      multiple: options.multiple,
      callback: function callback(files) {
        options.path = files;
        uploadFile(options);
      }
    });
  } else {
    var promiseWorks = [];

    for (var i = 0; i < files.length; i++) {
      var file = files[i];
      var promiseWork = compress(file).then(function (compressFile) {
        return upload(compressFile, options);
      }).then(function (res) {
        var obj = res.obj && res.obj[0] || {};
        callback && callback([retFile({
          path: obj.fileKey,
          name: obj.relName,
          id: obj.fileKey
        })], res);
        return res;
      });
      promiseWorks.push(promiseWork);
      return Promise.all(promiseWorks); // config.compress && config.compress(fileData);
      // const obj = upload(data.file, fileData, config.uploading);
      // config.uploaded && config.uploaded(fileData, obj);
    }
  }
}

var UploadUtil =
/*#__PURE__*/
function () {
  (0, _createClass2["default"])(UploadUtil, [{
    key: "callback",
    value: function callback() {}
  }]);

  function UploadUtil(options) {
    (0, _classCallCheck2["default"])(this, UploadUtil);
    (0, _defineProperty2["default"])(this, "className", '__je-upload__');
    (0, _defineProperty2["default"])(this, "el", null);
    (0, _defineProperty2["default"])(this, "multiple", false);
    this.multiple = options.multiple;
    options.callback && (this.callback = options.callback);
    return this.createEl();
  }

  (0, _createClass2["default"])(UploadUtil, [{
    key: "createEl",
    value: function createEl() {
      // 创建元素
      var el = this.getUploader();

      if (el) {
        return el;
      }

      el = document.createElement('input');
      el.setAttribute('type', 'file');
      el.setAttribute('class', this.className);
      this.el = el;
      this.initEvents();
      return this.getUploader();
    } // 返回上传器

  }, {
    key: "getUploader",
    value: function getUploader() {
      return this.el;
    }
  }, {
    key: "initEvents",
    value: function initEvents() {
      var _this = this;

      var el = this.getUploader();
      el.click();
      el.addEventListener('change', function (e) {
        var files = e.target.files;

        _this.callback(files);
      });
    }
  }]);
  return UploadUtil;
}();

/***/ }),

/***/ "./src/core/je/util/util.js":
/*!**********************************!*\
  !*** ./src/core/je/util/util.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _DelayedTask = _interopRequireDefault(__webpack_require__(/*! ../class/DelayedTask */ "./src/core/je/class/DelayedTask.js"));

var _Element = _interopRequireDefault(__webpack_require__(/*! ../class/Element */ "./src/core/je/class/Element.js"));

var _Store = _interopRequireDefault(__webpack_require__(/*! ../class/Store */ "./src/core/je/class/Store.js"));

/**
 * 工具类.
 * @module JE/util
 */
// 增加函数标识
Function.prototype.$isFunction = true; // 格式化html字符串

var htmlEntityKeys = ['&amp;', '&gt;', '&lt;', '&quot;', '&#39;'];
var htmlCharKeys = ['&', '>', '<', '"', "'"];
/**
 * 字符串替换全部
 * @param {String} s1 目标字符串
 * @param {String} s2 替换字符串
 * @returns {String}
 */

if (!String.prototype.replaceAll) {
  // eslint-disable-next-line func-names
  String.prototype.replaceAll = function (s1, s2) {
    return this.replace(new RegExp(s1, 'gm'), s2);
  };
}
/**
 * 字节数
 * @return {Number}
 */
// eslint-disable-next-line func-names


String.prototype.strLen = function () {
  var len = 0;

  for (var i = 0; i < this.length; i++) {
    if (this.charCodeAt(i) > 255 || this.charCodeAt(i) < 0) len += 2;else len++;
  }

  return len;
};

var _default = {
  /**
   * 设置本地缓存
   * @link JE#setLSItem
   * @param {String} key 键
   * @param {String} value 值
   */
  setLSItem: function setLSItem(key, value) {
    var storage = window.mui && window.mui.os.plus ? window.plus.storage : window.localStorage;

    if (key === null || key === undefined) {
      storage.clear();
    } else if (value === null || value === undefined) {
      storage.removeItem(key);
    } else {
      storage.setItem(key, value);
    }
  },

  /**
   * 获得本地缓存
   * @param {String} key 键
   * @returns {String}
   */
  getLSItem: function getLSItem(key) {
    var storage = window.mui && window.mui.os.plus ? window.plus.storage : window.localStorage;
    return storage.getItem(key);
  },

  /**
   * 判断字符串
   * @function
   * @param {Object} value 值
   * @returns {Boolean}
   */
  isString: function isString(value) {
    return typeof value === 'string';
  },

  /**
   *判断日期
   * @param {Date} value 值
   * @returns {Boolean}
   */
  isDate: function isDate(value) {
    return Object.prototype.toString.call(value) === '[object Date]';
  },

  /**
   * 判断数字
   * @function
   * @param {Object} value 值
   * @returns {Boolean}
   */
  isNumber: function isNumber(value) {
    return typeof value === 'number' && Number.isFinite(value);
  },

  /**
   * 判断数字
   * @function
   * @param {Object} value 值
   * @returns {Boolean}
   */
  isNumeric: function isNumeric(value) {
    return !Number.isNaN(parseFloat(value)) && Number.isFinite(parseFloat(value));
  },

  /**
   * 判断Bool
   * @function
   * @param {Object} value 值
   * @returns {Boolean}
   */
  isBoolean: function isBoolean(value) {
    return typeof value === 'boolean';
  },

  /**
   * 判断Dom元素
   * @function
   * @param {Object} value 值
   * @returns {Boolean}
   */
  isElement: function isElement(value) {
    return value ? value.nodeType === 1 : false;
  },

  /**
   * 判断数组
   * @function
   * @param {Object} value 值
   * @returns {Boolean}
   */
  isArray: 'isArray' in Array ? Array.isArray : function (value) {
    return Object.prototype.toString.call(value) === '[object Array]';
  },

  /**
   * 判断对象
   * @function
   * @param {Object} value 值
   * @returns {Boolean}
   */
  isObject: Object.prototype.toString.call(null) === '[object Object]' ? function (value) {
    return value !== null && value !== undefined && Object.prototype.toString.call(value) === '[object Object]' && value.ownerDocument === undefined;
  } : function (value) {
    return Object.prototype.toString.call(value) === '[object Object]';
  },

  /**
   * 判断函数
   * @function
   * @param {Object} value 值
   * @returns {Boolean}
   */
  isFunction: function isFunction(value) {
    return !!(value && value.$isFunction);
  },

  /**
   * 判断是否为空
   * @param {String|Array|Object} value 值
   * @param {Boolean} [allowEmptyString]  允许空字符串
   * @returns {Boolean}
   */
  isEmpty: function isEmpty(value, allowEmptyString) {
    if (value === null || value === undefined) return true;
    if (this.isArray(value)) return value.length === 0;

    if (this.isObject(value)) {
      for (var key in value) {
        if (value.hasOwnProperty(key)) {
          return false;
        }
      }

      return true;
    }

    return !allowEmptyString ? value === '' : false;
  },

  /**
   * 判断是否不为空
   * @function
   * @param {String|Array|Object} value 值
   * @returns {Boolean}
   */
  isNotEmpty: function isNotEmpty(value) {
    var flag = !this.isEmpty(value);
    return flag;
  },

  /**
   * 随机数
   * @param {Number} max 上限
   * @param {Number} min 下限
   * @return {Number} 上限到下限范围内的数据,如果没有下限，默认从1开始
   */
  random: function random(max, min) {
    var _min = min || 0;

    return window.parseInt(window.Math.random() * (max - _min + 1) + _min);
  },

  /**
   * 生成UUID
   * @return {string} uuid
   */
  uuid: function uuid() {
    var _uuid = 'xxxxxxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
      var random = window.Math.random() * 16 | 0;
      var v = c === 'x' ? random : random & 0x3 | 0x8;
      return v.toString(16);
    });

    return "u".concat(_uuid);
  },

  /**
   * 编辑执行JS代码
   * @param {String} string js代码
   * @param {String} errorMsg 错误备注
   * @returns {Object}
   */
  eval: function _eval(string, errorMsg) {
    if (this.isEmpty(string)) return string;

    try {
      return window.eval("(".concat(string, ")"));
    } catch (ex) {
      // eslint-disable-next-line no-console
      console.trace('eval error!');

      if (errorMsg) {
        // eslint-disable-next-line no-console
        console.error(errorMsg, ':', ex);
      }
    }

    return null;
  },

  /**
   * JSON编码
   * @function
   * @param {Object} object 对象
   * @returns {String}
   */
  encode: function encode(object) {
    var _this = this;

    if (object === null || object === undefined) {
      return 'null';
    }

    if (this.isString(object)) {
      /* const m = {
        '\b': '\\b',
        '\t': '\\t',
        '\n': '\\n',
        '\f': '\\f',
        '\r': '\\r',
        '"': '\\"',
        '\\': '\\\\',
        '\x0b': '\\u000b',
      };
      // eslint-disable-next-line no-control-regex
      const charToReplace = /[\\\"\x00-\x1f\x7f-\uffff]/g;
      const val = object.replace(charToReplace, (a) => {
        const c = m[a];
        return typeof c === 'string' ? c : `\\u${(`0000${a.charCodeAt(0).toString(16)}`).slice(-4)}`;
      }); */
      return JSON.stringify(object);
    }

    if (this.isDate(object)) {
      return this.date().format(object, 'YYYY-MM-DD HH:mm:ss');
    }

    if (this.isFunction(object)) {
      return object.toString();
    }

    if (this.isArray(object)) {
      var array = ['[', ''];
      object.forEach(function (item) {
        array.push(_this.encode(item), ',');
      });
      array[array.length - 1] = ']';
      return array.join('');
    }

    if (this.isObject(object)) {
      var obj = ['{', ''];
      this.each(object, function (val, key) {
        obj.push(_this.encode(key), ':', _this.encode(val), ',');
      });
      obj[obj.length - 1] = '}';
      return obj.join('');
    }

    return object;
  },

  /**
   * JSON解码
   * @function
   * @param {String} string JSON字符串
   * @returns {Object}
   */
  decode: function decode(string) {
    return this.eval("(".concat(string, ")"));
  },

  /**
   * HTML编码
   * @param {String} value html字符串
   * @returns {String} html转义字符串
   */
  htmlEncode: function htmlEncode(value) {
    var charToEntityRegex = new RegExp("(".concat(htmlCharKeys.join('|'), ")"), 'g');
    return !value ? value : String(value).replace(charToEntityRegex, function (match, capture) {
      return htmlEntityKeys[htmlCharKeys.indexOf(capture)];
    });
  },

  /**
   * HTML解码
   * @param {String} value html转义字符串
   * @returns {String} html字符串
   */
  htmlDecode: function htmlDecode(value) {
    var entityToCharRegex = new RegExp("(".concat(htmlEntityKeys.join('|'), "|&#[0-9]{1,5};)"), 'g');
    return !value ? value : String(value).replace(entityToCharRegex, function (match, capture) {
      var index = htmlEntityKeys.indexOf(capture);
      return index !== -1 ? htmlCharKeys[index] : String.fromCharCode(parseInt(capture.substr(2), 10));
    });
  },

  /**
   * 编码字符串
   * @param {String} str 字符串
   * @return {String} str
   */
  encodeURI: function encodeURI(str) {
    return encodeURIComponent(str);
  },

  /**
   * 解码字符串
   * @param {String} str 字符串
   * @return {String} str
   */
  decodeURI: function decodeURI(str) {
    return decodeURIComponent(str);
  },

  /**
   * 合并对象
   * @param {Object} object 原始对象
   * @param {Object} config 资源对象
   * @param {Boolean} [cover] 覆盖相同属性，默认true
   * @returns {Object} 新对象
   */
  apply: function apply(object, config, cover) {
    if (object && config && this.isObject(config)) {
      for (var key in config) {
        if (cover !== false || !object.hasOwnProperty(key)) {
          object[key] = config[key];
        }
      }
    }

    return object;
  },

  /**
   * 合并对象,如果有相同的属性不覆盖
   * @param {Object} object 原始对象
   * @param {Object} config 资源对象
   * @returns {Object} 新对象
   */
  applyIf: function applyIf(object, config) {
    return this.apply(object, config, false);
  },

  /**
   * 克隆对象
   * @param {Object} item 克隆对象
   * @returns {Object} 新对象
   */
  clone: function clone(item) {
    var _this2 = this;

    if (this.isEmpty(item)) {
      return item;
    } // DOM nodes
    // TODO proxy this to Ext.Element.clone to handle automatic id attribute changing
    // recursively


    if (item.nodeType && item.cloneNode) {
      return item.cloneNode(true);
    } // Date


    if (this.isDate(item)) {
      return new Date(item.getTime());
    }

    var _clone; // Array


    if (this.isArray(item)) {
      _clone = [];
      item.forEach(function (element) {
        _clone.push(_this2.clone(element));
      }); // Object
    } else if (this.isObject(item)) {
      _clone = {};

      for (var key in item) {
        _clone[key] = this.clone(item[key]);
      }
    }

    return _clone || item;
  },

  /**
   * 控制台消息
   * @param  {...any} msgs 消息
   */
  log: function log() {
    var _window$console$log;

    for (var _len = arguments.length, msgs = new Array(_len), _key = 0; _key < _len; _key++) {
      msgs[_key] = arguments[_key];
    }

    (_window$console$log = window.console.log).call.apply(_window$console$log, [window.console].concat(msgs));
  },

  /**
   * 获得对象的属性
   * @param {Object} obj 对象
   * @param {String} attr 属性
   * @return {Object}
   */
  getObjAttr: function getObjAttr(obj, attr) {
    if (this.isEmpty(obj)) {
      return obj;
    }

    if (this.isString(obj)) {
      obj = this.decode(obj);
    }

    return obj[attr];
  },

  /**
   * 将对象转到String
   * @param {Object} obj 对象
   * @return {String} string
   */
  toStr: function toStr(obj) {
    if (JE.isEmpty(obj)) {
      return '';
    }

    if (JE.isObject(obj) || JE.isArray(obj)) {
      return JE.encode(obj);
    }

    return "".concat(obj);
  },

  /**
   * 将JSON字符串转成Object
   * @param {String} str json字符串
   * @return {Object} obj
   */
  toObj: function toObj(str) {
    if (this.isEmpty(str)) {
      return null;
    }

    return this.decode(str, true);
  },

  /**
   * 将字符串转成Boolean
   * @param {String} str '1'或'0'
   * @return {Boolean} true/false
   */
  toBool: function toBool(str) {
    return str === '1' || str === 1;
  },

  /**
   * 将字符串转成数字
   * @param {String} str '1'或'0'
   * @return {Number} num
   */
  toNum: function toNum(str) {
    var num = 0;

    try {
      if (this.isNumeric(str)) {
        num = Number(str, 0);
      }
    } catch (e) {
      JE.log(e.message);
    }

    return num;
  },

  /**
   * 将数字转成字符串，位数不够补0
   * @param {Number} num 数字
   * @param {Number} length 数字长度
   * @return {String} str
   */
  toNumStr: function toNumStr(num, length) {
    // eslint-disable-next-line no-new-wrappers
    num = new String(this.toNum(num)).toString();

    for (var i = 0; i < length - num.length; i++) {
      num = "0".concat(num);
    }

    return num;
  },

  /**
   * 格式化字节
   * @param {Number} bytes 字节数
   * @return {String} str  (格式化后的 'B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB')
   */
  bytesToSize: function bytesToSize(bytes) {
    if (bytes === 0) return '0 B';
    var k = 1024; // or 1024

    var sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
    var i = Math.floor(Math.log(bytes) / Math.log(k));
    return "".concat((bytes / window.Math.pow(k, i)).toPrecision(3), " ").concat(sizes[i]);
  },

  /**
   * 循环数组或对象
   * @param {Object} object 数组|对象
   * @param {Function} fn 方法 params:value,index|key
   */
  each: function each(object, fn) {
    if (this.isNotEmpty(object)) {
      if (this.isArray(object) || object.forEach) {
        object.forEach(fn);
      } else if (this.isObject) {
        for (var key in object) {
          if (fn(object[key], key) === false) {
            break;
          }
        }
      }
    }
  },

  /**
   * 循环对象,为了处理Ext.iterate,建议使用JE.each
   * @param {Object} object 对象
   * @param {Function} fn 方法 params:key,value
   */
  iterate: function iterate(object, fn) {
    this.each(object, function (val, key) {
      return fn(key, val);
    });
  },

  /**
   * 四舍五入
   * toFixed方法可能会引起精度损失，并不是严格的四舍五入，所以改进了原生的toFixed
   * @param {Number} number 数字
   * @param {int} n (0~20) 小数位数
   * @returns {Number.prototype.toFixed}
   */
  toFixed: function toFixed(number, n) {
    if (n > 20 || n < 0) {
      throw new RangeError('小数范围：0-20，请修改！');
    }

    if (Number.isNaN(number) || number >= window.Math.pow(10, 21)) {
      return number.toString();
    }

    if (typeof n === 'undefined' || n === 0) {
      return Math.round(number).toString();
    }

    var result = number.toString();
    var arr = result.split('.'); // 整数的情况

    if (arr.length < 2) {
      result += '.';

      for (var i = 0; i < n; i++) {
        result += '0';
      }

      return result;
    }

    var integer = arr[0];
    var decimal = arr[1];

    if (decimal.length === n) {
      return result;
    }

    if (decimal.length < n) {
      result += '.';

      for (var _i = 0; _i < n - decimal.length; _i++) {
        result += '0';
      }

      return result;
    }

    result = "".concat(integer, ".").concat(decimal.substr(0, n));
    var last = decimal.substr(n, n + 1); // 四舍五入，转换为整数再处理，避免浮点数精度的损失

    if (window.parseInt(last) >= 5) {
      var x = window.Math.pow(10, n);
      result = (parseFloat(result) * x + 1) / x;
      result = result.toFixed(n);
    }

    return this.toNum(result);
  },

  /**
   * 将数值转成成金额大写形式
   * @param {Number} numberValue 金额数字
   * @return {String} 金额大写
   */
  toRMBNumber: function toRMBNumber(numberValue) {
    numberValue = window.Math.round(this.toNum(numberValue) * 100).toString(); // 数字金额

    var chineseValue = ''; // 转换后的汉字金额

    var String1 = '零壹贰叁肆伍陆柒捌玖'; // 汉字数字

    var String2 = '万仟佰拾亿仟佰拾万仟佰拾元角分'; // 对应单位

    var len = numberValue.length; // numberValue 的字符串长度

    var Ch1; // 数字的汉语读法

    var Ch2; // 数字位的汉字读法

    var nZero = 0; // 用来计算连续的零值的个数

    var String3; // 指定位置的数值

    if (len > 15) {
      alert('超出计算范围');
      return '';
    }

    if (numberValue === 0) {
      chineseValue = '零元整';
      return chineseValue;
    }

    String2 = String2.substr(String2.length - len, len); // 取出对应位数的STRING2的值

    for (var i = 0; i < len; i++) {
      String3 = parseInt(numberValue.substr(i, 1), 10); // 取出需转换的某一位的值

      if (i != len - 3 && i != len - 7 && i != len - 11 && i != len - 15) {
        if (String3 == 0) {
          Ch1 = '';
          Ch2 = '';
          nZero += 1;
        } else if (String3 != 0 && nZero != 0) {
          Ch1 = "\u96F6".concat(String1.substr(String3, 1));
          Ch2 = String2.substr(i, 1);
          nZero = 0;
        } else {
          Ch1 = String1.substr(String3, 1);
          Ch2 = String2.substr(i, 1);
          nZero = 0;
        }
      } else {
        // 该位是万亿，亿，万，元位等关键位
        if (String3 != 0 && nZero != 0) {
          Ch1 = "\u96F6".concat(String1.substr(String3, 1));
          Ch2 = String2.substr(i, 1);
          nZero = 0;
        } else if (String3 != 0 && nZero == 0) {
          Ch1 = String1.substr(String3, 1);
          Ch2 = String2.substr(i, 1);
          nZero = 0;
        } else if (String3 == 0 && nZero >= 3) {
          Ch1 = '';
          Ch2 = '';
          nZero += 1;
        } else {
          Ch1 = '';
          Ch2 = String2.substr(i, 1);
          nZero += 1;
        }

        if (i == len - 11 || i == len - 3) {
          // 如果该位是亿位或元位，则必须写上
          Ch2 = String2.substr(i, 1);
        }
      }

      chineseValue = chineseValue + Ch1 + Ch2;
    }

    if (String3 == 0) {
      // 最后一位（分）为0时，加上“整”
      chineseValue += '整';
    }

    return chineseValue;
  },

  /**
   * 取值，如果空，取默认值
   * @param {Object} value 值
   * @param {Object} defaultValue 默认值
   * @returns {Object}
   */
  value: function value(_value, defaultValue) {
    return this.isEmpty(_value) ? defaultValue : _value;
  },

  /**
   * 获得文件图标
   * @param {String} fileName 文件名
   * @returns {Object}
   */
  getFileIcon: function getFileIcon(fileName) {
    var suffix = fileName.split('.').pop().toLocaleLowerCase(); // fileName.substring(fileName.indexOf('.') + 1).toLocaleLowerCase();

    var icon = 'unknownfile';

    if (['doc', 'docx'].indexOf(suffix) != -1) {
      icon = 'word';
    } else if (['xls', 'xlsx'].indexOf(suffix) != -1) {
      icon = 'excel';
    } else if (['ppt', 'pptx'].indexOf(suffix) != -1) {
      icon = 'ppt';
    } else if (['rar', 'zip', 'arj', 'gz', 'z'].indexOf(suffix) != -1) {
      icon = 'zip';
    } else if (['bmp', 'git', 'jpg', 'pic', 'png', 'tif'].indexOf(suffix) != -1) {
      icon = 'image';
    } else if (suffix == 'pdf') {
      icon = 'pdf';
    } else if (suffix == 'txt') {
      icon = 'txt';
    }

    return {
      type: icon,
      icon: "jeicon jeicon-".concat(icon),
      html: "".concat('<svg class="jeicon" aria-hidden="true">' + '<use xlink:href="#jeicon-').concat(icon, "\"></use>") + '</svg>'
    };
  },

  /**
   * 分隔字符串
   * @param {String} str 字符串
   * @param {String} exp 正则
   * @returns {Array}
   */
  split: function split(str, exp) {
    return JE.isEmpty(str) ? [] : str.split(exp);
  },

  /**
   * 创建样式
   * @param {String} cssText  样式
   * @param {String} [id]   样式ID
   */
  createStyleSheet: function createStyleSheet(cssText, id) {
    var doc = document;
    var head = doc.getElementsByTagName('head')[0];
    var styleEl = doc.createElement('style');
    styleEl.setAttribute('type', 'text/css');

    if (id) {
      styleEl.setAttribute('id', id);
    }

    try {
      styleEl.appendChild(doc.createTextNode(cssText));
    } catch (e) {
      styleEl.cssText = cssText;
    }

    head.appendChild(styleEl);
  },

  /**
   * 复制
   * @param {String} text 需要复制的文字
   */
  copy: function copy(text) {
    if (window.clipboardData) {
      window.clipboardData.setData('Text', text);
      JE.msg('复制完成');
    } else {
      JE.msg('不支持复制');
    }
  },

  /**
   * 定时器
   * @param {Function} fn 定时函数，返回false，终止定时器
   * @param {Number} time 循环时间，毫秒
   * @param {Boolean} [once] 执行一次
   * @returns {Object}
   */
  defer: function defer(fn, time, once) {
    if (JE.isEmpty(fn)) return;

    if (once) {
      var _t = setTimeout(function () {
        fn.call();
      }, JE.value(time, 1000));

      return {
        clear: function clear() {
          clearTimeout(_t);
        },
        fn: _t
      };
    }

    var t = setInterval(function () {
      var flag = fn.call();

      if (flag == false) {
        // 停止计时
        clearInterval(t);
      }
    }, JE.value(time, 1000));
    return {
      clear: function clear() {
        clearInterval(t);
      },
      fn: t
    };
  },

  /**
   * 取消当前获得焦点的节点
   * @param {HTMLElement} dom dom节点
   */
  clearFocus: function clearFocus(dom) {
    if (document.activeElement && document.activeElement !== dom) {
      if (dom && document.activeElement == dom) {
        return;
      }

      document.activeElement.blur();
    }
  },

  /**
   * 消息提醒
   * @param {String} msg 消息
   */
  msg: function msg(_msg) {
    mui.toast(_msg);
  },

  /**
   * 确认信息框
   * @example
   *     JE.alert('提示信息',function(){},'[title]','[buttonValue]');
   * @param {String} msg  提示信息
   * @param {Function} fn  关闭提示框后的回调方法
   * @param {String} [title]  提示框标题，默认‘提示’
   * @param {String} [buttonValue]  按钮文字，默认‘确定’
   */
  alert: function alert(msg, fn, title, buttonValue) {
    msg = JE.value(msg, '');
    buttonValue = JE.value(buttonValue, '确定');

    var newfn = function newfn(e) {
      if (e.index >= 0) {
        JE.playAudio4Btn();
      }

      if (fn) {
        fn(e);
      }
    };

    mui.alert(msg, title, buttonValue, newfn); // plus.nativeUI.alert(msg,callback,title,buttonValue);
  },

  /**
   * 选择信息框,多按钮信息框
   * @example
   *     JE.confirm('提示信息',function(e){
  *         //var index = e.index;//按钮的索引
  *     },'[title]',[btnArray]);
   * @param {String} msg 提示信息
   * @param {Function} fn  关闭提示框后的回调方法
   * @param {String} [title]  标题
   * @param {Array} [btnArray] 按钮信息 ['取消', '确定']
   * @param {String} [tip]  提示
   */
  confirm: function confirm(msg, fn, title, btnArray) {
    msg = JE.value(msg, '');
    btnArray = JE.value(btnArray, ['否', '是']); // plus 环境下 0是确定，1是取消

    var newfn = function newfn(e) {
      // let isSuccess = false;
      // if ((window.plus && e.index === 0) || (!window.plus && e.index === 1)) {
      //   isSuccess = true;
      // } else {
      //   isSuccess = false;
      // }
      // const ret = {
      //   index: isSuccess ? 1 : 0,
      //   value: '',
      // };
      if (e.index >= 0) {
        JE.playAudio4Btn();
      }

      if (fn) {
        fn(e);
      }
    };

    mui.confirm(msg, title, btnArray, newfn); // plus.nativeUI.confirm(msg,fn,title,btnArray);
  },

  /**
   * 输入提示框
   * @example
   *     JE.prompt('提示信息',function(e){
  *         //var index = e.index;//按钮的索引
  *         //var text = e.value;//'输入的文字';
  *     },'[title]',[btnArray],'[tip]');
   * @param {String} msg 提示信息
   * @param {Function} fn  关闭提示框后的回调方法
   * @param {String} [title]  标题
   * @param {Array} [btnArray] 按钮信息 ['取消', '确定']
   * @param {String} [tip]  提示
   */
  prompt: function prompt(msg, fn, title, btnArray, tip) {
    msg = JE.value(msg, '');
    btnArray = JE.value(btnArray, ['取消', '确定']);

    var newfn = function newfn(e) {
      if (e.index >= 0) {
        JE.playAudio4Btn();
      }

      if (fn) {
        fn(e);
      }
    };

    mui.prompt(msg, tip, title, btnArray, newfn); // plus.nativeUI.prompt(msg,fn,title,tip,btnArray);
  },

  /**
   * 错误提醒
   * @param {Object|String} msg 提示信息
   * @param {String} type(system系统错误，...后续错误类型再加，目前支持一种)
   */
  error: function error(msg) {
    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'system';
    var cfg = JE.isString(msg) ? {
      msg: msg
    } : msg;

    if (type == 'system') {
      mui.openWindow({
        id: '__systemerror',
        url: '_www/plugins/error/systemError.html',
        extras: {
          error_msg: JE.value(cfg.msg, '')
        },
        show: {
          aniShow: 'slide-in-right'
        },
        waiting: {
          autoShow: true // 自动显示等待框，默认为true

        }
      });
      JE.enableConfig(plus.webview.getWebviewById('__systemerror'));
    }
  },

  /**
   * 通过id获得dom对象
   * @param {String} id domID
   * @param {Boolean} [returnEl] 返回Element对象
   * @returns {HTMLElement|Element}
   */
  get: function get(id, returnEl) {
    return returnEl ? JE.getEl(id) : document.getElementById(id);
  },

  /**
   * 返回Element对象
   * @param {String|HTMLElement|Element} element id|dom|element
   * @returns {Element}
   */
  getEl: function getEl(element) {
    var el = new _Element["default"](element);
    return el.isElement ? el : null;
  },

  /**
   * dom选择器
   * @param {String} selector 选择表达式
   * @param {Boolean} [multiple] 多选
   * @param {Object} [root] 根节点
   * @returns {HTMLElement}
   */
  select: function select(selector, multiple, root) {
    root = root || document;
    return root[multiple ? 'querySelectorAll' : 'querySelector'](selector);
  },

  /**
   * 包含样式
   * @param {HTMLElement} dom dom
   * @param {String} cls 样式名
   * @returns {Boolean} 包含结果
   */
  hasClass: function hasClass(dom, cls) {
    return dom && dom.classList.contains(cls);
  },

  /**
   * 切换类名
   * @param {HTMLElement} dom dom
   * @param {String} cls 样式名
   * @param {Boolean} toggle true添加样式，false删除样式
   * @returns {Boolean} 操作结果
   */
  toggleClass: function toggleClass(dom, cls, toggle) {
    return dom && dom.classList.toggle(cls, toggle);
  },

  /**
   * 格式化字符串，获取指定长度，不够则以str向前填充   如果长度不足则返回原值
   * @param {String} value 字符串
   * @param {Number} length 长度
   * @param {String} str 填充字符
   * @return {String}
   */
  preFillUp: function preFillUp(value, length, str) {
    var beforeStr = '';

    for (var i = 0; i < length - "".concat(value).length; i++) {
      beforeStr += str;
    }

    return beforeStr + value;
  },

  /**
   * 去掉时分秒
   * @param {Date} date 日期
   * @returns {Date}
   */
  clearTime: function clearTime(date) {
    var format = 'YYYY-MM-DD';
    return this.date(this.date(date).format(format), format).toDate();
  },

  /**
   * 延时任务
   * @example
   * const task = JE.delayedTask(function(){
  *  alert('延时任务');
  * });
   * task.delay(200);
   * @param {Function} fn 方法
   * @param {Object} [scope] 作用域
   * @param {Array} args 参数
   * @returns {Task} 延时任务
   */
  delayedTask: function delayedTask(fn, scope, args) {
    return new _DelayedTask["default"](fn, scope, args);
  },

  /**
   * 剔除html标签
   * @param {String} html html内容
   * @returns {String} text
   */
  stripHtmlTags: function stripHtmlTags(html) {
    return !html ? html : String(html).replace(/<\/?[^>]+>/gi, '');
  },

  /**
   * 创建数据集
   * @param {Object} config 配置
   * @returns {Store}
   */
  createStore: function createStore(config) {
    return new _Store["default"](config);
  },

  /**
   * 注册dom事件
   * @param {Object} idOrdom  dom的id或者对象
   * @param {String} eventName  事件名
   * @param {Object} handle  事件方法
   * @returns {Element}
   */
  on: function on(idOrdom, eventName, handle) {
    var el = JE.getEl(idOrdom);

    if (el) {
      el.on(eventName, handle); // dom.addEventListener(eventName, handle);
    }

    return el;
  },

  /**
   * 替换字符串的所有内容
   * @param {String} str 操作的字符串
   * @param {String} targetStr 目标字符串
   * @param {String} replaceStr 替换字符串
   * @returns {String}
   */
  replaceAll: function replaceAll(str, targetStr, replaceStr) {
    return str ? str.replace(new RegExp(targetStr, 'gm'), replaceStr) : '';
  },

  /**
   * 记录连续点击
   * @param el dom元素
   * @param tapCount 点击次数
   * @param cb 符合条件时候执行的操作
   * @param distance 间隔时间
   */
  continuousTap: function continuousTap(el) {
    var tapCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
    var cb = arguments.length > 2 ? arguments[2] : undefined;
    var distance = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1000;

    if (!(el instanceof HTMLElement)) {
      console.error('异常的dom元素');
      return;
    }

    var lastTime = 0;
    var count = 1;
    el.addEventListener('tap', function (event) {
      event.preventDefault();
      var currentTime = new Date().getTime(); // 记录两次相连的点击时间间隔，大于1秒，重新记录点击次数

      count = currentTime - lastTime < distance ? count + 1 : 1;
      lastTime = new Date().getTime();

      if (tapCount <= count) {
        count = 0;
        cb && cb();
      }
    });
  }
};
exports["default"] = _default;

/***/ })

/******/ });
});
